/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/arena/chat/route";
exports.ids = ["app/api/arena/chat/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Farena%2Fchat%2Froute&page=%2Fapi%2Farena%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Farena%2Fchat%2Froute.ts&appDir=%2FUsers%2Fchristoffersundberg%2Frecta-v2%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fchristoffersundberg%2Frecta-v2&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Farena%2Fchat%2Froute&page=%2Fapi%2Farena%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Farena%2Fchat%2Froute.ts&appDir=%2FUsers%2Fchristoffersundberg%2Frecta-v2%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fchristoffersundberg%2Frecta-v2&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_christoffersundberg_recta_v2_app_api_arena_chat_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/arena/chat/route.ts */ \"(rsc)/./app/api/arena/chat/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/arena/chat/route\",\n        pathname: \"/api/arena/chat\",\n        filename: \"route\",\n        bundlePath: \"app/api/arena/chat/route\"\n    },\n    resolvedPagePath: \"/Users/christoffersundberg/recta-v2/app/api/arena/chat/route.ts\",\n    nextConfigOutput,\n    userland: _Users_christoffersundberg_recta_v2_app_api_arena_chat_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZhcmVuYSUyRmNoYXQlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmFyZW5hJTJGY2hhdCUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmFyZW5hJTJGY2hhdCUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmNocmlzdG9mZmVyc3VuZGJlcmclMkZyZWN0YS12MiUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGVXNlcnMlMkZjaHJpc3RvZmZlcnN1bmRiZXJnJTJGcmVjdGEtdjImaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQStGO0FBQ3ZDO0FBQ3FCO0FBQ2U7QUFDNUY7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHlHQUFtQjtBQUMzQztBQUNBLGNBQWMsa0VBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzREFBc0Q7QUFDOUQ7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDMEY7O0FBRTFGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVjdGEvPzY5MDciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy9jaHJpc3RvZmZlcnN1bmRiZXJnL3JlY3RhLXYyL2FwcC9hcGkvYXJlbmEvY2hhdC9yb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvYXJlbmEvY2hhdC9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2FyZW5hL2NoYXRcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL2FyZW5hL2NoYXQvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvY2hyaXN0b2ZmZXJzdW5kYmVyZy9yZWN0YS12Mi9hcHAvYXBpL2FyZW5hL2NoYXQvcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyB3b3JrQXN5bmNTdG9yYWdlLCB3b3JrVW5pdEFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICB3b3JrQXN5bmNTdG9yYWdlLFxuICAgICAgICB3b3JrVW5pdEFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHdvcmtBc3luY1N0b3JhZ2UsIHdvcmtVbml0QXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Farena%2Fchat%2Froute&page=%2Fapi%2Farena%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Farena%2Fchat%2Froute.ts&appDir=%2FUsers%2Fchristoffersundberg%2Frecta-v2%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fchristoffersundberg%2Frecta-v2&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./app/api/arena/chat/route.ts":
/*!*************************************!*\
  !*** ./app/api/arena/chat/route.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_claude_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/claude-client */ \"(rsc)/./lib/claude-client.ts\");\n/* harmony import */ var _lib_cluster_engine__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/cluster-engine */ \"(rsc)/./lib/cluster-engine.ts\");\n/* harmony import */ var _lib_confidence__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/confidence */ \"(rsc)/./lib/confidence.ts\");\n/* harmony import */ var _lib_quality_analysis__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/quality-analysis */ \"(rsc)/./lib/quality-analysis.ts\");\n\n\n\n\n\nconst SYSTEM_PROMPT = `Du är Recta – en erfaren kollega som hjälper med rekryteringsbeslut genom naturlig konversation.\n\nKRITISKA REGLER:\n1. STÄLL ALDRIG FLERA FRÅGOR SAMTIDIGT - endast EN fokuserad fråga per svar\n2. VARJE FRÅGA MÅSTE VARA BESVARBAR PÅ 1-2 MENINGAR - undvik komplexa flerdelade frågor\n3. NÄR FÖRTROENDE NÅR 85%+ - sluta ställa nya frågor och fråga om användaren är redo för nästa fas\n4. VÄNTA PÅ ANVÄNDARENS BEKRÄFTELSE innan du går vidare\n5. ALDRIG inkludera fasnummer eller \"FAS X:\" i dina svar - bara ren konversation\n6. BYGG FÖRSTÅELSE PROGRESSIVT - använd föregående svar för att informera nästa fråga\n\nVIKTIGT: Om du ställer flera frågor i samma meddelande bryter du mot reglerna. Ställ ENDAST EN fråga per svar.\n\nEXEMPEL PÅ KORREKT BETEENDE:\n❌ FEL: \"Vad orsakar förseningarna? Vad sa styrelsen?\"\n✅ RÄTT: \"Vad orsakar förseningarna i era finansiella rapporter?\"\n\n❌ FEL: \"Hur mycket försenade är rapporterna? Vilka konsekvenser har det?\"\n✅ RÄTT: \"Hur mycket försenade är era finansiella rapporter vanligtvis?\"\n\nFASER:\n1. Problem & Pain Point 🎯 - Identifiera det specifika problemet\n2. Impact & Urgency ⚡ - Kvantifiera påverkan och brådskan  \n3. Success Criteria ✅ - Definiera framgångskriterier\n4. Resources & Budget 💰 - Säkerställ resurser och budget\n5. Organization & Culture 🏢 - Validera organisationsberedskap\n6. Alternatives & Risks 🔄 - Utvärdera alternativ och risker\n\nSTRATEGISK FRÅGESTÄLLNING (SPIN + Challenger):\n- Fokusera på KONFIDENTIELL information endast användaren känner till\n- Ställ frågor om mänskliga dynamiker, politik, stakeholder-reaktioner\n- Få konkreta detaljer: namn, datum, belopp, beteenden\n- Undvik generiska affärsfrågor som kan besvaras genom marknadsforskning\n- Utmana antaganden med insikter och perspektiv\n- Vägled användaren att upptäcka dolda problem\n\nFRÅGEKVALITETSKRITERIER:\n1. EN fråga per meddelande - flera frågor överväldigar användaren och minskar svarsfrekvensen\n2. Frågan måste vara besvarbar på 1-2 meningar - undvik komplexa flerdelade frågor\n3. Fokusprogression - varje fråga ska bygga naturligt på föregående svar\n4. Tydlig avsikt - användaren ska förstå varför denna specifika fråga är viktig för rekryteringsanalysen\n\nKONVERSATIONSTEMPO:\n- Ställ EN fokuserad fråga\n- Vänta på svar\n- Använd svaret för att informera nästa strategiska fråga\n- Bygg förståelse progressivt istället för informationsdumpning\n\nEXEMPEL PÅ STRATEGISKA FRÅGOR:\n❌ Dåligt: \"Hur påverkar det er säljorganisation?\"\n✅ Bra: \"Vilka av era säljare har redan börjat fråga om nya jobb?\"\n\n❌ Dåligt: \"Vad händer med skalbarhet?\"\n✅ Bra: \"Vilka specifika kunder har uttryckt oro över er säljledning?\"\n\n❌ Dåligt: \"Hur påverkar detta er tekniska skuld?\"\n✅ Bra: \"Vad sa styrelsen när de fick höra om situationen?\"\n\nEXEMPEL PÅ FRÅGEKVALITET:\n❌ Dåligt: \"Vad ser ni som den största utmaningen med att er nuvarande säljchef lämnar? Hur påverkar det er säljorganisation? Vad händer med er skalbarhet?\"\n✅ Bra: \"Vad ser ni som den största utmaningen med att er nuvarande säljchef lämnar?\"\n\n❌ Dåligt: \"Berätta om era finansiella utmaningar, hur påverkar det er rapportering, och vilka compliance-risker finns?\"\n✅ Bra: \"Vilka specifika finansiella utmaningar har ni just nu?\"\n\nKONVERSATIONSSTIL:\n- Prata naturligt och direkt, som en erfaren kollega\n- Använd korta, konkreta frågor som fokuserar på intern information\n- Undvik formella övergångar och sammanfattningar\n- Bekräfta kort och gå vidare med strategiska följdfrågor\n- Ställ följdfrågor för att förstå helheten\n- Håll stycken korta och naturliga\n- EN ENDA fokuserad fråga per svar\n- Varje fråga ska vara besvarbar på 1-2 meningar\n- Bygg förståelse progressivt, inte informationsdumpning\n\nEXEMPEL PÅ NATURLIG KONVERSATION:\n❌ Undvik: \"Låt mig sammanfatta för att säkerställa att jag förstått korrekt. Baserat på er information verkar ni ha utmaningar med...\"\n✅ Använd: \"Okej, så ni behöver någon med enterprise-erfarenhet. Vad kostar det er att sakna denna person?\"\n\n❌ Undvik: \"Kan du kvantifiera den ekonomiska påverkan av detta problem?\"\n✅ Använd: \"Vad kostar det er?\"\n\n❌ Undvik: \"För att bättre förstå situationen, skulle du kunna beskriva...\"\n✅ Använd: \"Berätta mer om...\"\n\nFASÖVERGÅNG:\nDu kommer att få information om när användaren har tillräckligt med information för att gå vidare.\nNär du får \"PHASE_STATUS: READY_FOR_PROGRESSION\" - föreslå att gå vidare till nästa fas istället för att ställa fler frågor.\n\nNär fasen är redo för progression, säg:\n\"Vi har nu samlat tillräcklig information om [fasnamn]. Är du redo att gå vidare till nästa fas där vi kommer att utforska [nästa fas]?\"\n\nSTOPPA HÄR - ställ inga fler frågor efter detta meddelande. Vänta på användarens val.`;\nasync function POST(req) {\n    try {\n        console.log(\"🔍 API - Starting /api/arena/chat request\");\n        const body = await req.json();\n        try {\n            console.log(\"🔍 API - Request body (keys):\", body ? Object.keys(body) : null);\n            console.log(\"🔍 API - Messages length:\", Array.isArray(body?.messages) ? body.messages.length : null);\n            console.log(\"🔍 API - currentCluster:\", body?.currentCluster);\n            console.log(\"🔍 API - canProgressToNext:\", body?.canProgressToNext);\n        } catch  {}\n        if (!body || !Array.isArray(body.messages) || body.messages.length === 0) {\n            console.log(\"🔍 API - Error: Invalid request body\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                message: \"\",\n                error: \"Invalid request: messages required\"\n            }, {\n                status: 400\n            });\n        }\n        // Validate messages structure\n        const sanitizedMessages = body.messages.filter((m)=>m && (m.role === \"user\" || m.role === \"assistant\") && typeof m.content === \"string\").map((m)=>({\n                role: m.role,\n                content: (m.content || \"\").toString()\n            }));\n        if (sanitizedMessages.length === 0) {\n            console.log(\"🔍 API - Error: No valid messages after sanitization\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                message: \"\",\n                error: \"Invalid messages format\"\n            }, {\n                status: 400\n            });\n        }\n        const last = sanitizedMessages[sanitizedMessages.length - 1];\n        if (!last || last.role !== \"user\" || !last.content?.trim()) {\n            console.log(\"🔍 API - Error: Last message invalid\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                message: \"\",\n                error: \"Last message must be from user with content\"\n            }, {\n                status: 400\n            });\n        }\n        console.log(\"🔍 API - Calling chatWithClaude...\");\n        // Detect role context for role-aware responses\n        const roleContext = (0,_lib_cluster_engine__WEBPACK_IMPORTED_MODULE_2__.detectRoleContext)(sanitizedMessages);\n        console.log(\"🔍 API - Role context detected:\", roleContext);\n        // Build dynamic system prompt based on completion status and role context\n        let dynamicSystemPrompt = SYSTEM_PROMPT;\n        // Add role-specific context to system prompt\n        if (roleContext.role !== 'default') {\n            dynamicSystemPrompt += `\\n\\nROLLSPECIFIK KONTEXT:\nDu hjälper med rekrytering av en ${roleContext.role.toUpperCase()} (${roleContext.seniority} nivå).\nFokusera på ${roleContext.department}-specifika utmaningar och använd relevant terminologi.\nStäll frågor som är relevanta för denna rolltyp.`;\n        }\n        // Log payload size to catch oversized requests\n        try {\n            const approxBytes = JSON.stringify(body).length;\n            console.log(\"🔍 API - Approx payload bytes:\", approxBytes);\n        } catch  {}\n        if (body.canProgressToNext && body.currentCluster) {\n            const clusterNames = {\n                'pain-point': 'Problem & Pain Point',\n                'impact-urgency': 'Impact & Urgency',\n                'success-criteria': 'Success Criteria',\n                'resources-budget': 'Resources & Budget',\n                'organization-culture': 'Organization & Culture',\n                'alternatives-risks': 'Alternatives & Risks'\n            };\n            const nextClusterNames = {\n                'pain-point': 'Impact & Urgency',\n                'impact-urgency': 'Success Criteria',\n                'success-criteria': 'Resources & Budget',\n                'resources-budget': 'Organization & Culture',\n                'organization-culture': 'Alternatives & Risks',\n                'alternatives-risks': 'slutrapporten'\n            };\n            const currentPhaseName = clusterNames[body.currentCluster] || body.currentCluster;\n            const nextPhaseName = nextClusterNames[body.currentCluster] || 'nästa fas';\n            const phaseStatusMessage = `\\n\\nPHASE_STATUS: READY_FOR_PROGRESSION (Current: ${currentPhaseName} -> Next: ${nextPhaseName}; confidence=${body.clusterProgress?.confidence || 0}%)`;\n            dynamicSystemPrompt += phaseStatusMessage;\n            console.log(\"🔍 API - Added phase completion status to system prompt\");\n        }\n        // Limit context to last 10 messages to keep payload small\n        const recent = sanitizedMessages.slice(-10);\n        console.log(\"🔍 API - Using recent messages:\", recent.length);\n        // Convert simple messages to ChatMessage format for claude-client\n        const chatMessages = recent.map((msg)=>({\n                role: msg.role,\n                content: msg.content,\n                timestamp: new Date().toISOString()\n            }));\n        let text = \"\";\n        try {\n            const result = await (0,_lib_claude_client__WEBPACK_IMPORTED_MODULE_1__.chatWithClaude)(chatMessages, dynamicSystemPrompt);\n            text = result.text;\n            // Enhance response with strategic questioning (SPIN + Challenger) if needed\n            if (roleContext.role !== 'default' && body.currentCluster && !body.canProgressToNext) {\n                // Determine if we should use Challenger insights or strategic questions\n                const shouldUseChallenger = Math.random() < 0.3; // 30% chance to use Challenger insights\n                if (shouldUseChallenger) {\n                    // Use Challenger Sale methodology to challenge assumptions\n                    const challengerInsight = (0,_lib_cluster_engine__WEBPACK_IMPORTED_MODULE_2__.getChallengerInsight)(roleContext, body.currentCluster, sanitizedMessages);\n                    console.log(\"🔍 API - Challenger insight generated:\", challengerInsight);\n                    // If the response is generic, enhance it with Challenger insight\n                    if (text.length < 100 || !text.includes(roleContext.department)) {\n                        text = `${text}\\n\\n${challengerInsight}`;\n                    }\n                } else {\n                    // Use strategic SPIN questions focused on confidential information\n                    const strategicQuestion = (0,_lib_cluster_engine__WEBPACK_IMPORTED_MODULE_2__.getRoleAwareQuestion)(body.currentCluster, roleContext, []);\n                    console.log(\"🔍 API - Strategic question generated:\", strategicQuestion);\n                    // If the response is generic, enhance it with strategic question\n                    if (text.length < 100 || !text.includes(roleContext.department)) {\n                        text = `${text}\\n\\n${strategicQuestion}`;\n                    }\n                }\n                // Post-process to ensure only one question is asked\n                const questionMarks = (text.match(/\\?/g) || []).length;\n                if (questionMarks > 1) {\n                    console.log(\"🔍 API - Multiple questions detected, keeping only the first one\");\n                    const firstQuestionEnd = text.indexOf('?') + 1;\n                    text = text.substring(0, firstQuestionEnd);\n                }\n            }\n        } catch (err) {\n            console.error(\"❌ API - Claude call failed:\", err?.message);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                message: \"\",\n                error: err?.message || \"Claude failed\"\n            }, {\n                status: 502\n            });\n        }\n        console.log(\"🔍 API - Claude response length:\", text?.length || 0);\n        // Generate quick response suggestions using role context and exact question\n        let quickResponses = [];\n        if (roleContext.role !== 'default' && body.currentCluster) {\n            quickResponses = await (0,_lib_cluster_engine__WEBPACK_IMPORTED_MODULE_2__.generateQuickResponseSuggestions)(roleContext, body.currentCluster, // Pass the last assistant question (text) to ensure relevance\n            text, sanitizedMessages);\n            console.log(\"🔍 API - Quick response suggestions generated:\", quickResponses);\n        }\n        // Compute cumulative server-side analysis using entire conversation\n        const currentCluster = body.currentCluster || 'pain-point';\n        const lastUserMessage = last.content;\n        // Previous confidence from client state (if provided)\n        const prevConfidence = Math.max(0, Math.round(body.clusterProgress?.confidence || 0));\n        console.log('🔍 API - CUMULATIVE: prevConfidence =', prevConfidence);\n        // Analyze only the NEW information from the last user message\n        const msgAnalysis = (0,_lib_cluster_engine__WEBPACK_IMPORTED_MODULE_2__.analyzeMessage)(lastUserMessage, currentCluster, roleContext);\n        const qa = (0,_lib_quality_analysis__WEBPACK_IMPORTED_MODULE_4__.analyzeUniversalQuality)(lastUserMessage, lastUserMessage.toLowerCase());\n        // Derive a reasonable incremental confidence from the message analysis\n        // Use a fraction of the per-message confidence, scaled by novelty proxy (categoriesCovered)\n        const noveltyFactor = Math.max(1, qa.categoriesCovered); // 1..6\n        const incremental = Math.round(Math.min(15, msgAnalysis.confidence / 3 + noveltyFactor * 1.5));\n        console.log('🔍 API - CUMULATIVE: msgAnalysis.confidence =', msgAnalysis.confidence);\n        console.log('🔍 API - CUMULATIVE: qa.categoriesCovered =', qa.categoriesCovered);\n        console.log('🔍 API - CUMULATIVE: incremental added =', incremental);\n        // Role-specific cap\n        const roleCap = _lib_confidence__WEBPACK_IMPORTED_MODULE_3__.ROLE_COMPLETION_THRESHOLDS[roleContext.seniority]?.[roleContext.department] ?? 80;\n        // Cumulative total; never decrease\n        let cumulativeConfidence = prevConfidence + incremental;\n        if (cumulativeConfidence < prevConfidence) cumulativeConfidence = prevConfidence;\n        cumulativeConfidence = Math.min(cumulativeConfidence, roleCap);\n        console.log('🔍 API - CUMULATIVE: roleCap =', roleCap);\n        console.log('🔍 API - CUMULATIVE: final cumulativeConfidence =', cumulativeConfidence);\n        // Phase completion (server-side)\n        const serverCanProgress = body.clusterProgress ? (0,_lib_cluster_engine__WEBPACK_IMPORTED_MODULE_2__.checkClusterCompletion)(body.clusterProgress, currentCluster) : false;\n        const payload = {\n            message: text ?? \"\",\n            roleContext: {\n                role: roleContext.role,\n                seniority: roleContext.seniority,\n                department: roleContext.department\n            },\n            analysis: {\n                // Return cumulative confidence instead of per-message\n                confidence: cumulativeConfidence,\n                quality: msgAnalysis.quality,\n                categoriesCovered: qa.categoriesCovered,\n                missingInsights: msgAnalysis.missingInfo\n            },\n            quickResponses,\n            canProgressToNext: !!serverCanProgress\n        };\n        console.log(\"🔍 API - Structured response payload:\", payload);\n        // Backward compatible: older clients read { message, quickResponses }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(payload, {\n            status: 200\n        });\n    } catch (error) {\n        console.error(\"🔍 API - Error details:\", error);\n        console.error(\"🔍 API - Error stack:\", error instanceof Error ? error.stack : \"No stack trace\");\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            message: \"\",\n            error: error instanceof Error ? error.message : \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/arena/chat/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/claude-client.ts":
/*!******************************!*\
  !*** ./lib/claude-client.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   chatWithClaude: () => (/* binding */ chatWithClaude),\n/* harmony export */   generateChatResponse: () => (/* binding */ generateChatResponse)\n/* harmony export */ });\n/* harmony import */ var _anthropic_ai_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @anthropic-ai/sdk */ \"(rsc)/./node_modules/@anthropic-ai/sdk/index.mjs\");\n\nconst API_KEY = process.env.ANTHROPIC_API_KEY;\nif (!API_KEY) {\n    // Fail early in dev; in production the route will handle this\n    // eslint-disable-next-line no-console\n    console.warn(\"ANTHROPIC_API_KEY is not set. Claude client will fail at runtime.\");\n}\nconsole.log(\"🔍 Claude Client - API Key present:\", !!API_KEY);\nconsole.log(\"🔍 Claude Client - API Key length:\", API_KEY?.length || 0);\nconst anthropic = new _anthropic_ai_sdk__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n    apiKey: API_KEY,\n    dangerouslyAllowBrowser: true // Temporary fix for development\n});\nfunction withTimeout(promise, ms = 35000) {\n    return new Promise((resolve, reject)=>{\n        const id = setTimeout(()=>{\n            console.error(`❌ Claude Client - Local timeout triggered after ${ms}ms`);\n            reject(new Error(`Claude client timeout after ${ms}ms`));\n        }, ms);\n        promise.then((value)=>resolve(value)).catch((err)=>reject(err)).finally(()=>clearTimeout(id));\n    });\n}\n// Simple chat function: takes conversation messages and returns assistant text\nconst chatWithClaude = async (messages, systemPrompt, opts)=>{\n    try {\n        console.log(\"🔍 Claude Client - Starting chatWithClaude\");\n        console.log(\"🔍 Claude Client - Messages count:\", messages.length);\n        console.log(\"🔍 Claude Client - System prompt:\", systemPrompt?.substring(0, 100) + \"...\");\n        const model = opts?.model || process.env.CLAUDE_MODEL || \"claude-3-5-sonnet-20240620\";\n        const timeoutMs = opts?.timeoutMs ?? 35000;\n        const mapped = messages.filter((m)=>m.role === \"user\" || m.role === \"assistant\").map((m)=>({\n                role: m.role,\n                content: m.content\n            }));\n        console.log(\"🔍 Claude Client - Mapped messages:\", mapped.length);\n        console.log(\"🔍 Claude Client - Last message:\", mapped[mapped.length - 1]);\n        console.log(\"🔍 Claude Client - Sending request to model\", model, `(timeout=${timeoutMs}ms)`);\n        const response = await withTimeout(anthropic.messages.create({\n            model,\n            max_tokens: 500,\n            system: systemPrompt ?? \"You are Recta, an executive assistant for structured hiring analysis.\",\n            messages: mapped\n        }), timeoutMs);\n        console.log(\"🔍 Claude Client - Response received\");\n        const text = response.content[0]?.type === \"text\" ? response.content[0].text : \"\";\n        console.log(\"🔍 Claude Client - Response text length:\", text.length);\n        return {\n            text,\n            usage: {\n                inputTokens: response.usage?.input_tokens ?? 0,\n                outputTokens: response.usage?.output_tokens ?? 0\n            }\n        };\n    } catch (error) {\n        const status = error?.status || error?.response?.status;\n        const data = error?.response?.data || error?.error || error?.message;\n        console.error(\"❌ Claude Client - chatWithClaude failed\", {\n            status,\n            data\n        });\n        if (status) {\n            throw new Error(`Claude API error ${status}: ${typeof data === 'string' ? data : JSON.stringify(data)}`);\n        }\n        throw new Error(error?.message || \"Claude request failed\");\n    }\n};\n// Backwards-compatible wrapper used by the API route\nasync function generateChatResponse(req) {\n    const result = await chatWithClaude(req.messages);\n    const assistantMessage = {\n        role: \"assistant\",\n        content: result.text,\n        stepId: req.stepId,\n        timestamp: new Date().toISOString()\n    };\n    return {\n        message: assistantMessage,\n        usage: result.usage\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/claude-client.ts\n");

/***/ }),

/***/ "(rsc)/./lib/cluster-engine.ts":
/*!*******************************!*\
  !*** ./lib/cluster-engine.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ROLE_COMPLETION_THRESHOLDS: () => (/* reexport safe */ _confidence__WEBPACK_IMPORTED_MODULE_2__.ROLE_COMPLETION_THRESHOLDS),\n/* harmony export */   ROLE_WEIGHTS: () => (/* reexport safe */ _confidence__WEBPACK_IMPORTED_MODULE_2__.ROLE_WEIGHTS),\n/* harmony export */   analyzeMessage: () => (/* binding */ analyzeMessage),\n/* harmony export */   calculateCumulativeProgress: () => (/* reexport safe */ _progression__WEBPACK_IMPORTED_MODULE_3__.calculateCumulativeProgress),\n/* harmony export */   calculateRoleSpecificConfidence: () => (/* reexport safe */ _confidence__WEBPACK_IMPORTED_MODULE_2__.calculateRoleSpecificConfidence),\n/* harmony export */   calculateUniversalConfidence: () => (/* reexport safe */ _confidence__WEBPACK_IMPORTED_MODULE_2__.calculateUniversalConfidence),\n/* harmony export */   canProgressToNext: () => (/* reexport safe */ _progression__WEBPACK_IMPORTED_MODULE_3__.canProgressToNext),\n/* harmony export */   checkClusterCompletion: () => (/* binding */ checkClusterCompletion),\n/* harmony export */   detectRoleContext: () => (/* reexport safe */ _role_detection__WEBPACK_IMPORTED_MODULE_4__.detectRoleContext),\n/* harmony export */   explainConfidence: () => (/* binding */ explainConfidence),\n/* harmony export */   generatePhaseTransition: () => (/* reexport safe */ _progression__WEBPACK_IMPORTED_MODULE_3__.generatePhaseTransition),\n/* harmony export */   generateQuickResponseSuggestions: () => (/* reexport safe */ _quick_responses__WEBPACK_IMPORTED_MODULE_6__.generateQuickResponseSuggestions),\n/* harmony export */   getChallengerInsight: () => (/* reexport safe */ _questions__WEBPACK_IMPORTED_MODULE_5__.getChallengerInsight),\n/* harmony export */   getClusterSummary: () => (/* reexport safe */ _progression__WEBPACK_IMPORTED_MODULE_3__.getClusterSummary),\n/* harmony export */   getNextAdaptiveQuestion: () => (/* binding */ getNextAdaptiveQuestion),\n/* harmony export */   getPhaseProgressionSignal: () => (/* reexport safe */ _progression__WEBPACK_IMPORTED_MODULE_3__.getPhaseProgressionSignal),\n/* harmony export */   getRoleAwareQuestion: () => (/* reexport safe */ _questions__WEBPACK_IMPORTED_MODULE_5__.getRoleAwareQuestion),\n/* harmony export */   semanticEnhanceAnalysis: () => (/* binding */ semanticEnhanceAnalysis),\n/* harmony export */   updateClusterProgress: () => (/* binding */ updateClusterProgress)\n/* harmony export */ });\n/* harmony import */ var _clusters__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clusters */ \"(rsc)/./lib/clusters.ts\");\n/* harmony import */ var _quality_analysis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./quality-analysis */ \"(rsc)/./lib/quality-analysis.ts\");\n/* harmony import */ var _confidence__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./confidence */ \"(rsc)/./lib/confidence.ts\");\n/* harmony import */ var _progression__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./progression */ \"(rsc)/./lib/progression.ts\");\n/* harmony import */ var _role_detection__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./role-detection */ \"(rsc)/./lib/role-detection.ts\");\n/* harmony import */ var _questions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./questions */ \"(rsc)/./lib/questions.ts\");\n/* harmony import */ var _quick_responses__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./quick-responses */ \"(rsc)/./lib/quick-responses.ts\");\n\n\n\n\n/**\n * Role-specific scoring weights for different types of roles\n */ // moved to confidence.ts\n/**\n * Role-specific completion thresholds based on seniority and complexity\n */ // moved to confidence.ts\n/**\n * Detects role context from user messages\n */ \n/**\n * Calculates role-specific confidence score\n */ // re-export selected helpers for existing imports\n\n/**\n * Calculates cumulative progress across conversation\n */ \n/**\n * Analyzes a user message against the current cluster's requirements\n * Returns confidence score and information coverage analysis\n */ const analyzeMessage = (message, currentCluster, roleContext)=>{\n    const cluster = (0,_clusters__WEBPACK_IMPORTED_MODULE_0__.getClusterById)(currentCluster);\n    if (!cluster) {\n        console.log(`🔍 CLUSTER ENGINE - Cluster ${currentCluster} not found!`);\n        return {\n            confidence: 0,\n            matchedInfo: [],\n            missingInfo: [],\n            quality: 'low'\n        };\n    }\n    console.log(`🔍 CLUSTER ENGINE - Cluster ${currentCluster} threshold: ${cluster.completionThreshold}%`);\n    console.log(`🔍 CLUSTER ENGINE - Required info points: ${cluster.requiredInfo.length}`);\n    const messageLower = message.toLowerCase();\n    const matchedInfo = [];\n    const missingInfo = [];\n    // More intelligent matching for each required info point\n    cluster.requiredInfo.forEach((infoPoint)=>{\n        const hasMatch = checkInfoPointMatch(messageLower, infoPoint, currentCluster);\n        if (hasMatch) {\n            matchedInfo.push(infoPoint);\n        } else {\n            missingInfo.push(infoPoint);\n        }\n    });\n    // Universal quality-based confidence scoring system\n    console.log(`🔍 CLUSTER ENGINE - Analyzing message for ${currentCluster}:`);\n    console.log(`🔍 CLUSTER ENGINE - Message length: ${message.length}`);\n    console.log(`🔍 CLUSTER ENGINE - Matched info points: ${matchedInfo.length} (${matchedInfo.join(', ')})`);\n    const qualityAnalysis = (0,_quality_analysis__WEBPACK_IMPORTED_MODULE_1__.analyzeUniversalQuality)(message, messageLower);\n    console.log(`🔍 CLUSTER ENGINE - Quality analysis:`, qualityAnalysis);\n    // Calculate confidence - use role-specific if role context provided\n    let confidence;\n    if (roleContext) {\n        confidence = (0,_confidence__WEBPACK_IMPORTED_MODULE_2__.calculateRoleSpecificConfidence)(qualityAnalysis, roleContext, matchedInfo.length);\n        console.log(`🔍 CLUSTER ENGINE - Role-specific confidence: ${confidence}% (${roleContext.role}, ${roleContext.seniority})`);\n    } else {\n        confidence = (0,_confidence__WEBPACK_IMPORTED_MODULE_2__.calculateUniversalConfidence)(qualityAnalysis, matchedInfo.length);\n        console.log(`🔍 CLUSTER ENGINE - Universal confidence: ${confidence}%`);\n    }\n    // ANTI-REGRESSION: Ensure confidence never goes below a reasonable minimum\n    // This prevents the system from giving lower scores for more detailed responses\n    const minConfidence = Math.max(5, matchedInfo.length * 2); // Minimum 2% per matched info point\n    confidence = Math.max(confidence, minConfidence);\n    console.log(`🔍 CLUSTER ENGINE - Final confidence: ${confidence}%`);\n    // Determine quality based on role-specific criteria if available\n    let quality = 'low';\n    const threshold = roleContext ? _confidence__WEBPACK_IMPORTED_MODULE_2__.ROLE_COMPLETION_THRESHOLDS[roleContext.seniority][roleContext.department] || 70 : 70;\n    if (confidence >= threshold * 0.85 && qualityAnalysis.categoriesCovered >= 4) {\n        quality = 'high';\n        console.log(`🔍 CLUSTER ENGINE - Quality: HIGH (${confidence}% confidence, ${qualityAnalysis.categoriesCovered}/6 categories)`);\n    } else if (confidence >= threshold * 0.5 && qualityAnalysis.categoriesCovered >= 2) {\n        quality = 'medium';\n        console.log(`🔍 CLUSTER ENGINE - Quality: MEDIUM (${confidence}% confidence, ${qualityAnalysis.categoriesCovered}/6 categories)`);\n    } else {\n        console.log(`🔍 CLUSTER ENGINE - Quality: LOW (${confidence}% confidence, ${qualityAnalysis.categoriesCovered}/6 categories)`);\n    }\n    return {\n        confidence,\n        matchedInfo,\n        missingInfo,\n        quality\n    };\n};\n/**\n * Generates role-aware adaptive questions based on role context and missing insights\n */ /**\n * SPIN Framework + Challenger Sale Strategic Questioning\n * Focuses on confidential/internal information only the user knows\n */ \n/**\n * Challenger Sale methodology - challenges assumptions and reveals hidden problems\n */ /**\n * Generates contextual quick response suggestions based on conversation context and role\n */ \n/**\n * Analyzes message quality using universal categories\n */ // analyzeUniversalQuality is imported from quality-analysis.ts\n/**\n * Calculates universal confidence based on quality analysis\n */ \n/**\n * Returns a complete, human-readable breakdown of how confidence was computed\n * for a given message. Useful for debugging and UI transparency.\n */ const explainConfidence = (message)=>{\n    // Handle both string and ConversationMessage object inputs\n    const messageText = typeof message === 'string' ? message : message.content || message.text || '';\n    const lower = messageText.toLowerCase();\n    const qa = (0,_quality_analysis__WEBPACK_IMPORTED_MODULE_1__.analyzeUniversalQuality)(messageText, lower);\n    // Raw components\n    const categoriesPoints = qa.categoriesCovered * 5; // 0-30\n    const specificityPoints = qa.specificity * 2; // 0-8\n    const quantificationPoints = qa.quantification * 2; // 0-8\n    const contextPoints = qa.context * 2; // 0-8\n    const causalityPoints = qa.causality * 2; // 0-8\n    const impactBonus = qa.businessImpact ? 10 : 0; // 0/10\n    const timingBonus = qa.timingContext ? 10 : 0; // 0/10\n    const preCapScore = categoriesPoints + specificityPoints + quantificationPoints + contextPoints + causalityPoints + impactBonus + timingBonus; // theoretical 82\n    // Apply caps mirroring calculateUniversalConfidence\n    let cappedScore = preCapScore;\n    const capsApplied = [];\n    if (!qa.businessImpact || !qa.timingContext) {\n        if (cappedScore > 75) cappedScore = 75;\n        capsApplied.push('No 85% without BOTH business impact AND timing/context (cap=75)');\n    }\n    if (qa.categoriesCovered < 4) {\n        if (cappedScore > 70) cappedScore = 70;\n        capsApplied.push('Need ≥4/6 categories for high confidence (cap=70)');\n    }\n    if (cappedScore > 85) {\n        cappedScore = 85;\n        capsApplied.push('Global maximum confidence cap (85)');\n    }\n    return {\n        messagePreview: message.substring(0, 160),\n        categories: {\n            situationDescription: qa.categoriesCovered >= 1,\n            gapPainIdentification: undefined,\n            businessImpact: qa.businessImpact,\n            stakeholderEffects: undefined,\n            timingContext: qa.timingContext,\n            scopeScale: undefined,\n            coveredCount: qa.categoriesCovered,\n            points: categoriesPoints,\n            pointsPerCategory: 5\n        },\n        qualityIndicators: {\n            specificity: {\n                score: qa.specificity,\n                points: specificityPoints,\n                max: 4,\n                triggers: 'role/tech details'\n            },\n            quantification: {\n                score: qa.quantification,\n                points: quantificationPoints,\n                max: 4,\n                triggers: 'numbers, %, money, timeframes'\n            },\n            context: {\n                score: qa.context,\n                points: contextPoints,\n                max: 4,\n                triggers: 'business/industry/market/strategic'\n            },\n            causality: {\n                score: qa.causality,\n                points: causalityPoints,\n                max: 4,\n                triggers: 'because/due to → result, solution/consequence'\n            }\n        },\n        bonuses: {\n            businessImpact: impactBonus,\n            timingContext: timingBonus\n        },\n        totals: {\n            preCapScore,\n            finalConfidence: Math.max(0, Math.min(85, Math.round(cappedScore))),\n            capsApplied\n        },\n        notes: [\n            'CategoriesCovered counts how many of the 6 universal categories are detected; each is worth 5 points.',\n            'Quality indicators each score 0-4 and are doubled to points (×2).',\n            'High confidence requires BOTH business impact and timing/context signals.',\n            'Design intentionally caps maximum confidence at 85%.'\n        ]\n    };\n};\nconst semanticEnhanceAnalysis = async (message, base)=>{\n    const words = message.trim().split(/\\s+/).length;\n    if (words <= 10) return base;\n    try {\n        const response = await fetch('/api/semantic-analyze', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                message,\n                baseConfidence: base.confidence\n            })\n        });\n        if (!response.ok) {\n            console.warn('⚠️ Semantic analysis API failed, using base scoring');\n            return base;\n        }\n        const data = await response.json();\n        const enhancedConfidence = data.enhancedConfidence || base.confidence;\n        const quality = enhancedConfidence >= 75 ? 'high' : enhancedConfidence >= 50 ? 'medium' : 'low';\n        return {\n            ...base,\n            confidence: enhancedConfidence,\n            quality\n        };\n    } catch (error) {\n        console.warn('⚠️ Semantic analysis failed, using base scoring:', error);\n        return base;\n    }\n};\n/**\n * More intelligent matching for specific info points\n */ function checkInfoPointMatch(message, infoPoint, cluster) {\n    // Define specific patterns for each cluster\n    const patterns = {\n        'pain-point': {\n            'Nuvarande problem eller gap som behöver lösas': [\n                'problem',\n                'gap',\n                'behöver',\n                'saknas',\n                'brist',\n                'utmaning',\n                'svårighet',\n                'cfo',\n                'chef',\n                'ledare'\n            ],\n            'Konsekvenser av att inte lösa problemet': [\n                'konsekvens',\n                'risker',\n                'händer om',\n                'om vi inte',\n                'försening',\n                'kostnad'\n            ],\n            'Vem som påverkas av problemet': [\n                'team',\n                'avdelning',\n                'organisation',\n                'påverkas',\n                'drabbas',\n                'berör'\n            ],\n            'Tidsram för när problemet måste lösas': [\n                'tidsram',\n                'när',\n                'snart',\n                'månader',\n                'veckor',\n                'akut',\n                'brådskande'\n            ]\n        },\n        'impact-urgency': {\n            'Kvantifierad påverkan på verksamheten': [\n                'påverkan',\n                'effekt',\n                'resultat',\n                'kpi',\n                'mätbar',\n                'siffror',\n                'procent'\n            ],\n            'Brådskan och tidskritiska faktorer': [\n                'brådskande',\n                'akut',\n                'tidskritisk',\n                'deadline',\n                'snart',\n                'månader'\n            ],\n            'Affärsnytta och ROI-prognos': [\n                'roi',\n                'affärsnytta',\n                'vinst',\n                'kostnad',\n                'investering',\n                'tillbaka'\n            ],\n            'Risken av förseningar': [\n                'risk',\n                'försening',\n                'förlust',\n                'missad',\n                'chans',\n                'konkurrens'\n            ]\n        },\n        'success-criteria': {\n            'Mätbara framgångskriterier för rollen': [\n                'framgång',\n                'mål',\n                'kriterier',\n                'mätbar',\n                'kpi',\n                'resultat'\n            ],\n            'Kompetenser och erfarenheter som krävs': [\n                'kompetens',\n                'erfarenhet',\n                'kunskaper',\n                'färdigheter',\n                'utbildning'\n            ],\n            'Prestanda-indikatorer och mål': [\n                'prestanda',\n                'indikatorer',\n                'mål',\n                'benchmark',\n                'standard'\n            ],\n            'Utvecklingspotential och tillväxt': [\n                'utveckling',\n                'tillväxt',\n                'potential',\n                'karriär',\n                'framtid'\n            ]\n        },\n        'resources-budget': {\n            'Budget för rekrytering och onboarding': [\n                'budget',\n                'kostnad',\n                'pengar',\n                'resurser',\n                'onboarding'\n            ],\n            'Tillgängliga interna resurser': [\n                'interna',\n                'resurser',\n                'personal',\n                'team',\n                'hjälp'\n            ],\n            'Externa partners och verktyg': [\n                'externa',\n                'partners',\n                'verktyg',\n                'system',\n                'konsulter'\n            ],\n            'Långsiktiga kostnader och investeringar': [\n                'långsiktig',\n                'investering',\n                'kostnad',\n                'framtid',\n                'år'\n            ]\n        },\n        'organization-culture': {\n            'Organisatorisk struktur och rapporteringslinjer': [\n                'struktur',\n                'rapportering',\n                'hierarki',\n                'organisation',\n                'chef'\n            ],\n            'Kulturella värderingar och arbetsmiljö': [\n                'kultur',\n                'värderingar',\n                'miljö',\n                'atmosfär',\n                'stil'\n            ],\n            'Teamdynamik och samarbetsmönster': [\n                'team',\n                'samarbete',\n                'dynamik',\n                'grupp',\n                'kollegor'\n            ],\n            'Stöd och utvecklingsmöjligheter': [\n                'stöd',\n                'utveckling',\n                'möjligheter',\n                'träning',\n                'lärande'\n            ]\n        },\n        'alternatives-risks': {\n            'Alternativa lösningar till rekrytering': [\n                'alternativ',\n                'andra',\n                'lösningar',\n                'istället',\n                'utöver'\n            ],\n            'Identifierade risker och mitigeringar': [\n                'risker',\n                'risk',\n                'problem',\n                'mitigering',\n                'hantera'\n            ],\n            'Fallback-planer och kontingenser': [\n                'fallback',\n                'plan b',\n                'kontingens',\n                'reserv',\n                'backup'\n            ],\n            'Långsiktiga konsekvenser av beslutet': [\n                'långsiktig',\n                'konsekvenser',\n                'framtid',\n                'påverkan',\n                'resultat'\n            ]\n        }\n    };\n    const clusterPatterns = patterns[cluster];\n    const infoPatterns = clusterPatterns[infoPoint];\n    if (!infoPatterns) {\n        // Fallback to keyword matching\n        const keywords = extractKeywords(infoPoint);\n        return keywords.some((keyword)=>message.includes(keyword.toLowerCase()));\n    }\n    // Check if message contains any of the relevant patterns\n    return infoPatterns.some((pattern)=>message.includes(pattern));\n}\n/**\n * Get cluster-specific bonus for confidence scoring\n */ function getClusterSpecificBonus(message, cluster) {\n    const bonuses = {\n        'pain-point': [\n            'problem',\n            'utmaning',\n            'svårighet',\n            'gap',\n            'brist',\n            'behöver',\n            'saknas',\n            'förbättra',\n            'lösa'\n        ],\n        'impact-urgency': [\n            'brådskande',\n            'akut',\n            'viktigt',\n            'kritisk',\n            'prioritet',\n            'deadline',\n            'tidsram',\n            'press'\n        ],\n        'success-criteria': [\n            'mål',\n            'framgång',\n            'kriterier',\n            'kompetens',\n            'erfarenhet',\n            'kvalifikationer',\n            'resultat'\n        ],\n        'resources-budget': [\n            'budget',\n            'kostnad',\n            'resurser',\n            'pengar',\n            'investering',\n            'lön',\n            'utgifter',\n            'finansiering'\n        ],\n        'organization-culture': [\n            'kultur',\n            'team',\n            'organisation',\n            'struktur',\n            'miljö',\n            'värderingar',\n            'arbetssätt'\n        ],\n        'alternatives-risks': [\n            'alternativ',\n            'risk',\n            'lösning',\n            'plan',\n            'konsekvens',\n            'möjligheter',\n            'hot'\n        ]\n    };\n    const clusterBonus = bonuses[cluster] || [];\n    const matches = clusterBonus.filter((bonus)=>message.includes(bonus));\n    console.log(`🔍 CLUSTER ENGINE - getClusterSpecificBonus for ${cluster}:`);\n    console.log(`🔍 CLUSTER ENGINE - Message: \"${message.substring(0, 100)}...\"`);\n    console.log(`🔍 CLUSTER ENGINE - Matched terms: ${matches.length} (${matches.join(', ')})`);\n    // More demanding scoring - require multiple relevant terms for significant bonus\n    let bonus = 0;\n    if (matches.length >= 3) {\n        bonus = 15; // High bonus for comprehensive coverage\n        console.log(`🔍 CLUSTER ENGINE - High bonus: +15 (3+ terms)`);\n    } else if (matches.length >= 2) {\n        bonus = 8; // Medium bonus for good coverage\n        console.log(`🔍 CLUSTER ENGINE - Medium bonus: +8 (2+ terms)`);\n    } else if (matches.length >= 1) {\n        bonus = 3; // Low bonus for basic relevance\n        console.log(`🔍 CLUSTER ENGINE - Low bonus: +3 (1+ terms)`);\n    } else {\n        console.log(`🔍 CLUSTER ENGINE - No bonus: 0 (no relevant terms)`);\n    }\n    return bonus;\n}\n/**\n * Checks if a cluster meets completion criteria\n */ const checkClusterCompletion = (cluster, clusterType)=>{\n    const clusterDef = (0,_clusters__WEBPACK_IMPORTED_MODULE_0__.getClusterById)(clusterType);\n    if (!clusterDef) return false;\n    return cluster.confidence >= clusterDef.completionThreshold && cluster.status === 'in-progress' && cluster.collectedInfo.length >= clusterDef.requiredInfo.length * 0.8; // 80% of required info\n};\n/**\n * Generates adaptive follow-up questions based on missing information\n */ const getNextAdaptiveQuestion = (clusterType, missingInfo)=>{\n    const cluster = (0,_clusters__WEBPACK_IMPORTED_MODULE_0__.getClusterById)(clusterType);\n    if (!cluster) {\n        return \"Kan du berätta mer om situationen?\";\n    }\n    // If no missing info, ask for more detail\n    if (missingInfo.length === 0) {\n        return getEncouragingFollowUp(clusterType);\n    }\n    // Map missing info to specific questions - NATURAL CONVERSATION STYLE\n    const questionMap = {\n        'pain-point': {\n            'Nuvarande problem eller gap som behöver lösas': 'Vad saknas just nu?',\n            'Konsekvenser av att inte lösa problemet': 'Vad händer om ni inte löser detta?',\n            'Vem som påverkas av problemet': 'Vilka team påverkas mest?',\n            'Tidsram för när problemet måste lösas': 'När behöver det vara löst?'\n        },\n        'impact-urgency': {\n            'Kvantifierad påverkan på verksamheten': 'Vad kostar det er att inte ha denna person?',\n            'Brådskan och tidskritiska faktorer': 'Vad händer om ni väntar 3 månader till?',\n            'Affärsnytta och ROI-prognos': 'Vad vinner ni på att agera snabbt?',\n            'Risken av förseningar': 'Vad kan stoppa er?'\n        },\n        'success-criteria': {\n            'Mätbara framgångskriterier för rollen': 'Vad ska personen ha åstadkommit efter 90 dagar?',\n            'Kompetenser och erfarenheter som krävs': 'Vad är absolut kritiskt att kunna?',\n            'Prestanda-indikatorer och mål': 'Hur mäter ni framgång efter 6 månader?',\n            'Utvecklingspotential och tillväxt': 'Vart kan personen utvecklas?'\n        },\n        'resources-budget': {\n            'Budget för rekrytering och onboarding': 'Vilken budget har ni?',\n            'Tillgängliga interna resurser': 'Vad kan ni tilldela för onboarding?',\n            'Externa partners och verktyg': 'Vilka system behöver personen kunna?',\n            'Långsiktiga kostnader och investeringar': 'Vad kostar rollen första året?'\n        },\n        'organization-culture': {\n            'Organisatorisk struktur och rapporteringslinjer': 'Var passar rollen in i organisationen?',\n            'Kulturella värderingar och arbetsmiljö': 'Vad är viktigast för framgång?',\n            'Teamdynamik och samarbetsmönster': 'Hur samarbetar personen med andra?',\n            'Stöd och utvecklingsmöjligheter': 'Vad kan ni erbjuda för utveckling?'\n        },\n        'alternatives-risks': {\n            'Alternativa lösningar till rekrytering': 'Vilka alternativ har ni övervägt?',\n            'Identifierade risker och mitigeringar': 'Vad är de största riskerna?',\n            'Fallback-planer och kontingenser': 'Vad händer om det inte fungerar?',\n            'Långsiktiga konsekvenser av beslutet': 'Vad händer på längre sikt?'\n        }\n    };\n    // Get the first missing info point and its corresponding question\n    const firstMissing = missingInfo[0];\n    const clusterQuestions = questionMap[clusterType];\n    const specificQuestion = clusterQuestions[firstMissing];\n    if (specificQuestion) {\n        return specificQuestion;\n    }\n    // Fallback to encouraging follow-up\n    return getEncouragingFollowUp(clusterType);\n};\n/**\n * Get encouraging follow-up questions when no specific missing info\n */ function getEncouragingFollowUp(clusterType) {\n    const encouragements = {\n        'pain-point': [\n            'Berätta mer om utmaningen.',\n            'Vad är det största problemet?',\n            'Hur påverkar det er dagliga arbete?'\n        ],\n        'impact-urgency': [\n            'Vad är mest kritiskt?',\n            'Hur brådskande är det?',\n            'Vad händer om ni väntar?'\n        ],\n        'success-criteria': [\n            'Vad betyder framgång för rollen?',\n            'Vilka är era viktigaste mål?',\n            'Hur vet ni att ni gjort rätt val?'\n        ],\n        'resources-budget': [\n            'Vilka resurser har ni?',\n            'Hur ser budgeten ut?',\n            'Vilka system behöver personen kunna?'\n        ],\n        'organization-culture': [\n            'Hur passar rollen in i er kultur?',\n            'Vad är viktigt för framgång?',\n            'Hur ser samarbetet ut mellan olika team?'\n        ],\n        'alternatives-risks': [\n            'Vilka alternativ har ni övervägt?',\n            'Vilka risker ser ni?',\n            'Hur hanterar ni utmaningar?'\n        ]\n    };\n    const clusterEncouragements = encouragements[clusterType] || [\n        'Berätta mer om situationen.'\n    ];\n    return clusterEncouragements[Math.floor(Math.random() * clusterEncouragements.length)];\n}\n/**\n * Determines if user can progress to next cluster\n * Requires minimum 5-6 exchanges and 85%+ confidence for thorough analysis\n */ // moved to progression.ts\n/**\n * Generates smooth transition message between phases\n */ // moved to progression.ts\n/**\n * Updates cluster progress based on message analysis\n */ const updateClusterProgress = (currentProgress, analysis, message)=>{\n    console.log(`🔍 CLUSTER ENGINE - updateClusterProgress called:`);\n    console.log(`🔍 CLUSTER ENGINE - Current confidence: ${currentProgress.confidence}%`);\n    console.log(`🔍 CLUSTER ENGINE - Analysis confidence: ${analysis.confidence}%`);\n    console.log(`🔍 CLUSTER ENGINE - Current collected info: ${currentProgress.collectedInfo.length} items`);\n    console.log(`🔍 CLUSTER ENGINE - New matched info: ${analysis.matchedInfo.length} items (${analysis.matchedInfo.join(', ')})`);\n    const newCollectedInfo = [\n        ...currentProgress.collectedInfo\n    ];\n    // Add new information points\n    analysis.matchedInfo.forEach((info)=>{\n        if (!newCollectedInfo.includes(info)) {\n            newCollectedInfo.push(info);\n            console.log(`🔍 CLUSTER ENGINE - Added new info point: ${info}`);\n        } else {\n            console.log(`🔍 CLUSTER ENGINE - Info point already collected: ${info}`);\n        }\n    });\n    // Update confidence - use the latest analysis confidence for accurate scoring\n    // This ensures the recalibrated scoring system works properly\n    const newConfidence = analysis.confidence;\n    console.log(`🔍 CLUSTER ENGINE - Confidence update: ${currentProgress.confidence}% → ${newConfidence}% (analysis: ${analysis.confidence}%)`);\n    // Determine status\n    let status = currentProgress.status;\n    if (status === 'not-started' && newConfidence > 0) {\n        status = 'in-progress';\n        console.log(`🔍 CLUSTER ENGINE - Status changed to: in-progress`);\n    }\n    const result = {\n        confidence: Math.min(newConfidence, 100),\n        status,\n        collectedInfo: newCollectedInfo\n    };\n    console.log(`🔍 CLUSTER ENGINE - Final progress result:`, result);\n    return result;\n};\n/**\n * Extracts keywords from text for matching\n */ function extractKeywords(text) {\n    // Remove common words and extract meaningful terms\n    const stopWords = [\n        'och',\n        'eller',\n        'men',\n        'för',\n        'att',\n        'som',\n        'är',\n        'har',\n        'kan',\n        'ska',\n        'vilka',\n        'vad',\n        'hur',\n        'när',\n        'var',\n        'varför'\n    ];\n    return text.toLowerCase().replace(/[^\\w\\s]/g, ' ').split(/\\s+/).filter((word)=>word.length > 2 && !stopWords.includes(word));\n} /**\n * Gets completion summary for a cluster\n */  // moved to progression.ts\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/cluster-engine.ts\n");

/***/ }),

/***/ "(rsc)/./lib/clusters.ts":
/*!*************************!*\
  !*** ./lib/clusters.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CLUSTERS: () => (/* binding */ CLUSTERS),\n/* harmony export */   calculateOverallProgress: () => (/* binding */ calculateOverallProgress),\n/* harmony export */   getClusterById: () => (/* binding */ getClusterById),\n/* harmony export */   getNextCluster: () => (/* binding */ getNextCluster),\n/* harmony export */   getPreviousCluster: () => (/* binding */ getPreviousCluster)\n/* harmony export */ });\nconst CLUSTERS = [\n    {\n        id: 'pain-point',\n        title: 'Problem & Pain Point',\n        icon: '🎯',\n        description: 'Identifiera det specifika problemet som rekryteringen ska lösa och de nuvarande smärtpunkterna.',\n        requiredInfo: [\n            'Nuvarande problem eller gap som behöver lösas',\n            'Konsekvenser av att inte lösa problemet',\n            'Vem som påverkas av problemet',\n            'Tidsram för när problemet måste lösas',\n            'Rotorsak till problemet',\n            'Föregående försök att lösa problemet',\n            'Kvantifierad påverkan på verksamheten',\n            'Stakeholders som påverkas'\n        ],\n        questions: [\n            'Vilket specifikt problem försöker ni lösa med denna rekrytering?',\n            'Vad händer om ni inte löser detta problem inom 6 månader?',\n            'Vilka team eller funktioner påverkas mest av detta problem?',\n            'Har ni försökt lösa detta problem tidigare? Vad fungerade inte?'\n        ],\n        completionThreshold: 70\n    },\n    {\n        id: 'impact-urgency',\n        title: 'Impact & Urgency',\n        icon: '⚡',\n        description: 'Kvantifiera påverkan och brådskan för att prioritera rekryteringsinvesteringen.',\n        requiredInfo: [\n            'Kvantifierad påverkan på verksamheten',\n            'Brådskan och tidskritiska faktorer',\n            'Affärsnytta och ROI-prognos',\n            'Risken av förseningar',\n            'Konkurrensmässiga konsekvenser',\n            'Kundpåverkan och förluster',\n            'Teamproduktivitet och belastning',\n            'Strategiska mål som påverkas'\n        ],\n        questions: [\n            'Hur mäter ni framgång för denna roll? Vilka KPI:er är viktigast?',\n            'Vad är den ekonomiska påverkan om ni inte fyller rollen inom 3 månader?',\n            'Finns det konkurrensmässiga fördelar med att agera snabbt?',\n            'Vilka externa faktorer påverkar tidsramen?'\n        ],\n        completionThreshold: 70\n    },\n    {\n        id: 'success-criteria',\n        title: 'Success Criteria',\n        icon: '✅',\n        description: 'Definiera tydliga, mätbara framgångskriterier för rollen och personen.',\n        requiredInfo: [\n            'Mätbara framgångskriterier för rollen',\n            'Kompetenser och erfarenheter som krävs',\n            'Prestanda-indikatorer och mål',\n            'Utvecklingspotential och tillväxt',\n            'Kulturell passning och värderingar',\n            'Ledarskapskvaliteter och stilar',\n            'Kommunikationsförmåga och samarbete',\n            'Långsiktiga karriärmöjligheter'\n        ],\n        questions: [\n            'Vilka specifika resultat förväntar ni er inom de första 90 dagarna?',\n            'Vilka tekniska eller funktionella kompetenser är absolut kritiska?',\n            'Hur kommer ni att mäta framgång efter 6 månader?',\n            'Vilken utvecklingspotential ser ni för personen i rollen?'\n        ],\n        completionThreshold: 70\n    },\n    {\n        id: 'resources-budget',\n        title: 'Resources & Budget',\n        icon: '💰',\n        description: 'Säkerställ tillräckliga resurser och budget för en framgångsrik rekrytering.',\n        requiredInfo: [\n            'Budget för rekrytering och onboarding',\n            'Tillgängliga interna resurser',\n            'Externa partners och verktyg',\n            'Långsiktiga kostnader och investeringar',\n            'Lönebudget och kompensationsstruktur',\n            'Onboarding och utbildningsresurser',\n            'Rekryteringsverktyg och plattformar',\n            'Backup-planer och alternativ'\n        ],\n        questions: [\n            'Vilken budget har ni för rekryteringsprocessen inklusive externa partners?',\n            'Vilka interna resurser kan ni tilldela för onboarding och utveckling?',\n            'Finns det befintliga verktyg eller system som kandidaten behöver kunna?',\n            'Vilka är de totala kostnaderna för rollen under de första 12 månaderna?'\n        ],\n        completionThreshold: 70\n    },\n    {\n        id: 'organization-culture',\n        title: 'Organization & Culture',\n        icon: '🏢',\n        description: 'Validera organisatorisk beredskap och kulturell passform för rollen.',\n        requiredInfo: [\n            'Organisatorisk struktur och rapporteringslinjer',\n            'Kulturella värderingar och arbetsmiljö',\n            'Teamdynamik och samarbetsmönster',\n            'Stöd och utvecklingsmöjligheter',\n            'Ledarskapsstil och beslutsprocesser',\n            'Kommunikationskultur och transparens',\n            'Konfliktlösning och feedback-kultur',\n            'Innovation och förändringsbenägenhet'\n        ],\n        questions: [\n            'Hur passar rollen in i er nuvarande organisationsstruktur?',\n            'Vilka kulturella värderingar är viktigast för framgång i rollen?',\n            'Hur kommer personen att samarbeta med andra team och funktioner?',\n            'Vilket stöd och vilka utvecklingsmöjligheter kan ni erbjuda?'\n        ],\n        completionThreshold: 70\n    },\n    {\n        id: 'alternatives-risks',\n        title: 'Alternatives & Risks',\n        icon: '🔄',\n        description: 'Utvärdera alternativ och identifiera risker för att säkerställa optimala beslut.',\n        requiredInfo: [\n            'Alternativa lösningar till rekrytering',\n            'Identifierade risker och mitigeringar',\n            'Fallback-planer och kontingenser',\n            'Långsiktiga konsekvenser av beslutet',\n            'Konkurrensmässiga hot och möjligheter',\n            'Marknadsförändringar och trender',\n            'Interna kapacitetsbegränsningar',\n            'Strategiska alternativ och scenarier'\n        ],\n        questions: [\n            'Vilka alternativ till extern rekrytering har ni övervägt?',\n            'Vilka är de största riskerna med denna rekrytering?',\n            'Hur skulle ni hantera situationen om kandidaten inte fungerar?',\n            'Vilka långsiktiga konsekvenser ser ni av detta beslut?'\n        ],\n        completionThreshold: 70\n    }\n];\nconst getClusterById = (id)=>{\n    return CLUSTERS.find((cluster)=>cluster.id === id);\n};\nconst getNextCluster = (currentCluster)=>{\n    const currentIndex = CLUSTERS.findIndex((cluster)=>cluster.id === currentCluster);\n    return currentIndex < CLUSTERS.length - 1 ? CLUSTERS[currentIndex + 1].id : null;\n};\nconst getPreviousCluster = (currentCluster)=>{\n    const currentIndex = CLUSTERS.findIndex((cluster)=>cluster.id === currentCluster);\n    return currentIndex > 0 ? CLUSTERS[currentIndex - 1].id : null;\n};\nconst calculateOverallProgress = (clusters)=>{\n    const totalClusters = CLUSTERS.length;\n    const completedClusters = Object.values(clusters).filter((cluster)=>cluster.status === 'completed').length;\n    const inProgressClusters = Object.values(clusters).filter((cluster)=>cluster.status === 'in-progress');\n    const inProgressProgress = inProgressClusters.reduce((sum, cluster)=>sum + cluster.confidence, 0) / totalClusters;\n    return Math.round(completedClusters / totalClusters * 100 + inProgressProgress);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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S1Y7SUFFdEcsT0FBT1csS0FBS0MsS0FBSyxDQUFDLG9CQUFxQlosZ0JBQWlCLE1BQU1PO0FBQy9ELEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWN0YS8uL2xpYi9jbHVzdGVycy50cz8zNDY4Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB0eXBlIENsdXN0ZXJUeXBlID0gJ3BhaW4tcG9pbnQnIHwgJ2ltcGFjdC11cmdlbmN5JyB8ICdzdWNjZXNzLWNyaXRlcmlhJyB8ICdyZXNvdXJjZXMtYnVkZ2V0JyB8ICdvcmdhbml6YXRpb24tY3VsdHVyZScgfCAnYWx0ZXJuYXRpdmVzLXJpc2tzJztcblxuZXhwb3J0IGludGVyZmFjZSBDbHVzdGVyUHJvZ3Jlc3Mge1xuXHRjb25maWRlbmNlOiBudW1iZXI7IC8vIDAtMTAwXG5cdHN0YXR1czogJ25vdC1zdGFydGVkJyB8ICdpbi1wcm9ncmVzcycgfCAnY29tcGxldGVkJztcblx0Y29sbGVjdGVkSW5mbzogc3RyaW5nW107XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQW5hbHlzaXNTdGF0ZSB7XG5cdGN1cnJlbnRDbHVzdGVyOiBDbHVzdGVyVHlwZTtcblx0Y2x1c3RlcnM6IFJlY29yZDxDbHVzdGVyVHlwZSwgQ2x1c3RlclByb2dyZXNzPjtcblx0b3ZlcmFsbFByb2dyZXNzOiBudW1iZXI7IC8vIDAtMTAwXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ2x1c3RlciB7XG5cdGlkOiBDbHVzdGVyVHlwZTtcblx0dGl0bGU6IHN0cmluZztcblx0aWNvbjogc3RyaW5nO1xuXHRkZXNjcmlwdGlvbjogc3RyaW5nO1xuXHRyZXF1aXJlZEluZm86IHN0cmluZ1tdO1xuXHRxdWVzdGlvbnM6IHN0cmluZ1tdO1xuXHRjb21wbGV0aW9uVGhyZXNob2xkOiBudW1iZXI7XG59XG5cbmV4cG9ydCBjb25zdCBDTFVTVEVSUzogQ2x1c3RlcltdID0gW1xuXHR7XG5cdFx0aWQ6ICdwYWluLXBvaW50Jyxcblx0XHR0aXRsZTogJ1Byb2JsZW0gJiBQYWluIFBvaW50Jyxcblx0XHRpY29uOiAn8J+OrycsXG5cdFx0ZGVzY3JpcHRpb246ICdJZGVudGlmaWVyYSBkZXQgc3BlY2lmaWthIHByb2JsZW1ldCBzb20gcmVrcnl0ZXJpbmdlbiBza2EgbMO2c2Egb2NoIGRlIG51dmFyYW5kZSBzbcOkcnRwdW5rdGVybmEuJyxcblx0XHRyZXF1aXJlZEluZm86IFtcblx0XHRcdCdOdXZhcmFuZGUgcHJvYmxlbSBlbGxlciBnYXAgc29tIGJlaMO2dmVyIGzDtnNhcycsXG5cdFx0XHQnS29uc2VrdmVuc2VyIGF2IGF0dCBpbnRlIGzDtnNhIHByb2JsZW1ldCcsXG5cdFx0XHQnVmVtIHNvbSBww6V2ZXJrYXMgYXYgcHJvYmxlbWV0Jyxcblx0XHRcdCdUaWRzcmFtIGbDtnIgbsOkciBwcm9ibGVtZXQgbcOlc3RlIGzDtnNhcycsXG5cdFx0XHQnUm90b3JzYWsgdGlsbCBwcm9ibGVtZXQnLFxuXHRcdFx0J0bDtnJlZ8OlZW5kZSBmw7Zyc8O2ayBhdHQgbMO2c2EgcHJvYmxlbWV0Jyxcblx0XHRcdCdLdmFudGlmaWVyYWQgcMOldmVya2FuIHDDpSB2ZXJrc2FtaGV0ZW4nLFxuXHRcdFx0J1N0YWtlaG9sZGVycyBzb20gcMOldmVya2FzJ1xuXHRcdF0sXG5cdFx0cXVlc3Rpb25zOiBbXG5cdFx0XHQnVmlsa2V0IHNwZWNpZmlrdCBwcm9ibGVtIGbDtnJzw7ZrZXIgbmkgbMO2c2EgbWVkIGRlbm5hIHJla3J5dGVyaW5nPycsXG5cdFx0XHQnVmFkIGjDpG5kZXIgb20gbmkgaW50ZSBsw7ZzZXIgZGV0dGEgcHJvYmxlbSBpbm9tIDYgbcOlbmFkZXI/Jyxcblx0XHRcdCdWaWxrYSB0ZWFtIGVsbGVyIGZ1bmt0aW9uZXIgcMOldmVya2FzIG1lc3QgYXYgZGV0dGEgcHJvYmxlbT8nLFxuXHRcdFx0J0hhciBuaSBmw7Zyc8O2a3QgbMO2c2EgZGV0dGEgcHJvYmxlbSB0aWRpZ2FyZT8gVmFkIGZ1bmdlcmFkZSBpbnRlPydcblx0XHRdLFxuXHRcdGNvbXBsZXRpb25UaHJlc2hvbGQ6IDcwXG5cdH0sXG5cdHtcblx0XHRpZDogJ2ltcGFjdC11cmdlbmN5Jyxcblx0XHR0aXRsZTogJ0ltcGFjdCAmIFVyZ2VuY3knLFxuXHRcdGljb246ICfimqEnLFxuXHRcdGRlc2NyaXB0aW9uOiAnS3ZhbnRpZmllcmEgcMOldmVya2FuIG9jaCBicsOlZHNrYW4gZsO2ciBhdHQgcHJpb3JpdGVyYSByZWtyeXRlcmluZ3NpbnZlc3RlcmluZ2VuLicsXG5cdFx0cmVxdWlyZWRJbmZvOiBbXG5cdFx0XHQnS3ZhbnRpZmllcmFkIHDDpXZlcmthbiBww6UgdmVya3NhbWhldGVuJyxcblx0XHRcdCdCcsOlZHNrYW4gb2NoIHRpZHNrcml0aXNrYSBmYWt0b3JlcicsXG5cdFx0XHQnQWZmw6Ryc255dHRhIG9jaCBST0ktcHJvZ25vcycsXG5cdFx0XHQnUmlza2VuIGF2IGbDtnJzZW5pbmdhcicsXG5cdFx0XHQnS29ua3VycmVuc23DpHNzaWdhIGtvbnNla3ZlbnNlcicsXG5cdFx0XHQnS3VuZHDDpXZlcmthbiBvY2ggZsO2cmx1c3RlcicsXG5cdFx0XHQnVGVhbXByb2R1a3Rpdml0ZXQgb2NoIGJlbGFzdG5pbmcnLFxuXHRcdFx0J1N0cmF0ZWdpc2thIG3DpWwgc29tIHDDpXZlcmthcydcblx0XHRdLFxuXHRcdHF1ZXN0aW9uczogW1xuXHRcdFx0J0h1ciBtw6R0ZXIgbmkgZnJhbWfDpW5nIGbDtnIgZGVubmEgcm9sbD8gVmlsa2EgS1BJOmVyIMOkciB2aWt0aWdhc3Q/Jyxcblx0XHRcdCdWYWQgw6RyIGRlbiBla29ub21pc2thIHDDpXZlcmthbiBvbSBuaSBpbnRlIGZ5bGxlciByb2xsZW4gaW5vbSAzIG3DpW5hZGVyPycsXG5cdFx0XHQnRmlubnMgZGV0IGtvbmt1cnJlbnNtw6Rzc2lnYSBmw7ZyZGVsYXIgbWVkIGF0dCBhZ2VyYSBzbmFiYnQ/Jyxcblx0XHRcdCdWaWxrYSBleHRlcm5hIGZha3RvcmVyIHDDpXZlcmthciB0aWRzcmFtZW4/J1xuXHRcdF0sXG5cdFx0Y29tcGxldGlvblRocmVzaG9sZDogNzBcblx0fSxcblx0e1xuXHRcdGlkOiAnc3VjY2Vzcy1jcml0ZXJpYScsXG5cdFx0dGl0bGU6ICdTdWNjZXNzIENyaXRlcmlhJyxcblx0XHRpY29uOiAn4pyFJyxcblx0XHRkZXNjcmlwdGlvbjogJ0RlZmluaWVyYSB0eWRsaWdhLCBtw6R0YmFyYSBmcmFtZ8Olbmdza3JpdGVyaWVyIGbDtnIgcm9sbGVuIG9jaCBwZXJzb25lbi4nLFxuXHRcdHJlcXVpcmVkSW5mbzogW1xuXHRcdFx0J03DpHRiYXJhIGZyYW1nw6VuZ3Nrcml0ZXJpZXIgZsO2ciByb2xsZW4nLFxuXHRcdFx0J0tvbXBldGVuc2VyIG9jaCBlcmZhcmVuaGV0ZXIgc29tIGtyw6R2cycsXG5cdFx0XHQnUHJlc3RhbmRhLWluZGlrYXRvcmVyIG9jaCBtw6VsJyxcblx0XHRcdCdVdHZlY2tsaW5nc3BvdGVudGlhbCBvY2ggdGlsbHbDpHh0Jyxcblx0XHRcdCdLdWx0dXJlbGwgcGFzc25pbmcgb2NoIHbDpHJkZXJpbmdhcicsXG5cdFx0XHQnTGVkYXJza2Fwc2t2YWxpdGV0ZXIgb2NoIHN0aWxhcicsXG5cdFx0XHQnS29tbXVuaWthdGlvbnNmw7ZybcOlZ2Egb2NoIHNhbWFyYmV0ZScsXG5cdFx0XHQnTMOlbmdzaWt0aWdhIGthcnJpw6RybcO2amxpZ2hldGVyJ1xuXHRcdF0sXG5cdFx0cXVlc3Rpb25zOiBbXG5cdFx0XHQnVmlsa2Egc3BlY2lmaWthIHJlc3VsdGF0IGbDtnJ2w6RudGFyIG5pIGVyIGlub20gZGUgZsO2cnN0YSA5MCBkYWdhcm5hPycsXG5cdFx0XHQnVmlsa2EgdGVrbmlza2EgZWxsZXIgZnVua3Rpb25lbGxhIGtvbXBldGVuc2VyIMOkciBhYnNvbHV0IGtyaXRpc2thPycsXG5cdFx0XHQnSHVyIGtvbW1lciBuaSBhdHQgbcOkdGEgZnJhbWfDpW5nIGVmdGVyIDYgbcOlbmFkZXI/Jyxcblx0XHRcdCdWaWxrZW4gdXR2ZWNrbGluZ3Nwb3RlbnRpYWwgc2VyIG5pIGbDtnIgcGVyc29uZW4gaSByb2xsZW4/J1xuXHRcdF0sXG5cdFx0Y29tcGxldGlvblRocmVzaG9sZDogNzBcblx0fSxcblx0e1xuXHRcdGlkOiAncmVzb3VyY2VzLWJ1ZGdldCcsXG5cdFx0dGl0bGU6ICdSZXNvdXJjZXMgJiBCdWRnZXQnLFxuXHRcdGljb246ICfwn5KwJyxcblx0XHRkZXNjcmlwdGlvbjogJ1PDpGtlcnN0w6RsbCB0aWxscsOkY2tsaWdhIHJlc3Vyc2VyIG9jaCBidWRnZXQgZsO2ciBlbiBmcmFtZ8OlbmdzcmlrIHJla3J5dGVyaW5nLicsXG5cdFx0cmVxdWlyZWRJbmZvOiBbXG5cdFx0XHQnQnVkZ2V0IGbDtnIgcmVrcnl0ZXJpbmcgb2NoIG9uYm9hcmRpbmcnLFxuXHRcdFx0J1RpbGxnw6RuZ2xpZ2EgaW50ZXJuYSByZXN1cnNlcicsXG5cdFx0XHQnRXh0ZXJuYSBwYXJ0bmVycyBvY2ggdmVya3R5ZycsXG5cdFx0XHQnTMOlbmdzaWt0aWdhIGtvc3RuYWRlciBvY2ggaW52ZXN0ZXJpbmdhcicsXG5cdFx0XHQnTMO2bmVidWRnZXQgb2NoIGtvbXBlbnNhdGlvbnNzdHJ1a3R1cicsXG5cdFx0XHQnT25ib2FyZGluZyBvY2ggdXRiaWxkbmluZ3NyZXN1cnNlcicsXG5cdFx0XHQnUmVrcnl0ZXJpbmdzdmVya3R5ZyBvY2ggcGxhdHRmb3JtYXInLFxuXHRcdFx0J0JhY2t1cC1wbGFuZXIgb2NoIGFsdGVybmF0aXYnXG5cdFx0XSxcblx0XHRxdWVzdGlvbnM6IFtcblx0XHRcdCdWaWxrZW4gYnVkZ2V0IGhhciBuaSBmw7ZyIHJla3J5dGVyaW5nc3Byb2Nlc3NlbiBpbmtsdXNpdmUgZXh0ZXJuYSBwYXJ0bmVycz8nLFxuXHRcdFx0J1ZpbGthIGludGVybmEgcmVzdXJzZXIga2FuIG5pIHRpbGxkZWxhIGbDtnIgb25ib2FyZGluZyBvY2ggdXR2ZWNrbGluZz8nLFxuXHRcdFx0J0Zpbm5zIGRldCBiZWZpbnRsaWdhIHZlcmt0eWcgZWxsZXIgc3lzdGVtIHNvbSBrYW5kaWRhdGVuIGJlaMO2dmVyIGt1bm5hPycsXG5cdFx0XHQnVmlsa2Egw6RyIGRlIHRvdGFsYSBrb3N0bmFkZXJuYSBmw7ZyIHJvbGxlbiB1bmRlciBkZSBmw7Zyc3RhIDEyIG3DpW5hZGVybmE/J1xuXHRcdF0sXG5cdFx0Y29tcGxldGlvblRocmVzaG9sZDogNzBcblx0fSxcblx0e1xuXHRcdGlkOiAnb3JnYW5pemF0aW9uLWN1bHR1cmUnLFxuXHRcdHRpdGxlOiAnT3JnYW5pemF0aW9uICYgQ3VsdHVyZScsXG5cdFx0aWNvbjogJ/Cfj6InLFxuXHRcdGRlc2NyaXB0aW9uOiAnVmFsaWRlcmEgb3JnYW5pc2F0b3Jpc2sgYmVyZWRza2FwIG9jaCBrdWx0dXJlbGwgcGFzc2Zvcm0gZsO2ciByb2xsZW4uJyxcblx0XHRyZXF1aXJlZEluZm86IFtcblx0XHRcdCdPcmdhbmlzYXRvcmlzayBzdHJ1a3R1ciBvY2ggcmFwcG9ydGVyaW5nc2xpbmplcicsXG5cdFx0XHQnS3VsdHVyZWxsYSB2w6RyZGVyaW5nYXIgb2NoIGFyYmV0c21pbGrDticsXG5cdFx0XHQnVGVhbWR5bmFtaWsgb2NoIHNhbWFyYmV0c23Dtm5zdGVyJyxcblx0XHRcdCdTdMO2ZCBvY2ggdXR2ZWNrbGluZ3Ntw7ZqbGlnaGV0ZXInLFxuXHRcdFx0J0xlZGFyc2thcHNzdGlsIG9jaCBiZXNsdXRzcHJvY2Vzc2VyJyxcblx0XHRcdCdLb21tdW5pa2F0aW9uc2t1bHR1ciBvY2ggdHJhbnNwYXJlbnMnLFxuXHRcdFx0J0tvbmZsaWt0bMO2c25pbmcgb2NoIGZlZWRiYWNrLWt1bHR1cicsXG5cdFx0XHQnSW5ub3ZhdGlvbiBvY2ggZsO2csOkbmRyaW5nc2JlbsOkZ2VuaGV0J1xuXHRcdF0sXG5cdFx0cXVlc3Rpb25zOiBbXG5cdFx0XHQnSHVyIHBhc3NhciByb2xsZW4gaW4gaSBlciBudXZhcmFuZGUgb3JnYW5pc2F0aW9uc3N0cnVrdHVyPycsXG5cdFx0XHQnVmlsa2Ega3VsdHVyZWxsYSB2w6RyZGVyaW5nYXIgw6RyIHZpa3RpZ2FzdCBmw7ZyIGZyYW1nw6VuZyBpIHJvbGxlbj8nLFxuXHRcdFx0J0h1ciBrb21tZXIgcGVyc29uZW4gYXR0IHNhbWFyYmV0YSBtZWQgYW5kcmEgdGVhbSBvY2ggZnVua3Rpb25lcj8nLFxuXHRcdFx0J1ZpbGtldCBzdMO2ZCBvY2ggdmlsa2EgdXR2ZWNrbGluZ3Ntw7ZqbGlnaGV0ZXIga2FuIG5pIGVyYmp1ZGE/J1xuXHRcdF0sXG5cdFx0Y29tcGxldGlvblRocmVzaG9sZDogNzBcblx0fSxcblx0e1xuXHRcdGlkOiAnYWx0ZXJuYXRpdmVzLXJpc2tzJyxcblx0XHR0aXRsZTogJ0FsdGVybmF0aXZlcyAmIFJpc2tzJyxcblx0XHRpY29uOiAn8J+UhCcsXG5cdFx0ZGVzY3JpcHRpb246ICdVdHbDpHJkZXJhIGFsdGVybmF0aXYgb2NoIGlkZW50aWZpZXJhIHJpc2tlciBmw7ZyIGF0dCBzw6RrZXJzdMOkbGxhIG9wdGltYWxhIGJlc2x1dC4nLFxuXHRcdHJlcXVpcmVkSW5mbzogW1xuXHRcdFx0J0FsdGVybmF0aXZhIGzDtnNuaW5nYXIgdGlsbCByZWtyeXRlcmluZycsXG5cdFx0XHQnSWRlbnRpZmllcmFkZSByaXNrZXIgb2NoIG1pdGlnZXJpbmdhcicsXG5cdFx0XHQnRmFsbGJhY2stcGxhbmVyIG9jaCBrb250aW5nZW5zZXInLFxuXHRcdFx0J0zDpW5nc2lrdGlnYSBrb25zZWt2ZW5zZXIgYXYgYmVzbHV0ZXQnLFxuXHRcdFx0J0tvbmt1cnJlbnNtw6Rzc2lnYSBob3Qgb2NoIG3DtmpsaWdoZXRlcicsXG5cdFx0XHQnTWFya25hZHNmw7Zyw6RuZHJpbmdhciBvY2ggdHJlbmRlcicsXG5cdFx0XHQnSW50ZXJuYSBrYXBhY2l0ZXRzYmVncsOkbnNuaW5nYXInLFxuXHRcdFx0J1N0cmF0ZWdpc2thIGFsdGVybmF0aXYgb2NoIHNjZW5hcmllcidcblx0XHRdLFxuXHRcdHF1ZXN0aW9uczogW1xuXHRcdFx0J1ZpbGthIGFsdGVybmF0aXYgdGlsbCBleHRlcm4gcmVrcnl0ZXJpbmcgaGFyIG5pIMO2dmVydsOkZ3Q/Jyxcblx0XHRcdCdWaWxrYSDDpHIgZGUgc3TDtnJzdGEgcmlza2VybmEgbWVkIGRlbm5hIHJla3J5dGVyaW5nPycsXG5cdFx0XHQnSHVyIHNrdWxsZSBuaSBoYW50ZXJhIHNpdHVhdGlvbmVuIG9tIGthbmRpZGF0ZW4gaW50ZSBmdW5nZXJhcj8nLFxuXHRcdFx0J1ZpbGthIGzDpW5nc2lrdGlnYSBrb25zZWt2ZW5zZXIgc2VyIG5pIGF2IGRldHRhIGJlc2x1dD8nXG5cdFx0XSxcblx0XHRjb21wbGV0aW9uVGhyZXNob2xkOiA3MFxuXHR9XG5dO1xuXG5leHBvcnQgY29uc3QgZ2V0Q2x1c3RlckJ5SWQgPSAoaWQ6IENsdXN0ZXJUeXBlKTogQ2x1c3RlciB8IHVuZGVmaW5lZCA9PiB7XG5cdHJldHVybiBDTFVTVEVSUy5maW5kKGNsdXN0ZXIgPT4gY2x1c3Rlci5pZCA9PT0gaWQpO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldE5leHRDbHVzdGVyID0gKGN1cnJlbnRDbHVzdGVyOiBDbHVzdGVyVHlwZSk6IENsdXN0ZXJUeXBlIHwgbnVsbCA9PiB7XG5cdGNvbnN0IGN1cnJlbnRJbmRleCA9IENMVVNURVJTLmZpbmRJbmRleChjbHVzdGVyID0+IGNsdXN0ZXIuaWQgPT09IGN1cnJlbnRDbHVzdGVyKTtcblx0cmV0dXJuIGN1cnJlbnRJbmRleCA8IENMVVNURVJTLmxlbmd0aCAtIDEgPyBDTFVTVEVSU1tjdXJyZW50SW5kZXggKyAxXS5pZCA6IG51bGw7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0UHJldmlvdXNDbHVzdGVyID0gKGN1cnJlbnRDbHVzdGVyOiBDbHVzdGVyVHlwZSk6IENsdXN0ZXJUeXBlIHwgbnVsbCA9PiB7XG5cdGNvbnN0IGN1cnJlbnRJbmRleCA9IENMVVNURVJTLmZpbmRJbmRleChjbHVzdGVyID0+IGNsdXN0ZXIuaWQgPT09IGN1cnJlbnRDbHVzdGVyKTtcblx0cmV0dXJuIGN1cnJlbnRJbmRleCA+IDAgPyBDTFVTVEVSU1tjdXJyZW50SW5kZXggLSAxXS5pZCA6IG51bGw7XG59O1xuXG5leHBvcnQgY29uc3QgY2FsY3VsYXRlT3ZlcmFsbFByb2dyZXNzID0gKGNsdXN0ZXJzOiBSZWNvcmQ8Q2x1c3RlclR5cGUsIENsdXN0ZXJQcm9ncmVzcz4pOiBudW1iZXIgPT4ge1xuXHRjb25zdCB0b3RhbENsdXN0ZXJzID0gQ0xVU1RFUlMubGVuZ3RoO1xuXHRjb25zdCBjb21wbGV0ZWRDbHVzdGVycyA9IE9iamVjdC52YWx1ZXMoY2x1c3RlcnMpLmZpbHRlcihjbHVzdGVyID0+IGNsdXN0ZXIuc3RhdHVzID09PSAnY29tcGxldGVkJykubGVuZ3RoO1xuXHRjb25zdCBpblByb2dyZXNzQ2x1c3RlcnMgPSBPYmplY3QudmFsdWVzKGNsdXN0ZXJzKS5maWx0ZXIoY2x1c3RlciA9PiBjbHVzdGVyLnN0YXR1cyA9PT0gJ2luLXByb2dyZXNzJyk7XG5cdFxuXHRjb25zdCBpblByb2dyZXNzUHJvZ3Jlc3MgPSBpblByb2dyZXNzQ2x1c3RlcnMucmVkdWNlKChzdW0sIGNsdXN0ZXIpID0+IHN1bSArIGNsdXN0ZXIuY29uZmlkZW5jZSwgMCkgLyB0b3RhbENsdXN0ZXJzO1xuXHRcblx0cmV0dXJuIE1hdGgucm91bmQoKGNvbXBsZXRlZENsdXN0ZXJzIC8gdG90YWxDbHVzdGVycykgKiAxMDAgKyBpblByb2dyZXNzUHJvZ3Jlc3MpO1xufTtcbiJdLCJuYW1lcyI6WyJDTFVTVEVSUyIsImlkIiwidGl0bGUiLCJpY29uIiwiZGVzY3JpcHRpb24iLCJyZXF1aXJlZEluZm8iLCJxdWVzdGlvbnMiLCJjb21wbGV0aW9uVGhyZXNob2xkIiwiZ2V0Q2x1c3RlckJ5SWQiLCJmaW5kIiwiY2x1c3RlciIsImdldE5leHRDbHVzdGVyIiwiY3VycmVudENsdXN0ZXIiLCJjdXJyZW50SW5kZXgiLCJmaW5kSW5kZXgiLCJsZW5ndGgiLCJnZXRQcmV2aW91c0NsdXN0ZXIiLCJjYWxjdWxhdGVPdmVyYWxsUHJvZ3Jlc3MiLCJjbHVzdGVycyIsInRvdGFsQ2x1c3RlcnMiLCJjb21wbGV0ZWRDbHVzdGVycyIsIk9iamVjdCIsInZhbHVlcyIsImZpbHRlciIsInN0YXR1cyIsImluUHJvZ3Jlc3NDbHVzdGVycyIsImluUHJvZ3Jlc3NQcm9ncmVzcyIsInJlZHVjZSIsInN1bSIsImNvbmZpZGVuY2UiLCJNYXRoIiwicm91bmQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./lib/clusters.ts\n");

/***/ }),

/***/ "(rsc)/./lib/confidence.ts":
/*!***************************!*\
  !*** ./lib/confidence.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ROLE_COMPLETION_THRESHOLDS: () => (/* binding */ ROLE_COMPLETION_THRESHOLDS),\n/* harmony export */   ROLE_WEIGHTS: () => (/* binding */ ROLE_WEIGHTS),\n/* harmony export */   calculateRoleSpecificConfidence: () => (/* binding */ calculateRoleSpecificConfidence),\n/* harmony export */   calculateUniversalConfidence: () => (/* binding */ calculateUniversalConfidence)\n/* harmony export */ });\nconst ROLE_WEIGHTS = {\n    'cfo': {\n        specificity: 1.2,\n        quantification: 1.5,\n        context: 1.0,\n        causality: 1.1,\n        businessImpact: 1.4,\n        timingContext: 1.2\n    },\n    'finance': {\n        specificity: 1.1,\n        quantification: 1.4,\n        context: 1.0,\n        causality: 1.0,\n        businessImpact: 1.3,\n        timingContext: 1.1\n    },\n    'controller': {\n        specificity: 1.2,\n        quantification: 1.3,\n        context: 1.0,\n        causality: 1.0,\n        businessImpact: 1.2,\n        timingContext: 1.0\n    },\n    'tech': {\n        specificity: 1.3,\n        quantification: 1.0,\n        context: 1.2,\n        causality: 1.1,\n        businessImpact: 1.0,\n        timingContext: 1.1\n    },\n    'developer': {\n        specificity: 1.4,\n        quantification: 0.9,\n        context: 1.1,\n        causality: 1.0,\n        businessImpact: 0.9,\n        timingContext: 1.0\n    },\n    'engineer': {\n        specificity: 1.3,\n        quantification: 0.9,\n        context: 1.1,\n        causality: 1.0,\n        businessImpact: 0.9,\n        timingContext: 1.0\n    },\n    'tech-lead': {\n        specificity: 1.2,\n        quantification: 1.0,\n        context: 1.3,\n        causality: 1.2,\n        businessImpact: 1.1,\n        timingContext: 1.1\n    },\n    'cto': {\n        specificity: 1.1,\n        quantification: 1.1,\n        context: 1.4,\n        causality: 1.3,\n        businessImpact: 1.2,\n        timingContext: 1.2\n    },\n    'sales': {\n        specificity: 1.1,\n        quantification: 1.2,\n        context: 1.1,\n        causality: 1.2,\n        businessImpact: 1.3,\n        timingContext: 1.3\n    },\n    'sales-manager': {\n        specificity: 1.0,\n        quantification: 1.3,\n        context: 1.2,\n        causality: 1.3,\n        businessImpact: 1.4,\n        timingContext: 1.2\n    },\n    'account-manager': {\n        specificity: 1.0,\n        quantification: 1.2,\n        context: 1.1,\n        causality: 1.2,\n        businessImpact: 1.3,\n        timingContext: 1.1\n    },\n    'cmo': {\n        specificity: 1.0,\n        quantification: 1.1,\n        context: 1.3,\n        causality: 1.2,\n        businessImpact: 1.3,\n        timingContext: 1.2\n    },\n    'operations': {\n        specificity: 1.2,\n        quantification: 1.1,\n        context: 1.1,\n        causality: 1.1,\n        businessImpact: 1.1,\n        timingContext: 1.0\n    },\n    'operations-manager': {\n        specificity: 1.1,\n        quantification: 1.2,\n        context: 1.2,\n        causality: 1.2,\n        businessImpact: 1.2,\n        timingContext: 1.1\n    },\n    'coo': {\n        specificity: 1.0,\n        quantification: 1.1,\n        context: 1.3,\n        causality: 1.3,\n        businessImpact: 1.3,\n        timingContext: 1.2\n    },\n    'marketing': {\n        specificity: 1.0,\n        quantification: 1.1,\n        context: 1.3,\n        causality: 1.1,\n        businessImpact: 1.2,\n        timingContext: 1.1\n    },\n    'marketing-manager': {\n        specificity: 1.0,\n        quantification: 1.2,\n        context: 1.2,\n        causality: 1.2,\n        businessImpact: 1.3,\n        timingContext: 1.1\n    },\n    'hr': {\n        specificity: 1.0,\n        quantification: 1.0,\n        context: 1.2,\n        causality: 1.0,\n        businessImpact: 1.1,\n        timingContext: 1.0\n    },\n    'hr-manager': {\n        specificity: 1.0,\n        quantification: 1.1,\n        context: 1.3,\n        causality: 1.1,\n        businessImpact: 1.2,\n        timingContext: 1.0\n    },\n    'chro': {\n        specificity: 1.0,\n        quantification: 1.0,\n        context: 1.4,\n        causality: 1.2,\n        businessImpact: 1.3,\n        timingContext: 1.1\n    },\n    'default': {\n        specificity: 1.0,\n        quantification: 1.0,\n        context: 1.0,\n        causality: 1.0,\n        businessImpact: 1.0,\n        timingContext: 1.0\n    }\n};\nconst ROLE_COMPLETION_THRESHOLDS = {\n    'junior': {\n        'finance': 60,\n        'tech': 55,\n        'sales': 65,\n        'operations': 60,\n        'marketing': 60,\n        'hr': 55,\n        'general': 60\n    },\n    'mid': {\n        'finance': 70,\n        'tech': 65,\n        'sales': 75,\n        'operations': 70,\n        'marketing': 70,\n        'hr': 65,\n        'general': 70\n    },\n    'senior': {\n        'finance': 75,\n        'tech': 70,\n        'sales': 80,\n        'operations': 75,\n        'marketing': 75,\n        'hr': 70,\n        'general': 75\n    },\n    'executive': {\n        'finance': 80,\n        'tech': 75,\n        'sales': 85,\n        'operations': 80,\n        'marketing': 80,\n        'hr': 75,\n        'general': 80\n    }\n};\nconst calculateRoleSpecificConfidence = (analysis, roleContext, matchedInfoCount)=>{\n    const weights = ROLE_WEIGHTS[roleContext.role] || ROLE_WEIGHTS.default;\n    let confidence = 0;\n    confidence += analysis.categoriesCovered * 4;\n    confidence += analysis.specificity * 2 * weights.specificity;\n    confidence += analysis.quantification * 2 * weights.quantification;\n    confidence += analysis.context * 2 * weights.context;\n    confidence += analysis.causality * 2 * weights.causality;\n    if (analysis.businessImpact) confidence += 3 * weights.businessImpact;\n    if (analysis.timingContext) confidence += 3 * weights.timingContext;\n    const threshold = ROLE_COMPLETION_THRESHOLDS[roleContext.seniority][roleContext.department] || 70;\n    confidence = Math.min(confidence, threshold);\n    return Math.max(confidence, 0);\n};\nfunction calculateUniversalConfidence(analysis, matchedInfoCount) {\n    let confidence = 0;\n    confidence += analysis.categoriesCovered * 4;\n    confidence += analysis.specificity * 2;\n    confidence += analysis.quantification * 2;\n    confidence += analysis.context * 2;\n    confidence += analysis.causality * 2;\n    if (analysis.businessImpact) confidence += 3;\n    if (analysis.timingContext) confidence += 3;\n    if (analysis.categoriesCovered <= 2) confidence = Math.min(confidence, 30);\n    else if (analysis.categoriesCovered === 3) confidence = Math.min(confidence, 50);\n    else if (analysis.categoriesCovered >= 4) confidence = Math.min(confidence, 75);\n    if (analysis.businessImpact && analysis.timingContext) confidence = Math.min(confidence, 85);\n    else confidence = Math.min(confidence, 75);\n    confidence = Math.min(confidence, 80);\n    return Math.max(confidence, 0);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/confidence.ts\n");

/***/ }),

/***/ "(rsc)/./lib/progression.ts":
/*!****************************!*\
  !*** ./lib/progression.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateCumulativeProgress: () => (/* binding */ calculateCumulativeProgress),\n/* harmony export */   canProgressToNext: () => (/* binding */ canProgressToNext),\n/* harmony export */   generatePhaseTransition: () => (/* binding */ generatePhaseTransition),\n/* harmony export */   getClusterSummary: () => (/* binding */ getClusterSummary),\n/* harmony export */   getPhaseProgressionSignal: () => (/* binding */ getPhaseProgressionSignal)\n/* harmony export */ });\n/* harmony import */ var _clusters__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clusters */ \"(rsc)/./lib/clusters.ts\");\n/* harmony import */ var _quality_analysis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./quality-analysis */ \"(rsc)/./lib/quality-analysis.ts\");\n/* harmony import */ var _confidence__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./confidence */ \"(rsc)/./lib/confidence.ts\");\n\n\n\nconst calculateCumulativeProgress = (messages, currentCluster, roleContext)=>{\n    const cluster = (0,_clusters__WEBPACK_IMPORTED_MODULE_0__.getClusterById)(currentCluster);\n    if (!cluster) {\n        return {\n            totalInsights: 0,\n            gatheredInsights: [],\n            missingInsights: [],\n            phaseReadiness: 'gathering',\n            roleSpecificScore: 0,\n            completionThreshold: 70\n        };\n    }\n    const allText = messages.map((m)=>m.content).join(' ');\n    const messageLower = allText.toLowerCase();\n    const analysis = (0,_quality_analysis__WEBPACK_IMPORTED_MODULE_1__.analyzeUniversalQuality)(allText, messageLower);\n    const roleSpecificScore = (0,_confidence__WEBPACK_IMPORTED_MODULE_2__.calculateRoleSpecificConfidence)(analysis, roleContext, 0);\n    const gatheredInsights = [];\n    const missingInsights = [];\n    cluster.requiredInfo.forEach((infoPoint)=>{\n        const hasMatch = checkInfoPointMatchInternal(messageLower, infoPoint, currentCluster);\n        if (hasMatch) gatheredInsights.push(infoPoint);\n        else missingInsights.push(infoPoint);\n    });\n    const completionThreshold = _confidence__WEBPACK_IMPORTED_MODULE_2__.ROLE_COMPLETION_THRESHOLDS[roleContext.seniority][roleContext.department] || 70;\n    let phaseReadiness = 'gathering';\n    if (roleSpecificScore >= completionThreshold && gatheredInsights.length >= cluster.requiredInfo.length * 0.7) phaseReadiness = 'ready';\n    if (gatheredInsights.length >= cluster.requiredInfo.length) phaseReadiness = 'complete';\n    return {\n        totalInsights: cluster.requiredInfo.length,\n        gatheredInsights,\n        missingInsights,\n        phaseReadiness,\n        roleSpecificScore,\n        completionThreshold\n    };\n};\nconst getPhaseProgressionSignal = (currentCluster, roleContext, cumulativeProgress)=>{\n    const roleSignals = {\n        'pain-point': {\n            'cfo': [\n                'Bra! Nu förstår jag det finansiella problemet. Låt oss titta på vad det kostar er.',\n                'Perfekt! Vi har en tydlig bild av er ekonomiska utmaning. Nu behöver vi kvantifiera påverkan.',\n                'Utmärkt! Jag förstår er finansiella situation. Låt oss nu fokusera på kostnader och påverkan.'\n            ],\n            'tech': [\n                'Bra! Nu förstår jag det tekniska problemet. Låt oss titta på vad det kostar er.',\n                'Perfekt! Vi har en tydlig bild av er tekniska utmaning. Nu behöver vi kvantifiera påverkan.',\n                'Utmärkt! Jag förstår er tekniska situation. Låt oss nu fokusera på kostnader och påverkan.'\n            ],\n            'sales': [\n                'Bra! Nu förstår jag er försäljningsutmaning. Låt oss titta på vad det kostar er.',\n                'Perfekt! Vi har en tydlig bild av er säljproblem. Nu behöver vi kvantifiera påverkan.',\n                'Utmärkt! Jag förstår er försäljningssituation. Låt oss nu fokusera på kostnader och påverkan.'\n            ],\n            'operations': [\n                'Bra! Nu förstår jag er driftsutmaning. Låt oss titta på vad det kostar er.',\n                'Perfekt! Vi har en tydlig bild av er processproblem. Nu behöver vi kvantifiera påverkan.',\n                'Utmärkt! Jag förstår er driftsituation. Låt oss nu fokusera på kostnader och påverkan.'\n            ],\n            'marketing': [\n                'Bra! Nu förstår jag er marknadsutmaning. Låt oss titta på vad det kostar er.',\n                'Perfekt! Vi har en tydlig bild av er marknadsproblem. Nu behöver vi kvantifiera påverkan.',\n                'Utmärkt! Jag förstår er marknadssituation. Låt oss nu fokusera på kostnader och påverkan.'\n            ],\n            'hr': [\n                'Bra! Nu förstår jag er personalutmaning. Låt oss titta på vad det kostar er.',\n                'Perfekt! Vi har en tydlig bild av er HR-problem. Nu behöver vi kvantifiera påverkan.',\n                'Utmärkt! Jag förstår er personalsituation. Låt oss nu fokusera på kostnader och påverkan.'\n            ]\n        }\n    };\n    const clusterSignals = roleSignals[currentCluster] || {};\n    const roleSpecificSignals = clusterSignals[roleContext.role] || clusterSignals['default'] || [\n        'Bra! Nu förstår jag problemet. Låt oss titta på vad det kostar er.',\n        'Perfekt! Vi har en tydlig bild av utmaningen. Nu behöver vi kvantifiera påverkan.',\n        'Utmärkt! Jag förstår situationen. Låt oss nu fokusera på kostnader och påverkan.'\n    ];\n    return roleSpecificSignals[Math.floor(Math.random() * roleSpecificSignals.length)];\n};\nconst canProgressToNext = (currentCluster, clusterType)=>{\n    const cluster = (0,_clusters__WEBPACK_IMPORTED_MODULE_0__.getClusterById)(clusterType);\n    if (!cluster) return false;\n    const minExchanges = 5;\n    const hasMinimumExchanges = currentCluster.collectedInfo.length >= minExchanges;\n    const hasHighConfidence = currentCluster.confidence >= cluster.completionThreshold;\n    const requiredInfoCount = cluster.requiredInfo.length;\n    const collectedInfoCount = currentCluster.collectedInfo.length;\n    const coverageRatio = collectedInfoCount / requiredInfoCount;\n    const hasSubstantialCoverage = coverageRatio >= 0.75;\n    return hasMinimumExchanges && hasHighConfidence && hasSubstantialCoverage;\n};\nconst generatePhaseTransition = (fromCluster, toCluster)=>{\n    const from = (0,_clusters__WEBPACK_IMPORTED_MODULE_0__.getClusterById)(fromCluster);\n    const to = (0,_clusters__WEBPACK_IMPORTED_MODULE_0__.getClusterById)(toCluster);\n    if (!from || !to) {\n        return {\n            message: \"Okej, låt oss gå vidare.\",\n            summary: \"Fortsättning av analysen\",\n            nextSteps: [\n                \"Fortsätt med nästa fas\"\n            ]\n        };\n    }\n    const transitions = {\n        'pain-point->impact-urgency': {\n            message: `Bra! Nu förstår jag problemet. Låt oss titta på vad det kostar er.`,\n            summary: `Avslutat: ${from.title} → Startar: ${to.title}`,\n            nextSteps: [\n                \"Kvantifiera påverkan på verksamheten\",\n                \"Identifiera tidskritiska faktorer\",\n                \"Bedöma affärsnytta och ROI\"\n            ]\n        },\n        'impact-urgency->success-criteria': {\n            message: `Okej, så nu vet vi vad det kostar. Vad ska personen åstadkomma?`,\n            summary: `Avslutat: ${from.title} → Startar: ${to.title}`,\n            nextSteps: [\n                \"Definiera mätbara framgångskriterier\",\n                \"Specificera kritiska kompetenser\",\n                \"Ställa upp prestanda-indikatorer\"\n            ]\n        },\n        'success-criteria->resources-budget': {\n            message: `Bra! Nu vet vi vad som ska åstadkommas. Vilka resurser har ni?`,\n            summary: `Avslutat: ${from.title} → Startar: ${to.title}`,\n            nextSteps: [\n                \"Bedöma budget och resurser\",\n                \"Planera onboarding-processen\",\n                \"Identifiera externa partners\"\n            ]\n        },\n        'resources-budget->organization-culture': {\n            message: `Okej, så resurserna finns. Hur passar rollen in i er organisation?`,\n            summary: `Avslutat: ${from.title} → Startar: ${to.title}`,\n            nextSteps: [\n                \"Validera organisationsstruktur\",\n                \"Bedöma kulturell passform\",\n                \"Planera teamintegration\"\n            ]\n        },\n        'organization-culture->alternatives-risks': {\n            message: `Bra! Nu har vi en bra bild. Låt oss titta på risker och alternativ.`,\n            summary: `Avslutat: ${from.title} → Startar: ${to.title}`,\n            nextSteps: [\n                \"Utvärdera alternativa lösningar\",\n                \"Identifiera och mitigera risker\",\n                \"Skapa fallback-planer\"\n            ]\n        }\n    };\n    const transitionKey = `${fromCluster}->${toCluster}`;\n    return transitions[transitionKey] || {\n        message: `Låt oss fortsätta med ${to.title}. ${to.description}`,\n        summary: `Fortsätter till: ${to.title}`,\n        nextSteps: [\n            \"Fortsätt med analysen\"\n        ]\n    };\n};\nconst getClusterSummary = (clusterType, progress)=>{\n    const cluster = (0,_clusters__WEBPACK_IMPORTED_MODULE_0__.getClusterById)(clusterType);\n    if (!cluster) return \"Okänd kluster\";\n    const completion = Math.round(progress.collectedInfo.length / cluster.requiredInfo.length * 100);\n    return `${cluster.title}: ${completion}% komplett (${progress.confidence}% säkerhet)`;\n};\nfunction checkInfoPointMatchInternal(message, infoPoint, cluster) {\n    const patterns = {\n        'pain-point': {\n            'Nuvarande problem eller gap som behöver lösas': [\n                'problem',\n                'gap',\n                'behöver',\n                'saknas',\n                'brist',\n                'utmaning',\n                'svårighet',\n                'cfo',\n                'chef',\n                'ledare'\n            ],\n            'Konsekvenser av att inte lösa problemet': [\n                'konsekvens',\n                'risker',\n                'händer om',\n                'om vi inte',\n                'försening',\n                'kostnad'\n            ],\n            'Vem som påverkas av problemet': [\n                'team',\n                'avdelning',\n                'organisation',\n                'påverkas',\n                'drabbas',\n                'berör'\n            ],\n            'Tidsram för när problemet måste lösas': [\n                'tidsram',\n                'när',\n                'snart',\n                'månader',\n                'veckor',\n                'akut',\n                'brådskande'\n            ]\n        },\n        'impact-urgency': {\n            'Kvantifierad påverkan på verksamheten': [\n                'påverkan',\n                'effekt',\n                'resultat',\n                'kpi',\n                'mätbar',\n                'siffror',\n                'procent'\n            ],\n            'Brådskan och tidskritiska faktorer': [\n                'brådskande',\n                'akut',\n                'tidskritisk',\n                'deadline',\n                'snart',\n                'månader'\n            ],\n            'Affärsnytta och ROI-prognos': [\n                'roi',\n                'affärsnytta',\n                'vinst',\n                'kostnad',\n                'investering',\n                'tillbaka'\n            ],\n            'Risken av förseningar': [\n                'risk',\n                'försening',\n                'förlust',\n                'missad',\n                'chans',\n                'konkurrens'\n            ]\n        },\n        'success-criteria': {\n            'Mätbara framgångskriterier för rollen': [\n                'framgång',\n                'mål',\n                'kriterier',\n                'mätbar',\n                'kpi',\n                'resultat'\n            ],\n            'Kompetenser och erfarenheter som krävs': [\n                'kompetens',\n                'erfarenhet',\n                'kunskaper',\n                'färdigheter',\n                'utbildning'\n            ],\n            'Prestanda-indikatorer och mål': [\n                'prestanda',\n                'indikatorer',\n                'mål',\n                'benchmark',\n                'standard'\n            ],\n            'Utvecklingspotential och tillväxt': [\n                'utveckling',\n                'tillväxt',\n                'potential',\n                'karriär',\n                'framtid'\n            ]\n        },\n        'resources-budget': {\n            'Budget för rekrytering och onboarding': [\n                'budget',\n                'kostnad',\n                'pengar',\n                'resurser',\n                'onboarding'\n            ],\n            'Tillgängliga interna resurser': [\n                'interna',\n                'resurser',\n                'personal',\n                'team',\n                'hjälp'\n            ],\n            'Externa partners och verktyg': [\n                'externa',\n                'partners',\n                'verktyg',\n                'system',\n                'konsulter'\n            ],\n            'Långsiktiga kostnader och investeringar': [\n                'långsiktig',\n                'investering',\n                'kostnad',\n                'framtid',\n                'år'\n            ]\n        },\n        'organization-culture': {\n            'Organisatorisk struktur och rapporteringslinjer': [\n                'struktur',\n                'rapportering',\n                'hierarki',\n                'organisation',\n                'chef'\n            ],\n            'Kulturella värderingar och arbetsmiljö': [\n                'kultur',\n                'värderingar',\n                'miljö',\n                'atmosfär',\n                'stil'\n            ],\n            'Teamdynamik och samarbetsmönster': [\n                'team',\n                'samarbete',\n                'dynamik',\n                'grupp',\n                'kollegor'\n            ],\n            'Stöd och utvecklingsmöjligheter': [\n                'stöd',\n                'utveckling',\n                'möjligheter',\n                'träning',\n                'lärande'\n            ]\n        },\n        'alternatives-risks': {\n            'Alternativa lösningar till rekrytering': [\n                'alternativ',\n                'andra',\n                'lösningar',\n                'istället',\n                'utöver'\n            ],\n            'Identifierade risker och mitigeringar': [\n                'risker',\n                'risk',\n                'problem',\n                'mitigering',\n                'hantera'\n            ],\n            'Fallback-planer och kontingenser': [\n                'fallback',\n                'plan b',\n                'kontingens',\n                'reserv',\n                'backup'\n            ],\n            'Långsiktiga konsekvenser av beslutet': [\n                'långsiktig',\n                'konsekvenser',\n                'framtid',\n                'påverkan',\n                'resultat'\n            ]\n        }\n    };\n    const clusterPatterns = patterns[cluster];\n    const infoPatterns = clusterPatterns[infoPoint];\n    if (!infoPatterns) {\n        const keywords = infoPoint.toLowerCase().replace(/[^\\w\\s]/g, ' ').split(/\\s+/).filter((w)=>w.length > 2);\n        return keywords.some((keyword)=>message.includes(keyword.toLowerCase()));\n    }\n    return infoPatterns.some((pattern)=>message.includes(pattern));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/progression.ts\n");

/***/ }),

/***/ "(rsc)/./lib/quality-analysis.ts":
/*!*********************************!*\
  !*** ./lib/quality-analysis.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   analyzeCausality: () => (/* binding */ analyzeCausality),\n/* harmony export */   analyzeContext: () => (/* binding */ analyzeContext),\n/* harmony export */   analyzeQuantification: () => (/* binding */ analyzeQuantification),\n/* harmony export */   analyzeSpecificity: () => (/* binding */ analyzeSpecificity),\n/* harmony export */   analyzeUniversalQuality: () => (/* binding */ analyzeUniversalQuality)\n/* harmony export */ });\nfunction analyzeUniversalQuality(message, messageLower) {\n    const analysis = {\n        categoriesCovered: 0,\n        specificity: 0,\n        quantification: 0,\n        context: 0,\n        causality: 0,\n        businessImpact: false,\n        timingContext: false,\n        overallScore: 0\n    };\n    const situationIndicators = [\n        'current',\n        'now',\n        'currently',\n        'present',\n        'existing',\n        'situation',\n        'state',\n        'status',\n        'growing',\n        'growth',\n        'development',\n        'expansion',\n        'scaling',\n        'nu',\n        'nuvarande',\n        'läget',\n        'situationen',\n        'befintlig',\n        'nuläge',\n        'status',\n        'växande',\n        'växer',\n        'utveckling',\n        'tillväxt',\n        'skalning',\n        'expansion'\n    ];\n    const hasSituation = situationIndicators.some((indicator)=>messageLower.includes(indicator));\n    if (hasSituation) analysis.categoriesCovered++;\n    const gapIndicators = [\n        'missing',\n        'lack',\n        'need',\n        'problem',\n        'issue',\n        'challenge',\n        'difficulty',\n        'gap',\n        'bottleneck',\n        'blocking',\n        'struggle',\n        'struggling',\n        'failing',\n        'failure',\n        'insufficient',\n        'inadequate',\n        'saknas',\n        'brist',\n        'behöver',\n        'problem',\n        'utmaning',\n        'svårighet',\n        'flaskhals',\n        'stoppar',\n        'räcker inte',\n        'inte tillräckligt',\n        'otillräcklig',\n        'kämpar',\n        'kämpar med',\n        'misslyckas',\n        'misslyckande'\n    ];\n    const hasGap = gapIndicators.some((indicator)=>messageLower.includes(indicator));\n    if (hasGap) analysis.categoriesCovered++;\n    const impactIndicators = [\n        'impact',\n        'affect',\n        'influence',\n        'result',\n        'consequence',\n        'outcome',\n        'performance',\n        'efficiency',\n        'productivity',\n        'revenue',\n        'cost',\n        'loss',\n        'profit',\n        'margin',\n        'growth',\n        'scaling',\n        'competitiveness',\n        'market position',\n        'customer satisfaction',\n        'development',\n        'system',\n        'integration',\n        'scalability',\n        'technology',\n        'innovation',\n        'digital',\n        'automation',\n        'optimization',\n        'security',\n        'reliability',\n        'uptime',\n        'performance',\n        'speed',\n        'capacity',\n        'sales',\n        'pipeline',\n        'conversion',\n        'marketing',\n        'leads',\n        'customers',\n        'acquisition',\n        'retention',\n        'churn',\n        'revenue',\n        'market share',\n        'brand',\n        'positioning',\n        'campaign',\n        'funnel',\n        'operations',\n        'processes',\n        'delivery',\n        'quality',\n        'supply chain',\n        'logistics',\n        'manufacturing',\n        'production',\n        'service',\n        'support',\n        'customer service',\n        'satisfaction',\n        'retention',\n        'strategy',\n        'vision',\n        'transformation',\n        'leadership',\n        'management',\n        'culture',\n        'team',\n        'organization',\n        'change',\n        'initiative',\n        'project',\n        'program',\n        'goals',\n        'objectives',\n        'mission',\n        'påverkar',\n        'påverkan',\n        'konsekvens',\n        'utfall',\n        'prestanda',\n        'effektivitet',\n        'produktivitet',\n        'intäkt',\n        'omsättning',\n        'kostnad',\n        'förlust',\n        'lönsamhet',\n        'marginal',\n        'kassaflöde',\n        'cash flow',\n        'churn',\n        'tillväxt',\n        'skalning',\n        'konkurrenskraft',\n        'marknadsposition',\n        'kundnöjdhet',\n        'utveckling',\n        'system',\n        'integration',\n        'skalbarhet',\n        'teknologi',\n        'innovation',\n        'digital',\n        'automatisering',\n        'optimering',\n        'säkerhet',\n        'tillförlitlighet',\n        'drift',\n        'hastighet',\n        'kapacitet',\n        'försäljning',\n        'pipeline',\n        'konvertering',\n        'marknadsföring',\n        'leads',\n        'kunder',\n        'förvärv',\n        'behållning',\n        'marknadsandel',\n        'varumärke',\n        'positionering',\n        'kampanj',\n        'tratt',\n        'operationer',\n        'processer',\n        'leverans',\n        'kvalitet',\n        'leveranskedja',\n        'logistik',\n        'tillverkning',\n        'produktion',\n        'service',\n        'support',\n        'kundservice',\n        'strategi',\n        'vision',\n        'transformation',\n        'ledarskap',\n        'ledning',\n        'kultur',\n        'team',\n        'organisation',\n        'förändring',\n        'initiativ',\n        'projekt',\n        'program',\n        'mål',\n        'uppdrag'\n    ];\n    const hasImpact = impactIndicators.some((indicator)=>messageLower.includes(indicator));\n    if (hasImpact) {\n        analysis.categoriesCovered++;\n        analysis.businessImpact = true;\n    }\n    const stakeholderIndicators = [\n        'team',\n        'customer',\n        'user',\n        'client',\n        'employee',\n        'manager',\n        'department',\n        'company',\n        'organization',\n        'stakeholder',\n        'staff',\n        'colleagues',\n        'partners',\n        'vendors',\n        'suppliers',\n        'investors',\n        'board',\n        'executives',\n        'leadership',\n        'users',\n        'end users',\n        'internal',\n        'external',\n        'cross-functional',\n        'department',\n        'division',\n        'unit',\n        'group',\n        'people',\n        'individuals',\n        'professionals',\n        'specialists',\n        'experts',\n        'practitioners',\n        'teamet',\n        'kund',\n        'kunder',\n        'användare',\n        'medarbetare',\n        'chef',\n        'avdelning',\n        'bolag',\n        'företag',\n        'organisation',\n        'intressent',\n        'personal',\n        'kollegor',\n        'partners',\n        'leverantörer',\n        'investerare',\n        'styrelse',\n        'ledning',\n        'slutanvändare',\n        'intern',\n        'extern',\n        'tvärfunktionell',\n        'avdelning',\n        'division',\n        'enhet',\n        'grupp',\n        'människor',\n        'individer',\n        'professionella',\n        'specialister',\n        'experter',\n        'praktiker',\n        'våra',\n        'vårt',\n        'vår',\n        'behov',\n        'behoven',\n        'vårt team',\n        'våra kunder',\n        'våra användare'\n    ];\n    const hasStakeholder = stakeholderIndicators.some((indicator)=>messageLower.includes(indicator));\n    if (hasStakeholder) analysis.categoriesCovered++;\n    const timingIndicators = [\n        'urgent',\n        'deadline',\n        'timeline',\n        'schedule',\n        'timeframe',\n        'soon',\n        'immediate',\n        'priority',\n        'critical',\n        'important',\n        'now',\n        'month',\n        'quarter',\n        'year',\n        'timeline',\n        'milestone',\n        'launch',\n        'release',\n        'project',\n        'phase',\n        'stage',\n        'period',\n        'window',\n        'opportunity',\n        'timing',\n        'momentum',\n        'growth',\n        'expansion',\n        'scaling',\n        'funding',\n        'investment',\n        'capital',\n        'financing',\n        'investment',\n        'round',\n        'funding round',\n        'brådskande',\n        'deadline',\n        'tidslinje',\n        'tidplan',\n        'snart',\n        'omedelbart',\n        'prioritet',\n        'kritiskt',\n        'viktigt',\n        'nu',\n        'månad',\n        'mån',\n        'kvartal',\n        'år',\n        'q1',\n        'q2',\n        'q3',\n        'q4',\n        'milstolpe',\n        'lansering',\n        'release',\n        'projekt',\n        'fas',\n        'steg',\n        'period',\n        'fönster',\n        'möjlighet',\n        'timing',\n        'momentum',\n        'tillväxt',\n        'expansion',\n        'skalning',\n        'finansiering',\n        'investering',\n        'kapital',\n        'finansieringsrunda',\n        'investeringsrunda'\n    ];\n    const hasTiming = timingIndicators.some((indicator)=>messageLower.includes(indicator));\n    if (hasTiming) {\n        analysis.categoriesCovered++;\n        analysis.timingContext = true;\n    }\n    const scopeIndicators = [\n        'scale',\n        'size',\n        'volume',\n        'amount',\n        'number',\n        'percentage',\n        'growth',\n        'increase',\n        'decrease',\n        'expansion',\n        'reduction',\n        'magnitude',\n        'scope',\n        'reach',\n        'coverage',\n        'extent',\n        'range',\n        'capacity',\n        'throughput',\n        'output',\n        'input',\n        'demand',\n        'supply',\n        'market',\n        'global',\n        'local',\n        'regional',\n        'national',\n        'international',\n        'enterprise',\n        'startup',\n        'small',\n        'medium',\n        'large',\n        'huge',\n        'massive',\n        'significant',\n        'substantial',\n        'considerable',\n        'major',\n        'minor',\n        'micro',\n        'macro',\n        '10x',\n        'x10',\n        '2x',\n        '3x',\n        '5x',\n        '10x',\n        '100x',\n        '1000x',\n        'skala',\n        'storlek',\n        'volym',\n        'antal',\n        'procent',\n        'tillväxt',\n        'ökning',\n        'minskning',\n        'expansion',\n        'reduktion',\n        'omfattning',\n        'räckvidd',\n        'täckning',\n        'utsträckning',\n        'omfång',\n        'kapacitet',\n        'genomströmning',\n        'utdata',\n        'indata',\n        'efterfrågan',\n        'utbud',\n        'marknad',\n        'global',\n        'lokal',\n        'regional',\n        'nationell',\n        'internationell',\n        'företag',\n        'startup',\n        'liten',\n        'mellan',\n        'stor',\n        'enorm',\n        'massiv',\n        'betydande',\n        'betydlig',\n        'avsevärd',\n        'stor',\n        'liten',\n        'mikro',\n        'makro',\n        '10x',\n        'x10',\n        '2x',\n        '3x',\n        '5x',\n        '10x',\n        '100x',\n        '1000x'\n    ];\n    const hasScope = scopeIndicators.some((indicator)=>messageLower.includes(indicator));\n    if (hasScope) analysis.categoriesCovered++;\n    analysis.specificity = analyzeSpecificity(message, messageLower);\n    analysis.quantification = analyzeQuantification(message, messageLower);\n    analysis.context = analyzeContext(message, messageLower);\n    analysis.causality = analyzeCausality(message, messageLower);\n    analysis.overallScore = (analysis.specificity + analysis.quantification + analysis.context + analysis.causality) / 4;\n    return analysis;\n}\nfunction analyzeSpecificity(message, messageLower) {\n    let score = 0;\n    const genericPhrases = [\n        'we need someone',\n        'looking for',\n        'hire',\n        'recruit',\n        'find',\n        'get'\n    ];\n    const hasGeneric = genericPhrases.some((phrase)=>messageLower.includes(phrase));\n    if (hasGeneric && message.length < 100) score = 1;\n    const specificRoleIndicators = [\n        'senior',\n        'junior',\n        'lead',\n        'principal',\n        'architect',\n        'engineer',\n        'developer',\n        'manager',\n        'director',\n        'specialist',\n        'coordinator',\n        'analyst',\n        'consultant',\n        'advisor',\n        'expert',\n        'practitioner',\n        'tech lead',\n        'tech lead',\n        'frontend',\n        'backend',\n        'fullstack',\n        'devops',\n        'sre',\n        'data scientist',\n        'data engineer',\n        'ml engineer',\n        'ai engineer',\n        'mobile developer',\n        'web developer',\n        'sales manager',\n        'account manager',\n        'business development',\n        'marketing manager',\n        'growth manager',\n        'revenue manager',\n        'partnership manager',\n        'customer success',\n        'sales director',\n        'cmo',\n        'cpo',\n        'operations manager',\n        'process manager',\n        'quality manager',\n        'supply chain',\n        'logistics',\n        'production manager',\n        'service manager',\n        'support manager',\n        'customer service',\n        'operations director',\n        'ceo',\n        'cto',\n        'cfo',\n        'coo',\n        'vp',\n        'vice president',\n        'head of',\n        'chief',\n        'executive',\n        'founder',\n        'co-founder',\n        'president',\n        'chairman',\n        'ekonomifunktionen',\n        'ekonomi',\n        'ekonom',\n        'ekonomi-',\n        'ekonomi-avdelning',\n        'utvecklare',\n        'utveckling',\n        'teknik',\n        'försäljning',\n        'marknadsföring',\n        'operationer',\n        'ledning',\n        'chef',\n        'direktör',\n        'specialist',\n        'expert',\n        'praktiker'\n    ];\n    if (specificRoleIndicators.some((indicator)=>messageLower.includes(indicator))) score = 2;\n    const technicalIndicators = [\n        'react',\n        'python',\n        'aws',\n        'kubernetes',\n        'microservices',\n        'api',\n        'database',\n        'frontend',\n        'backend',\n        'devops',\n        'node',\n        'javascript',\n        'typescript',\n        'java',\n        'c#',\n        'go',\n        'rust',\n        'php',\n        'ruby',\n        'swift',\n        'kotlin',\n        'azure',\n        'gcp',\n        'docker',\n        'terraform',\n        'ansible',\n        'jenkins',\n        'gitlab',\n        'github',\n        'ci/cd',\n        'cicd',\n        'deployment',\n        'infrastructure',\n        'monitoring',\n        'logging',\n        'security',\n        'machine learning',\n        'ml',\n        'ai',\n        'artificial intelligence',\n        'data science',\n        'analytics',\n        'big data',\n        'sql',\n        'nosql',\n        'mongodb',\n        'postgresql',\n        'mysql',\n        'redis',\n        'elasticsearch',\n        'crm',\n        'erp',\n        'saas',\n        'paas',\n        'iaas',\n        'b2b',\n        'b2c',\n        'ecommerce',\n        'fintech',\n        'healthtech',\n        'edtech',\n        'martech',\n        'adtech',\n        'proptech',\n        'utveckling',\n        'system',\n        'integration',\n        'skalbarhet',\n        'teknologi',\n        'innovation',\n        'digital',\n        'automatisering',\n        'optimering',\n        'säkerhet',\n        'tillförlitlighet',\n        'drift',\n        'hastighet',\n        'kapacitet'\n    ];\n    if (technicalIndicators.some((indicator)=>messageLower.includes(indicator))) score = 3;\n    const verySpecificIndicators = [\n        'version',\n        'framework',\n        'tool',\n        'platform',\n        'technology',\n        'methodology',\n        'process',\n        'workflow',\n        'architecture',\n        'pattern',\n        'design',\n        'implementation',\n        'configuration',\n        'setup',\n        'deployment',\n        'strategy',\n        'tactics',\n        'approach',\n        'method',\n        'technique',\n        'practice',\n        'standard',\n        'protocol',\n        'procedure',\n        'guideline',\n        'policy',\n        'rule',\n        'regulation',\n        'compliance',\n        'governance',\n        'kpi',\n        'metric',\n        'measurement',\n        'indicator',\n        'benchmark',\n        'target',\n        'goal',\n        'objective',\n        'milestone',\n        'deadline',\n        'timeline',\n        'roadmap',\n        'budget',\n        'cost',\n        'roi',\n        'roas',\n        'ltv',\n        'cac',\n        'version',\n        'ramverk',\n        'verktyg',\n        'plattform',\n        'teknologi',\n        'metodologi',\n        'process',\n        'arbetsflöde',\n        'arkitektur',\n        'mönster',\n        'design',\n        'implementering',\n        'konfiguration',\n        'setup',\n        'deployment',\n        'strategi',\n        'taktik',\n        'approach',\n        'metod',\n        'teknik',\n        'praxis',\n        'standard',\n        'protokoll',\n        'procedur',\n        'riktlinje',\n        'policy',\n        'regel',\n        'reglering',\n        'compliance',\n        'styrning',\n        'nyckeltal',\n        'mätvärde',\n        'indikator',\n        'riktmärke',\n        'mål',\n        'objektiv',\n        'milstolpe',\n        'deadline',\n        'tidslinje',\n        'vägkarta',\n        'budget',\n        'kostnad',\n        'roi',\n        'roas',\n        'ltv',\n        'cac'\n    ];\n    if (verySpecificIndicators.some((indicator)=>messageLower.includes(indicator))) score = 4;\n    return Math.min(score, 4);\n}\nfunction analyzeQuantification(message, messageLower) {\n    let score = 0;\n    const numberPattern = /\\b\\d+[\\d,.]*\\b/g;\n    const rangePattern = /\\b\\d+[\\d,.]*\\s?[–-]\\s?\\d+[\\d,.]*\\b/g;\n    const numbers = [\n        ...message.match(rangePattern) || [],\n        ...message.match(numberPattern) || []\n    ];\n    if (numbers && numbers.length > 0) {\n        score += Math.min(numbers.length, 2);\n    }\n    const timeIndicators = [\n        'day',\n        'week',\n        'month',\n        'quarter',\n        'year',\n        'hour',\n        'minute',\n        'second',\n        'dag',\n        'vecka',\n        'månad',\n        'kvartal',\n        'år',\n        'timme',\n        'minut',\n        'sekund',\n        'mån'\n    ];\n    if (timeIndicators.some((indicator)=>messageLower.includes(indicator))) score += 1;\n    const percentagePattern = /\\d+%/g;\n    if (message.match(percentagePattern)) score += 1;\n    const moneyPattern = /(\\$|€|£)?\\s?\\d+[\\d,\\.]*\\s?(k|m|mn|mnkr|tkr|kr|million|thousand)?/gi;\n    if (message.match(moneyPattern)) score += 1;\n    return Math.min(score, 4);\n}\nfunction analyzeContext(message, messageLower) {\n    let score = 0;\n    const businessContext = [\n        'company',\n        'organization',\n        'startup',\n        'enterprise',\n        'team',\n        'department',\n        'project',\n        'product',\n        'företag',\n        'bolag',\n        'organisation',\n        'teamet',\n        'avdelning',\n        'projekt',\n        'produkt',\n        'växande företag',\n        'växande bolag'\n    ];\n    if (businessContext.some((indicator)=>messageLower.includes(indicator))) score += 1;\n    const industryContext = [\n        'tech',\n        'finance',\n        'healthcare',\n        'retail',\n        'manufacturing',\n        'consulting',\n        'agency',\n        'saas'\n    ];\n    if (industryContext.some((indicator)=>messageLower.includes(indicator))) score += 1;\n    const marketContext = [\n        'market',\n        'competition',\n        'customer',\n        'user',\n        'client',\n        'demand',\n        'growth',\n        'expansion',\n        'marknad',\n        'konkurrens',\n        'kund',\n        'användare',\n        'efterfrågan',\n        'tillväxt',\n        'expansion',\n        'växande'\n    ];\n    if (marketContext.some((indicator)=>messageLower.includes(indicator))) score += 1;\n    const strategicContext = [\n        'strategy',\n        'goal',\n        'objective',\n        'mission',\n        'vision',\n        'roadmap',\n        'plan',\n        'initiative'\n    ];\n    if (strategicContext.some((indicator)=>messageLower.includes(indicator))) score += 1;\n    return Math.min(score, 4);\n}\nfunction analyzeCausality(message, messageLower) {\n    let score = 0;\n    const causalIndicators = [\n        'because',\n        'due to',\n        'as a result',\n        'therefore',\n        'since',\n        'caused by',\n        'leads to',\n        'results in',\n        'eftersom',\n        'på grund av',\n        'som ett resultat',\n        'därför',\n        'leder till',\n        'resulterar i',\n        'uppstår när',\n        'medför',\n        'medan',\n        'samtidigt som',\n        'trots att',\n        'fastän',\n        'därför att',\n        'eftersom att',\n        'på grund av att'\n    ];\n    if (causalIndicators.some((indicator)=>messageLower.includes(indicator))) score += 2;\n    const problemSolution = [\n        'solve',\n        'fix',\n        'address',\n        'resolve',\n        'improve',\n        'enhance',\n        'optimize',\n        'streamline',\n        'lösa',\n        'åtgärda',\n        'hantera',\n        'förbättra',\n        'optimera',\n        'effektivisera',\n        'måste',\n        'behöver',\n        'kräver',\n        'saknar',\n        'brist',\n        'problem',\n        'utmaning',\n        'svårighet'\n    ];\n    if (problemSolution.some((indicator)=>messageLower.includes(indicator))) score += 1;\n    const consequenceIndicators = [\n        'if not',\n        'otherwise',\n        'without',\n        'failing to',\n        'unable to',\n        'cannot',\n        'will not',\n        'om inte',\n        'annars',\n        'utan',\n        'kan inte',\n        'kommer inte',\n        'förlorat',\n        'förlorar',\n        'missar',\n        'missat',\n        'går miste om',\n        'tappar',\n        'tappat',\n        'inte kunde',\n        'inte kan',\n        'inte klarar',\n        'inte lyckas',\n        'inte fungerar'\n    ];\n    if (consequenceIndicators.some((indicator)=>messageLower.includes(indicator))) score += 1;\n    const comparativeImpact = [\n        'while',\n        'whereas',\n        'compared to',\n        'versus',\n        'vs',\n        'but',\n        'however',\n        'medan',\n        'samtidigt',\n        'jämfört med',\n        'mot',\n        'men',\n        'dock',\n        'däremot',\n        'växer',\n        'växte',\n        'når',\n        'nådde',\n        'ökar',\n        'ökade',\n        'minskar',\n        'minskat'\n    ];\n    if (comparativeImpact.some((indicator)=>messageLower.includes(indicator))) score += 1;\n    return Math.min(score, 4);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/quality-analysis.ts\n");

/***/ }),

/***/ "(rsc)/./lib/questions.ts":
/*!**************************!*\
  !*** ./lib/questions.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getChallengerInsight: () => (/* binding */ getChallengerInsight),\n/* harmony export */   getRoleAwareQuestion: () => (/* binding */ getRoleAwareQuestion)\n/* harmony export */ });\nconst getRoleAwareQuestion = (currentCluster, roleContext, missingInsights)=>{\n    const strategicQuestions = {\n        'pain-point': {\n            'cfo': [\n                'Vilka specifika investerare har redan uttryckt oro över er rapportering?',\n                'Vad sa styrelsen när de fick höra om förseningarna?',\n                'Vilka av era finansiella leverantörer har hotat med att dra tillbaka kredit?',\n                'Hur många av era chefer har redan börjat leta efter nya jobb?',\n                'Vilka konkreta affärsmöjligheter har ni redan missat på grund av detta?'\n            ],\n            'tech': [\n                'Vilka av era utvecklare har redan börjat fråga om nya jobb?',\n                'Vad sa era största kunder när de fick höra om förseningarna?',\n                'Vilka specifika kunder har uttryckt oro över er tekniska skuld?',\n                'Hur många av era seniora utvecklare har redan sagt upp sig?',\n                'Vilka konkreta produktlanseringar har ni redan missat på grund av detta?'\n            ],\n            'sales': [\n                'Vilka av era säljare har redan börjat fråga om nya jobb?',\n                'Vad sa era största kunder när de fick höra om problemen?',\n                'Vilka specifika kunder har redan hotat med att byta leverantör?',\n                'Hur många av era account managers har redan sagt upp sig?',\n                'Vilka konkreta affärer har ni redan förlorat på grund av detta?'\n            ],\n            'operations': [\n                'Vilka av era operations-medarbetare har redan börjat fråga om nya jobb?',\n                'Vad sa era största kunder när de fick höra om leveransproblemen?',\n                'Vilka specifika kunder har redan hotat med att avsluta kontrakt?',\n                'Hur många av era kvalitetsansvariga har redan sagt upp sig?',\n                'Vilka konkreta leveransmöjligheter har ni redan missat på grund av detta?'\n            ],\n            'marketing': [\n                'Vilka av era marknadsförare har redan börjat fråga om nya jobb?',\n                'Vad sa era största kunder när de fick höra om varumärkesproblemen?',\n                'Vilka specifika kunder har redan uttryckt oro över er marknadsposition?',\n                'Hur många av era kreativa medarbetare har redan sagt upp sig?',\n                'Vilka konkreta marknadsmöjligheter har ni redan missat på grund av detta?'\n            ],\n            'hr': [\n                'Vilka av era HR-medarbetare har redan börjat fråga om nya jobb?',\n                'Vad sa era största kunder när de fick höra om personalproblemen?',\n                'Vilka specifika kunder har redan uttryckt oro över er teamstabilitet?',\n                'Hur många av era rekryterare har redan sagt upp sig?',\n                'Vilka konkreta talangmöjligheter har ni redan missat på grund av detta?'\n            ]\n        },\n        'impact-urgency': {\n            'cfo': [\n                'Vilka specifika investerare har redan sagt att de inte kommer investera i nästa runda?',\n                'Vad sa banken när de fick höra om er finansiella situation?',\n                'Hur många av era leverantörer har redan krävt förskottsbetalning?',\n                'Vilka konkreta affärsmöjligheter har ni redan förlorat på grund av dålig rapportering?',\n                'Vad sa era största kunder när de fick höra om er finansiella instabilitet?'\n            ],\n            'tech': [\n                'Vilka specifika kunder har redan sagt att de inte kommer förnya kontrakt?',\n                'Vad sa era största kunder när de fick höra om produktförseningarna?',\n                'Hur många av era utvecklare har redan fått jobberbjudanden från konkurrenter?',\n                'Vilka konkreta produktlanseringar har ni redan förlorat på grund av tekniska problem?',\n                'Vad sa era största kunder när de fick höra om er tekniska skuld?'\n            ],\n            'sales': [\n                'Vilka specifika kunder har redan sagt att de inte kommer förnya kontrakt?',\n                'Vad sa era största kunder när de fick höra om säljproblemen?',\n                'Hur många av era säljare har redan fått jobberbjudanden från konkurrenter?',\n                'Vilka konkreta affärer har ni redan förlorat på grund av dålig säljledning?',\n                'Vad sa era största kunder när de fick höra om er säljorganisation?'\n            ],\n            'operations': [\n                'Vilka specifika kunder har redan sagt att de inte kommer förnya kontrakt?',\n                'Vad sa era största kunder när de fick höra om leveransproblemen?',\n                'Hur många av era operations-medarbetare har redan fått jobberbjudanden från konkurrenter?',\n                'Vilka konkreta leveransmöjligheter har ni redan förlorat på grund av processproblem?',\n                'Vad sa era största kunder när de fick höra om er operationskapacitet?'\n            ],\n            'marketing': [\n                'Vilka specifika kunder har redan sagt att de inte kommer förnya kontrakt?',\n                'Vad sa era största kunder när de fick höra om varumärkesproblemen?',\n                'Hur många av era marknadsförare har redan fått jobberbjudanden från konkurrenter?',\n                'Vilka konkreta marknadsmöjligheter har ni redan förlorat på grund av dålig marknadsföring?',\n                'Vad sa era största kunder när de fick höra om er marknadsposition?'\n            ],\n            'hr': [\n                'Vilka specifika kunder har redan sagt att de inte kommer förnya kontrakt?',\n                'Vad sa era största kunder när de fick höra om personalproblemen?',\n                'Hur många av era HR-medarbetare har redan fått jobberbjudanden från konkurrenter?',\n                'Vilka konkreta talangmöjligheter har ni redan förlorat på grund av dålig HR-ledning?',\n                'Vad sa era största kunder när de fick höra om er teamstabilitet?'\n            ]\n        }\n    };\n    const clusterQuestions = strategicQuestions[currentCluster] || {};\n    const roleSpecificQuestions = clusterQuestions[roleContext.role] || clusterQuestions['default'] || [\n        'Vilka specifika personer har redan uttryckt oro över denna situation?',\n        'Vad sa era största kunder när de fick höra om problemet?',\n        'Hur många av era medarbetare har redan börjat leta efter nya jobb?'\n    ];\n    return roleSpecificQuestions[Math.floor(Math.random() * roleSpecificQuestions.length)];\n};\nconst getChallengerInsight = (roleContext, currentCluster, conversationHistory)=>{\n    // Try to ground the insight in last 2 user turns for relevance\n    const recentUserStatements = conversationHistory.filter((m)=>m.role === 'user').slice(-2).map((m)=>m.content.toLowerCase()).join(' \\n ');\n    // Lightweight tailoring by role with simple pattern probes\n    function tailorByRole(base) {\n        const add = (hint)=>`${base} (${hint})`;\n        if (roleContext.role === 'marketing') {\n            if (recentUserStatements.includes('varumärke') || recentUserStatements.includes('brand')) {\n                return add('direkt kopplat till varumärkesstyrka ni nämnde');\n            }\n            if (recentUserStatements.includes('mql') || recentUserStatements.includes('pipeline') || recentUserStatements.includes('leads')) {\n                return add('konsekvenser för pipeline/leads ni beskrev');\n            }\n            return add('koppla till marknadsposition och growth-momentum');\n        }\n        if (roleContext.role === 'cfo' || roleContext.department === 'finance') {\n            if (recentUserStatements.includes('ifrs') || recentUserStatements.includes('rapport')) {\n                return add('kopplat till IFRS/rapportering som ni tog upp');\n            }\n            if (recentUserStatements.includes('series') || recentUserStatements.includes('invest')) {\n                return add('konsekvenser för investerare/finansiering');\n            }\n            return add('finansiell kontroll och styrelsens förtroende');\n        }\n        if (roleContext.role === 'sales') {\n            if (recentUserStatements.includes('pipeline') || recentUserStatements.includes('konvertering')) {\n                return add('direkt effekt på pipeline och konvertering');\n            }\n            return add('intäktstakt och kundtapp');\n        }\n        if (roleContext.role === 'tech') {\n            if (recentUserStatements.includes('skuld') || recentUserStatements.includes('teknisk skuld')) {\n                return add('accelererande teknisk skuld påverkar leverans');\n            }\n            return add('skalbarhet och incidentrisk');\n        }\n        return base;\n    }\n    const challengerInsights = {\n        'pain-point': {\n            'cfo': [\n                'Jag tror att det här problemet är större än ni tror. De flesta företag i er situation har redan förlorat 2-3 nyckelpersoner.',\n                'Baserat på min erfarenhet brukar detta problem kosta företag 15-25% av deras omsättning inom 6 månader.',\n                'Jag har sett detta mönster förut - företag som väntar för länge brukar förlora sina bästa kunder först.',\n                'Det här låter som ett systemproblem, inte bara en personfråga. Har ni funderat på att omstrukturera hela funktionen?'\n            ],\n            'tech': [\n                'Jag tror att er tekniska skuld är mycket större än ni inser. De flesta team i er situation har redan förlorat sina seniora utvecklare.',\n                'Baserat på min erfarenhet brukar detta problem kosta företag 30-40% av deras produktionshastighet inom 3 månader.',\n                'Jag har sett detta mönster förut - team som väntar för länge brukar förlora sina bästa utvecklare först.',\n                'Det här låter som ett arkitekturproblem, inte bara en personfråga. Har ni funderat på att omstrukturera hela systemet?'\n            ],\n            'sales': [\n                'Jag tror att er säljorganisation är mycket mer instabil än ni tror. De flesta team i er situation har redan förlorat sina bästa säljare.',\n                'Baserat på min erfarenhet brukar detta problem kosta företag 20-30% av deras omsättning inom 4 månader.',\n                'Jag har sett detta mönster förut - säljteam som väntar för länge brukar förlora sina bästa kunder först.',\n                'Det här låter som ett organisationsproblem, inte bara en personfråga. Har ni funderat på att omstrukturera hela säljorganisationen?'\n            ],\n            'operations': [\n                'Jag tror att era processproblem är mycket allvarligare än ni tror. De flesta företag i er situation har redan förlorat sina bästa kunder.',\n                'Baserat på min erfarenhet brukar detta problem kosta företag 25-35% av deras kapacitet inom 2 månader.',\n                'Jag har sett detta mönster förut - operations som väntar för länge brukar förlora sina bästa medarbetare först.',\n                'Det här låter som ett systemproblem, inte bara en personfråga. Har ni funderat på att omstrukturera hela operations?'\n            ],\n            'marketing': [\n                'Jag tror att er marknadsposition är mycket svagare än ni tror. De flesta företag i er situation har redan förlorat marknadsandelar.',\n                'Baserat på min erfarenhet brukar detta problem kosta företag 15-25% av deras tillväxt inom 6 månader.',\n                'Jag har sett detta mönster förut - marknadsföring som väntar för länge brukar förlora sina bästa kunder först.',\n                'Det här låter som ett strategiproblem, inte bara en personfråga. Har ni funderat på att omstrukturera hela marknadsföringen?'\n            ],\n            'hr': [\n                'Jag tror att er teamstabilitet är mycket sämre än ni tror. De flesta företag i er situation har redan förlorat sina bästa medarbetare.',\n                'Baserat på min erfarenhet brukar detta problem kosta företag 20-30% av deras produktivitet inom 3 månader.',\n                'Jag har sett detta mönster förut - HR som väntar för länge brukar förlora sina bästa talanger först.',\n                'Det här låter som ett kulturproblem, inte bara en personfråga. Har ni funderat på att omstrukturera hela organisationen?'\n            ]\n        },\n        'impact-urgency': {\n            'cfo': [\n                'Jag tror att ni underskattar den finansiella påverkan. De flesta företag i er situation har redan förlorat 40-60% av sin värdering.',\n                'Baserat på min erfarenhet brukar detta problem kosta företag 2-3x mer än de initialt tror.',\n                'Jag har sett detta mönster förut - företag som väntar för länge brukar förlora sina investerare först.',\n                'Det här är inte bara ett problem, det är en existentiell kris. Har ni funderat på att ta drastiska åtgärder?'\n            ],\n            'tech': [\n                'Jag tror att ni underskattar den tekniska påverkan. De flesta team i er situation har redan förlorat 50-70% av sin produktivitet.',\n                'Baserat på min erfarenhet brukar detta problem kosta företag 3-4x mer än de initialt tror.',\n                'Jag har sett detta mönster förut - team som väntar för länge brukar förlora sina bästa utvecklare först.',\n                'Det här är inte bara ett problem, det är en teknisk kris. Har ni funderat på att ta drastiska åtgärder?'\n            ],\n            'sales': [\n                'Jag tror att ni underskattar den säljmässiga påverkan. De flesta team i er situation har redan förlorat 30-50% av sin omsättning.',\n                'Baserat på min erfarenhet brukar detta problem kosta företag 2-3x mer än de initialt tror.',\n                'Jag har sett detta mönster förut - säljteam som väntar för länge brukar förlora sina bästa kunder först.',\n                'Det här är inte bara ett problem, det är en säljkris. Har ni funderat på att ta drastiska åtgärder?'\n            ],\n            'operations': [\n                'Jag tror att ni underskattar den operativa påverkan. De flesta företag i er situation har redan förlorat 40-60% av sin kapacitet.',\n                'Baserat på min erfarenhet brukar detta problem kosta företag 2-3x mer än de initialt tror.',\n                'Jag har sett detta mönster förut - operations som väntar för länge brukar förlora sina bästa medarbetare först.',\n                'Det här är inte bara ett problem, det är en operationskris. Har ni funderat på att ta drastiska åtgärder?'\n            ],\n            'marketing': [\n                'Jag tror att ni underskattar den marknadsmässiga påverkan. De flesta företag i er situation har redan förlorat 25-40% av sin marknadsandel.',\n                'Baserat på min erfarenhet brukar detta problem kosta företag 2-3x mer än de initialt tror.',\n                'Jag har sett detta mönster förut - marknadsföring som väntar för länge brukar förlora sina bästa kunder först.',\n                'Det här är inte bara ett problem, det är en marknadskris. Har ni funderat på att ta drastiska åtgärder?'\n            ],\n            'hr': [\n                'Jag tror att ni underskattar den personalmässiga påverkan. De flesta företag i er situation har redan förlorat 30-50% av sina bästa medarbetare.',\n                'Baserat på min erfarenhet brukar detta problem kosta företag 2-3x mer än de initialt tror.',\n                'Jag har sett detta mönster förut - HR som väntar för länge brukar förlora sina bästa talanger först.',\n                'Det här är inte bara ett problem, det är en personalmässig kris. Har ni funderat på att ta drastiska åtgärder?'\n            ]\n        }\n    };\n    const clusterInsights = challengerInsights[currentCluster] || {};\n    const roleSpecificInsights = clusterInsights[roleContext.role] || clusterInsights['default'] || [\n        'Jag tror att ni underskattar problemets omfattning. De flesta företag i er situation har redan förlorat betydligt mer än de tror.',\n        'Baserat på min erfarenhet brukar detta problem kosta företag 2-3x mer än de initialt tror.',\n        'Jag har sett detta mönster förut - företag som väntar för länge brukar förlora sina bästa medarbetare först.'\n    ];\n    const base = roleSpecificInsights[Math.floor(Math.random() * roleSpecificInsights.length)];\n    return tailorByRole(base);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/questions.ts\n");

/***/ }),

/***/ "(rsc)/./lib/quick-responses.ts":
/*!********************************!*\
  !*** ./lib/quick-responses.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateQuickResponseSuggestions: () => (/* binding */ generateQuickResponseSuggestions)\n/* harmony export */ });\n/* harmony import */ var _claude_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./claude-client */ \"(rsc)/./lib/claude-client.ts\");\n\nconst generateQuickResponseSuggestions = async (roleContext, currentCluster, lastQuestion, conversationHistory)=>{\n    const lowerQ = (lastQuestion || '').toLowerCase();\n    // Build and log a role-aware prompt (for future LLM usage)\n    const recentTurns = conversationHistory.slice(-3).map((m)=>`${m.role}: ${m.content}`).join('\\n');\n    const fullPrompt = `You are helping generate quick-response suggestions for a ${roleContext.role} (${roleContext.seniority}) recruitment conversation.\\n\\nThe EXACT question just asked was:\\n'${lastQuestion}'\\n\\nRole context: ${roleContext.role}, ${roleContext.seniority}, ${roleContext.department}\\n\\nPrevious conversation context:\\n${recentTurns}\\n\\nGenerate 3 short (under 10 words) response options that:\\n1. DIRECTLY ANSWER the specific question: '${lastQuestion}'\\n2. Are appropriate for a ${roleContext.role} recruitment context\\n3. Reflect realistic challenges for this role level\\n\\nExamples for CFO:\\n- If asked about actions: \"Försökt förbättra forecasting\", \"Anlitat interim konsult\"\\n- If asked about consequences: \"Förlorade två investerare\", \"Board försenade beslut\"\\n\\nReturn only 3 suggestions, one per line, no formatting.`;\n    console.log('🔍 QUICK RESPONSES - roleContext:', roleContext);\n    console.log('🔍 QUICK RESPONSES - currentCluster:', currentCluster);\n    console.log('🔍 QUICK RESPONSES - lastQuestion:', lastQuestion);\n    console.log('🔍 QUICK RESPONSES - recentTurns:', recentTurns);\n    console.log('🔍 QUICK RESPONSE PROMPT:', fullPrompt);\n    // Try LLM (Haiku/Sonnet) generation with 1.5s timeout and fallback to heuristics\n    try {\n        // Small in-memory cache by question hash to reduce repeated calls\n        const key = `qr:${roleContext.role}:${currentCluster}:${lastQuestion.trim().toLowerCase()}`;\n        const now = Date.now();\n        const cached = global.__QR_CACHE__?.[key];\n        if (cached && now - cached.t < 5 * 60 * 1000) {\n            console.log('🔍 QUICK RESPONSES - Using cached LLM result for key:', key);\n            const lines = cached.text.split(/\\r?\\n/).map((s)=>s.trim()).filter(Boolean);\n            const cleaned = lines.map((l)=>l.replace(/^[-*\\d\\.\\)\\s]+/, '')).filter((l)=>l.length > 0 && l.length <= 80).slice(0, 3);\n            if (cleaned.length >= 2) {\n                console.log('🔍 FINAL QUICK RESPONSES (llm, cached):', cleaned);\n                return cleaned;\n            }\n        }\n        const userOnly = [\n            {\n                role: 'user',\n                content: fullPrompt,\n                timestamp: new Date().toISOString()\n            }\n        ];\n        const llmPromise = (0,_claude_client__WEBPACK_IMPORTED_MODULE_0__.chatWithClaude)(userOnly, 'You generate quick-response options per the user content.', {\n            model: process.env.CLAUDE_HAIKU_MODEL || 'claude-3-haiku-20240307',\n            timeoutMs: 2500\n        });\n        const withShortTimeout = new Promise((resolve, reject)=>{\n            const id = setTimeout(()=>reject(new Error('LLM quick-responses timeout after 2500ms')), 2500);\n            llmPromise.then((res)=>{\n                clearTimeout(id);\n                resolve(res);\n            }).catch((err)=>{\n                clearTimeout(id);\n                reject(err);\n            });\n        });\n        const llmResult = await withShortTimeout;\n        const raw = llmResult.text || '';\n        console.log('🔍 HAIKU RAW RESPONSE:', raw);\n        const lines = raw.split(/\\r?\\n/).map((s)=>s.trim()).filter(Boolean);\n        // Keep first 3 short answers, strip bullets/numbering\n        const cleaned = lines.map((l)=>l.replace(/^[-*\\d\\.\\)\\s]+/, '')).filter((l)=>l.length > 0 && l.length <= 80).slice(0, 3);\n        // Save to cache\n        try {\n            global.__QR_CACHE__ = global.__QR_CACHE__ || {};\n            global.__QR_CACHE__[key] = {\n                t: now,\n                text: raw\n            };\n        } catch  {}\n        if (cleaned.length >= 2) {\n            console.log('🔍 FINAL QUICK RESPONSES (llm):', cleaned);\n            return cleaned;\n        }\n        console.log('🔍 QUICK RESPONSES - LLM returned insufficient lines, falling back');\n    } catch (err) {\n        console.warn('⚠️ QUICK RESPONSES - LLM generation failed/timeout, using heuristics:', err?.message || err);\n    }\n    // Heuristic question intent detection\n    const intent = {\n        consequences: /(konsekven|vad hände|vilka följder|utfall|resultat)/.test(lowerQ),\n        quantification: /(hur mycket|hur många|belopp|kronor|procent|€|kr|%)/.test(lowerQ),\n        timing: /(när|tidsram|hur länge|månad|vecka|kvartal|år)/.test(lowerQ),\n        stakeholders: /(vilka|vem|vilka kunder|investerare|styrelsen|team|leverantörer)/.test(lowerQ),\n        actions: /(hur hanterade|vad gjorde ni|vilka åtgärder)/.test(lowerQ)\n    };\n    // Context-aware templates that directly answer the asked question\n    const contextualTemplates = {\n        'pain-point': {\n            'cfo': [\n                'Vi förlorade två stora kunder.',\n                'Kassaflödet blev kaotiskt i 6 månader.',\n                'Investerare försenade Series B med ett kvartal.'\n            ],\n            'tech': [\n                'Två produktlanseringar sköts upp.',\n                'Teamets hastighet sjönk cirka 30%.',\n                'Två seniora utvecklare lämnade teamet.'\n            ],\n            'sales': [\n                'Vi tappade tre enterprise-affärer.',\n                'Pipeline-konverteringen föll från 22% till 14%.',\n                'Två nyckelkunder valde konkurrent.'\n            ],\n            'operations': [\n                'Leveransprecisionen föll under 90%.',\n                'Tre större kunder eskalerade kvalitetsärenden.',\n                'Vi behövde pausa nykundsintag i 4 veckor.'\n            ],\n            'marketing': [\n                'Vår organiska trafik minskade ~20% på 3 månader.',\n                'Två kampanjer fick pausas p.g.a. brist på ledning.',\n                'Varumärkes-NPS föll 8 punkter i senaste mätningen.'\n            ],\n            'hr': [\n                'Frivillig churn ökade från 10% till 18%.',\n                'Tre nyckelrekryteringar försenades >60 dagar.',\n                'Två team rapporterade tydlig kulturförsämring.'\n            ]\n        }\n    };\n    // If the question asks for consequences/effects, answer with concrete outcomes\n    if (intent.consequences) {\n        const roleSet = contextualTemplates[currentCluster]?.[roleContext.role] || contextualTemplates['pain-point']?.[roleContext.role];\n        if (roleSet) {\n            const selectedSuggestions = roleSet.slice(0, 3);\n            console.log('🔍 FINAL QUICK RESPONSES (consequences):', selectedSuggestions);\n            return selectedSuggestions;\n        }\n    }\n    // If the question asks for quantification, produce numeric-tailored answers\n    if (intent.quantification) {\n        const byRole = {\n            'cfo': [\n                '~2–3 MSEK påverkan per kvartal',\n                'Rapporter försenade 4–6 veckor',\n                'Bruttomarginal -2 p.p. sedan Q2'\n            ],\n            'tech': [\n                '~30% lägre velocity i 2 sprintar',\n                'Buggtakten ökade ~25%',\n                '2 planerade releaser försenade'\n            ],\n            'sales': [\n                'Pipeline -20% QoQ',\n                'Win-rate föll från 22% → 15%',\n                'Genomsnittlig säljcykel +3 veckor'\n            ],\n            'operations': [\n                'OTD föll till 88% i två månader',\n                'Felprocent +1.5 p.p.',\n                'Kundärenden +30% volym'\n            ],\n            'marketing': [\n                'MQL -18% under Q3',\n                'CAC +12% under sommaren',\n                'NPS -6p senaste mätning'\n            ],\n            'hr': [\n                'Time-to-hire +25 dagar',\n                'Churn +6 p.p. i Q2',\n                'Kandidatinflöde -15%'\n            ]\n        };\n        const selectedSuggestions = (byRole[roleContext.role] || byRole['cfo']).slice(0, 3);\n        console.log('🔍 FINAL QUICK RESPONSES (quantification):', selectedSuggestions);\n        return selectedSuggestions;\n    }\n    // If the question asks for actions/how handled, give action-focused answers\n    if (intent.actions) {\n        const byRole = {\n            'cfo': [\n                'Vi införde veckovisa kassaflödesprognoser',\n                'Vi hyrde in interim CFO i 8 veckor',\n                'Vi standardiserade månadsstängning'\n            ],\n            'tech': [\n                'Vi frös nya features i två sprintar',\n                'Vi skapade en skuld-backlog med SLA',\n                'Vi tillsatte tech lead i interim'\n            ],\n            'sales': [\n                'Vi renodlade ICP och stängde icke-core',\n                'Vi införde deal-reviews veckovis',\n                'Vi omfördelade konton efter kapacitet'\n            ],\n            'operations': [\n                'Vi körde 8D-rotorsaksanalys',\n                'Vi kortade batchstorlekar',\n                'Vi dubblerade QA i två veckor'\n            ],\n            'marketing': [\n                'Vi stoppade låg-ROI-kampanjer',\n                'Vi fokuserade på 2 kanaler',\n                'Vi uppdaterade budskap mot ICP'\n            ],\n            'hr': [\n                'Vi prioriterade kritiska roller',\n                'Vi förbättrade referral-programmet',\n                'Vi stramade upp intervjuprocessen'\n            ]\n        };\n        const selectedSuggestions = (byRole[roleContext.role] || byRole['cfo']).slice(0, 3);\n        console.log('🔍 FINAL QUICK RESPONSES (actions):', selectedSuggestions);\n        return selectedSuggestions;\n    }\n    // Fall back to previous role/cluster generic suggestions (but trimmed to be outcome-oriented)\n    const suggestions = {\n        'pain-point': {\n            'cfo': [\n                'Vi förlorar viktiga investerare',\n                'Styrelsen är orolig',\n                'Vi missar affärsmöjligheter',\n                'Banken hotar med att dra tillbaka kredit',\n                'Vi kan inte fatta snabba beslut'\n            ],\n            'tech': [\n                'Vi förlorar viktiga kunder',\n                'Teamet börjar tvivla',\n                'Konkurrenter tar marknadsandelar',\n                'Vi missar produktlanseringar',\n                'Utvecklare börjar leta nya jobb'\n            ],\n            'sales': [\n                'Vi förlorar viktiga kunder',\n                'Säljteamet är demoraliserat',\n                'Konkurrenter tar marknadsandelar',\n                'Vi missar försäljningsmål',\n                'Säljare börjar leta nya jobb'\n            ],\n            'operations': [\n                'Vi förlorar viktiga kunder',\n                'Teamet är överbelastat',\n                'Kvaliteten sjunker',\n                'Vi missar leveransdeadlines',\n                'Medarbetare börjar leta nya jobb'\n            ],\n            'marketing': [\n                'Vi förlorar marknadsandelar',\n                'Teamet saknar riktning',\n                'Konkurrenter tar över',\n                'Vi missar tillväxtmöjligheter',\n                'Marknadsförare börjar leta nya jobb'\n            ],\n            'hr': [\n                'Vi förlorar viktiga talanger',\n                'Teamet är demoraliserat',\n                'Kulturen försämras',\n                'Vi missar rekryteringsmål',\n                'HR-medarbetare börjar leta nya jobb'\n            ]\n        },\n        'impact-urgency': {\n            'cfo': [\n                'Vi förlorar 2-3 miljoner per månad',\n                'Investerare hotar att dra sig ur',\n                'Vi missar nästa finansieringsrunda',\n                'Banken kräver förskottsbetalning',\n                'Vi kan inte växa som planerat'\n            ],\n            'tech': [\n                'Vi förlorar 30% av produktionshastigheten',\n                'Kunder hotar att avsluta kontrakt',\n                'Vi missar produktlanseringar',\n                'Konkurrenter tar över marknaden',\n                'Vi kan inte leverera nya funktioner'\n            ],\n            'sales': [\n                'Vi förlorar 25% av omsättningen',\n                'Kunder hotar att byta leverantör',\n                'Vi missar försäljningsmål',\n                'Konkurrenter tar över kunder',\n                'Vi kan inte växa som planerat'\n            ],\n            'operations': [\n                'Vi förlorar 20% av kapaciteten',\n                'Kunder hotar att avsluta kontrakt',\n                'Vi missar leveransdeadlines',\n                'Kvaliteten sjunker drastiskt',\n                'Vi kan inte hantera tillväxten'\n            ],\n            'marketing': [\n                'Vi förlorar 15% av marknadsandelen',\n                'Kunder börjar välja konkurrenter',\n                'Vi missar tillväxtmöjligheter',\n                'Varumärket försvagas',\n                'Vi kan inte konkurrera effektivt'\n            ],\n            'hr': [\n                'Vi förlorar 20% av produktiviteten',\n                'Talanger börjar lämna företaget',\n                'Vi missar rekryteringsmål',\n                'Kulturen försämras snabbt',\n                'Vi kan inte bygga teamet'\n            ]\n        }\n    };\n    const clusterSuggestions = suggestions[currentCluster] || {};\n    const roleSuggestions = clusterSuggestions[roleContext.role] || clusterSuggestions['default'] || [\n        'Vi förlorar viktiga kunder',\n        'Teamet börjar tvivla',\n        'Konkurrenter tar marknadsandelar'\n    ];\n    const shuffled = roleSuggestions.sort(()=>0.5 - Math.random());\n    const finalSuggestions = shuffled.slice(0, 3);\n    console.log('🔍 FINAL QUICK RESPONSES (fallback):', finalSuggestions);\n    return finalSuggestions;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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NEM7Z0JBQW9DO2dCQUErQjtnQkFBa0M7YUFBc0M7WUFDaE0sU0FBUztnQkFBQztnQkFBa0M7Z0JBQW1DO2dCQUE0QjtnQkFBK0I7YUFBZ0M7WUFDMUssY0FBYztnQkFBQztnQkFBaUM7Z0JBQW9DO2dCQUE4QjtnQkFBK0I7YUFBaUM7WUFDbEwsYUFBYTtnQkFBQztnQkFBcUM7Z0JBQW1DO2dCQUFnQztnQkFBdUI7YUFBbUM7WUFDaEwsTUFBTTtnQkFBQztnQkFBcUM7Z0JBQWtDO2dCQUE0QjtnQkFBNEI7YUFBMkI7UUFDbEs7SUFDRDtJQUVBLE1BQU1DLHFCQUFxQkQsV0FBVyxDQUFDdkUsZUFBZSxJQUFJLENBQUM7SUFDM0QsTUFBTXlFLGtCQUFrQkQsa0JBQWtCLENBQUN6RSxZQUFZVSxJQUFJLENBQUMsSUFBSStELGtCQUFrQixDQUFDLFVBQVUsSUFBSTtRQUNoRztRQUE2QjtRQUF1QjtLQUNwRDtJQUVELE1BQU1FLFdBQVdELGdCQUFnQkUsSUFBSSxDQUFDLElBQU0sTUFBTUMsS0FBS0MsTUFBTTtJQUM3RCxNQUFNQyxtQkFBbUJKLFNBQVNwRSxLQUFLLENBQUMsR0FBRztJQUMzQ1MsUUFBUUMsR0FBRyxDQUFDLHdDQUF3QzhEO0lBQ3BELE9BQU9BO0FBQ1IsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL3JlY3RhLy4vbGliL3F1aWNrLXJlc3BvbnNlcy50cz83YzE2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENsdXN0ZXJUeXBlIH0gZnJvbSAnLi9jbHVzdGVycyc7XG5pbXBvcnQgeyBDb252ZXJzYXRpb25NZXNzYWdlLCBSb2xlQ29udGV4dCB9IGZyb20gJy4vZW5naW5lLXR5cGVzJztcbmltcG9ydCB7IGNoYXRXaXRoQ2xhdWRlIH0gZnJvbSAnLi9jbGF1ZGUtY2xpZW50JztcblxuZXhwb3J0IGNvbnN0IGdlbmVyYXRlUXVpY2tSZXNwb25zZVN1Z2dlc3Rpb25zID0gYXN5bmMgKFxuXHRyb2xlQ29udGV4dDogUm9sZUNvbnRleHQsXG5cdGN1cnJlbnRDbHVzdGVyOiBDbHVzdGVyVHlwZSxcblx0bGFzdFF1ZXN0aW9uOiBzdHJpbmcsXG5cdGNvbnZlcnNhdGlvbkhpc3Rvcnk6IENvbnZlcnNhdGlvbk1lc3NhZ2VbXVxuKTogUHJvbWlzZTxzdHJpbmdbXT4gPT4ge1xuICAgIGNvbnN0IGxvd2VyUSA9IChsYXN0UXVlc3Rpb24gfHwgJycpLnRvTG93ZXJDYXNlKCk7XG5cbiAgICAvLyBCdWlsZCBhbmQgbG9nIGEgcm9sZS1hd2FyZSBwcm9tcHQgKGZvciBmdXR1cmUgTExNIHVzYWdlKVxuICAgIGNvbnN0IHJlY2VudFR1cm5zID0gY29udmVyc2F0aW9uSGlzdG9yeS5zbGljZSgtMykubWFwKG0gPT4gYCR7bS5yb2xlfTogJHttLmNvbnRlbnR9YCkuam9pbignXFxuJyk7XG4gICAgY29uc3QgZnVsbFByb21wdCA9IGBZb3UgYXJlIGhlbHBpbmcgZ2VuZXJhdGUgcXVpY2stcmVzcG9uc2Ugc3VnZ2VzdGlvbnMgZm9yIGEgJHtyb2xlQ29udGV4dC5yb2xlfSAoJHtyb2xlQ29udGV4dC5zZW5pb3JpdHl9KSByZWNydWl0bWVudCBjb252ZXJzYXRpb24uXFxuXFxuVGhlIEVYQUNUIHF1ZXN0aW9uIGp1c3QgYXNrZWQgd2FzOlxcbicke2xhc3RRdWVzdGlvbn0nXFxuXFxuUm9sZSBjb250ZXh0OiAke3JvbGVDb250ZXh0LnJvbGV9LCAke3JvbGVDb250ZXh0LnNlbmlvcml0eX0sICR7cm9sZUNvbnRleHQuZGVwYXJ0bWVudH1cXG5cXG5QcmV2aW91cyBjb252ZXJzYXRpb24gY29udGV4dDpcXG4ke3JlY2VudFR1cm5zfVxcblxcbkdlbmVyYXRlIDMgc2hvcnQgKHVuZGVyIDEwIHdvcmRzKSByZXNwb25zZSBvcHRpb25zIHRoYXQ6XFxuMS4gRElSRUNUTFkgQU5TV0VSIHRoZSBzcGVjaWZpYyBxdWVzdGlvbjogJyR7bGFzdFF1ZXN0aW9ufSdcXG4yLiBBcmUgYXBwcm9wcmlhdGUgZm9yIGEgJHtyb2xlQ29udGV4dC5yb2xlfSByZWNydWl0bWVudCBjb250ZXh0XFxuMy4gUmVmbGVjdCByZWFsaXN0aWMgY2hhbGxlbmdlcyBmb3IgdGhpcyByb2xlIGxldmVsXFxuXFxuRXhhbXBsZXMgZm9yIENGTzpcXG4tIElmIGFza2VkIGFib3V0IGFjdGlvbnM6IFwiRsO2cnPDtmt0IGbDtnJiw6R0dHJhIGZvcmVjYXN0aW5nXCIsIFwiQW5saXRhdCBpbnRlcmltIGtvbnN1bHRcIlxcbi0gSWYgYXNrZWQgYWJvdXQgY29uc2VxdWVuY2VzOiBcIkbDtnJsb3JhZGUgdHbDpSBpbnZlc3RlcmFyZVwiLCBcIkJvYXJkIGbDtnJzZW5hZGUgYmVzbHV0XCJcXG5cXG5SZXR1cm4gb25seSAzIHN1Z2dlc3Rpb25zLCBvbmUgcGVyIGxpbmUsIG5vIGZvcm1hdHRpbmcuYDtcbiAgICBjb25zb2xlLmxvZygn8J+UjSBRVUlDSyBSRVNQT05TRVMgLSByb2xlQ29udGV4dDonLCByb2xlQ29udGV4dCk7XG4gICAgY29uc29sZS5sb2coJ/CflI0gUVVJQ0sgUkVTUE9OU0VTIC0gY3VycmVudENsdXN0ZXI6JywgY3VycmVudENsdXN0ZXIpO1xuICAgIGNvbnNvbGUubG9nKCfwn5SNIFFVSUNLIFJFU1BPTlNFUyAtIGxhc3RRdWVzdGlvbjonLCBsYXN0UXVlc3Rpb24pO1xuICAgIGNvbnNvbGUubG9nKCfwn5SNIFFVSUNLIFJFU1BPTlNFUyAtIHJlY2VudFR1cm5zOicsIHJlY2VudFR1cm5zKTtcblx0Y29uc29sZS5sb2coJ/CflI0gUVVJQ0sgUkVTUE9OU0UgUFJPTVBUOicsIGZ1bGxQcm9tcHQpO1xuXG5cdC8vIFRyeSBMTE0gKEhhaWt1L1Nvbm5ldCkgZ2VuZXJhdGlvbiB3aXRoIDEuNXMgdGltZW91dCBhbmQgZmFsbGJhY2sgdG8gaGV1cmlzdGljc1xuICAgIHRyeSB7XG4gICAgICAgIC8vIFNtYWxsIGluLW1lbW9yeSBjYWNoZSBieSBxdWVzdGlvbiBoYXNoIHRvIHJlZHVjZSByZXBlYXRlZCBjYWxsc1xuICAgICAgICBjb25zdCBrZXkgPSBgcXI6JHtyb2xlQ29udGV4dC5yb2xlfToke2N1cnJlbnRDbHVzdGVyfToke2xhc3RRdWVzdGlvbi50cmltKCkudG9Mb3dlckNhc2UoKX1gO1xuICAgICAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpO1xuICAgICAgICBjb25zdCBjYWNoZWQgPSAoZ2xvYmFsIGFzIGFueSkuX19RUl9DQUNIRV9fPy5ba2V5XTtcbiAgICAgICAgaWYgKGNhY2hlZCAmJiAobm93IC0gY2FjaGVkLnQpIDwgNSAqIDYwICogMTAwMCkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ/CflI0gUVVJQ0sgUkVTUE9OU0VTIC0gVXNpbmcgY2FjaGVkIExMTSByZXN1bHQgZm9yIGtleTonLCBrZXkpO1xuICAgICAgICAgICAgY29uc3QgbGluZXMgPSAoY2FjaGVkLnRleHQgYXMgc3RyaW5nKS5zcGxpdCgvXFxyP1xcbi8pLm1hcCgoczogc3RyaW5nKSA9PiBzLnRyaW0oKSkuZmlsdGVyKEJvb2xlYW4pO1xuICAgICAgICAgICAgY29uc3QgY2xlYW5lZCA9IGxpbmVzLm1hcCgobDogc3RyaW5nKSA9PiBsLnJlcGxhY2UoL15bLSpcXGRcXC5cXClcXHNdKy8sICcnKSkuZmlsdGVyKChsOiBzdHJpbmcpID0+IGwubGVuZ3RoID4gMCAmJiBsLmxlbmd0aCA8PSA4MCkuc2xpY2UoMCwgMyk7XG4gICAgICAgICAgICBpZiAoY2xlYW5lZC5sZW5ndGggPj0gMikge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCfwn5SNIEZJTkFMIFFVSUNLIFJFU1BPTlNFUyAobGxtLCBjYWNoZWQpOicsIGNsZWFuZWQpO1xuICAgICAgICAgICAgICAgIHJldHVybiBjbGVhbmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgdXNlck9ubHkgPSBbeyByb2xlOiAndXNlcicgYXMgY29uc3QsIGNvbnRlbnQ6IGZ1bGxQcm9tcHQsIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpIH1dO1xuICAgICAgICBjb25zdCBsbG1Qcm9taXNlID0gY2hhdFdpdGhDbGF1ZGUodXNlck9ubHksICdZb3UgZ2VuZXJhdGUgcXVpY2stcmVzcG9uc2Ugb3B0aW9ucyBwZXIgdGhlIHVzZXIgY29udGVudC4nLCB7IG1vZGVsOiBwcm9jZXNzLmVudi5DTEFVREVfSEFJS1VfTU9ERUwgfHwgJ2NsYXVkZS0zLWhhaWt1LTIwMjQwMzA3JywgdGltZW91dE1zOiAyNTAwIH0pO1xuICAgICAgICBjb25zdCB3aXRoU2hvcnRUaW1lb3V0ID0gbmV3IFByb21pc2U8aW1wb3J0KCcuL2NsYXVkZS1jbGllbnQnKS5DbGF1ZGVDaGF0UmVzdWx0PigocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICBjb25zdCBpZCA9IHNldFRpbWVvdXQoKCkgPT4gcmVqZWN0KG5ldyBFcnJvcignTExNIHF1aWNrLXJlc3BvbnNlcyB0aW1lb3V0IGFmdGVyIDI1MDBtcycpKSwgMjUwMCk7XG4gICAgICAgICAgICBsbG1Qcm9taXNlLnRoZW4ocmVzID0+IHsgY2xlYXJUaW1lb3V0KGlkKTsgcmVzb2x2ZShyZXMpOyB9KS5jYXRjaChlcnIgPT4geyBjbGVhclRpbWVvdXQoaWQpOyByZWplY3QoZXJyKTsgfSk7XG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCBsbG1SZXN1bHQgPSBhd2FpdCB3aXRoU2hvcnRUaW1lb3V0O1xuXHRcdGNvbnN0IHJhdyA9IGxsbVJlc3VsdC50ZXh0IHx8ICcnO1xuXHRcdGNvbnNvbGUubG9nKCfwn5SNIEhBSUtVIFJBVyBSRVNQT05TRTonLCByYXcpO1xuXHRcdGNvbnN0IGxpbmVzID0gcmF3LnNwbGl0KC9cXHI/XFxuLykubWFwKHMgPT4gcy50cmltKCkpLmZpbHRlcihCb29sZWFuKTtcblx0XHQvLyBLZWVwIGZpcnN0IDMgc2hvcnQgYW5zd2Vycywgc3RyaXAgYnVsbGV0cy9udW1iZXJpbmdcblx0XHRjb25zdCBjbGVhbmVkID0gbGluZXNcblx0XHRcdC5tYXAobCA9PiBsLnJlcGxhY2UoL15bLSpcXGRcXC5cXClcXHNdKy8sICcnKSlcblx0XHRcdC5maWx0ZXIobCA9PiBsLmxlbmd0aCA+IDAgJiYgbC5sZW5ndGggPD0gODApXG5cdFx0XHQuc2xpY2UoMCwgMyk7XG4gICAgICAgIC8vIFNhdmUgdG8gY2FjaGVcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIChnbG9iYWwgYXMgYW55KS5fX1FSX0NBQ0hFX18gPSAoZ2xvYmFsIGFzIGFueSkuX19RUl9DQUNIRV9fIHx8IHt9O1xuICAgICAgICAgICAgKGdsb2JhbCBhcyBhbnkpLl9fUVJfQ0FDSEVfX1trZXldID0geyB0OiBub3csIHRleHQ6IHJhdyB9O1xuICAgICAgICB9IGNhdGNoIHt9XG5cdFx0aWYgKGNsZWFuZWQubGVuZ3RoID49IDIpIHtcblx0XHRcdGNvbnNvbGUubG9nKCfwn5SNIEZJTkFMIFFVSUNLIFJFU1BPTlNFUyAobGxtKTonLCBjbGVhbmVkKTtcblx0XHRcdHJldHVybiBjbGVhbmVkO1xuXHRcdH1cblx0XHRjb25zb2xlLmxvZygn8J+UjSBRVUlDSyBSRVNQT05TRVMgLSBMTE0gcmV0dXJuZWQgaW5zdWZmaWNpZW50IGxpbmVzLCBmYWxsaW5nIGJhY2snKTtcblx0fSBjYXRjaCAoZXJyOiBhbnkpIHtcblx0XHRjb25zb2xlLndhcm4oJ+KaoO+4jyBRVUlDSyBSRVNQT05TRVMgLSBMTE0gZ2VuZXJhdGlvbiBmYWlsZWQvdGltZW91dCwgdXNpbmcgaGV1cmlzdGljczonLCBlcnI/Lm1lc3NhZ2UgfHwgZXJyKTtcblx0fVxuXG5cdC8vIEhldXJpc3RpYyBxdWVzdGlvbiBpbnRlbnQgZGV0ZWN0aW9uXG5cdGNvbnN0IGludGVudCA9IHtcblx0XHRjb25zZXF1ZW5jZXM6IC8oa29uc2VrdmVufHZhZCBow6RuZGV8dmlsa2EgZsO2bGpkZXJ8dXRmYWxsfHJlc3VsdGF0KS8udGVzdChsb3dlclEpLFxuXHRcdHF1YW50aWZpY2F0aW9uOiAvKGh1ciBteWNrZXR8aHVyIG3DpW5nYXxiZWxvcHB8a3Jvbm9yfHByb2NlbnR84oKsfGtyfCUpLy50ZXN0KGxvd2VyUSksXG5cdFx0dGltaW5nOiAvKG7DpHJ8dGlkc3JhbXxodXIgbMOkbmdlfG3DpW5hZHx2ZWNrYXxrdmFydGFsfMOlcikvLnRlc3QobG93ZXJRKSxcblx0XHRzdGFrZWhvbGRlcnM6IC8odmlsa2F8dmVtfHZpbGthIGt1bmRlcnxpbnZlc3RlcmFyZXxzdHlyZWxzZW58dGVhbXxsZXZlcmFudMO2cmVyKS8udGVzdChsb3dlclEpLFxuXHRcdGFjdGlvbnM6IC8oaHVyIGhhbnRlcmFkZXx2YWQgZ2pvcmRlIG5pfHZpbGthIMOldGfDpHJkZXIpLy50ZXN0KGxvd2VyUSlcblx0fTtcblxuXHQvLyBDb250ZXh0LWF3YXJlIHRlbXBsYXRlcyB0aGF0IGRpcmVjdGx5IGFuc3dlciB0aGUgYXNrZWQgcXVlc3Rpb25cblx0Y29uc3QgY29udGV4dHVhbFRlbXBsYXRlczogUmVjb3JkPHN0cmluZywgUmVjb3JkPHN0cmluZywgc3RyaW5nW10+PiA9IHtcblx0XHQncGFpbi1wb2ludCc6IHtcblx0XHRcdCdjZm8nOiBbXG5cdFx0XHRcdCdWaSBmw7ZybG9yYWRlIHR2w6Ugc3RvcmEga3VuZGVyLicsXG5cdFx0XHRcdCdLYXNzYWZsw7ZkZXQgYmxldiBrYW90aXNrdCBpIDYgbcOlbmFkZXIuJyxcblx0XHRcdFx0J0ludmVzdGVyYXJlIGbDtnJzZW5hZGUgU2VyaWVzIEIgbWVkIGV0dCBrdmFydGFsLidcblx0XHRcdF0sXG5cdFx0XHQndGVjaCc6IFtcblx0XHRcdFx0J1R2w6UgcHJvZHVrdGxhbnNlcmluZ2FyIHNrw7Z0cyB1cHAuJyxcblx0XHRcdFx0J1RlYW1ldHMgaGFzdGlnaGV0IHNqw7ZuayBjaXJrYSAzMCUuJyxcblx0XHRcdFx0J1R2w6Ugc2VuaW9yYSB1dHZlY2tsYXJlIGzDpG1uYWRlIHRlYW1ldC4nXG5cdFx0XHRdLFxuXHRcdFx0J3NhbGVzJzogW1xuXHRcdFx0XHQnVmkgdGFwcGFkZSB0cmUgZW50ZXJwcmlzZS1hZmbDpHJlci4nLFxuXHRcdFx0XHQnUGlwZWxpbmUta29udmVydGVyaW5nZW4gZsO2bGwgZnLDpW4gMjIlIHRpbGwgMTQlLicsXG5cdFx0XHRcdCdUdsOlIG55Y2tlbGt1bmRlciB2YWxkZSBrb25rdXJyZW50Lidcblx0XHRcdF0sXG5cdFx0XHQnb3BlcmF0aW9ucyc6IFtcblx0XHRcdFx0J0xldmVyYW5zcHJlY2lzaW9uZW4gZsO2bGwgdW5kZXIgOTAlLicsXG5cdFx0XHRcdCdUcmUgc3TDtnJyZSBrdW5kZXIgZXNrYWxlcmFkZSBrdmFsaXRldHPDpHJlbmRlbi4nLFxuXHRcdFx0XHQnVmkgYmVow7Z2ZGUgcGF1c2EgbnlrdW5kc2ludGFnIGkgNCB2ZWNrb3IuJ1xuXHRcdFx0XSxcblx0XHRcdCdtYXJrZXRpbmcnOiBbXG5cdFx0XHRcdCdWw6VyIG9yZ2FuaXNrYSB0cmFmaWsgbWluc2thZGUgfjIwJSBww6UgMyBtw6VuYWRlci4nLFxuXHRcdFx0XHQnVHbDpSBrYW1wYW5qZXIgZmljayBwYXVzYXMgcC5nLmEuIGJyaXN0IHDDpSBsZWRuaW5nLicsXG5cdFx0XHRcdCdWYXJ1bcOkcmtlcy1OUFMgZsO2bGwgOCBwdW5rdGVyIGkgc2VuYXN0ZSBtw6R0bmluZ2VuLidcblx0XHRcdF0sXG5cdFx0XHQnaHInOiBbXG5cdFx0XHRcdCdGcml2aWxsaWcgY2h1cm4gw7ZrYWRlIGZyw6VuIDEwJSB0aWxsIDE4JS4nLFxuXHRcdFx0XHQnVHJlIG55Y2tlbHJla3J5dGVyaW5nYXIgZsO2cnNlbmFkZXMgPjYwIGRhZ2FyLicsXG5cdFx0XHRcdCdUdsOlIHRlYW0gcmFwcG9ydGVyYWRlIHR5ZGxpZyBrdWx0dXJmw7Zyc8OkbXJpbmcuJ1xuXHRcdFx0XVxuXHRcdH1cblx0fTtcblxuXHQvLyBJZiB0aGUgcXVlc3Rpb24gYXNrcyBmb3IgY29uc2VxdWVuY2VzL2VmZmVjdHMsIGFuc3dlciB3aXRoIGNvbmNyZXRlIG91dGNvbWVzXG5cdGlmIChpbnRlbnQuY29uc2VxdWVuY2VzKSB7XG5cdFx0Y29uc3Qgcm9sZVNldCA9IGNvbnRleHR1YWxUZW1wbGF0ZXNbY3VycmVudENsdXN0ZXJdPy5bcm9sZUNvbnRleHQucm9sZV0gfHwgY29udGV4dHVhbFRlbXBsYXRlc1sncGFpbi1wb2ludCddPy5bcm9sZUNvbnRleHQucm9sZV07XG5cdFx0aWYgKHJvbGVTZXQpIHtcblx0XHRcdGNvbnN0IHNlbGVjdGVkU3VnZ2VzdGlvbnMgPSByb2xlU2V0LnNsaWNlKDAsIDMpO1xuXHRcdFx0Y29uc29sZS5sb2coJ/CflI0gRklOQUwgUVVJQ0sgUkVTUE9OU0VTIChjb25zZXF1ZW5jZXMpOicsIHNlbGVjdGVkU3VnZ2VzdGlvbnMpO1xuXHRcdFx0cmV0dXJuIHNlbGVjdGVkU3VnZ2VzdGlvbnM7XG4gICAgICAgIH1cblx0fVxuXG5cdC8vIElmIHRoZSBxdWVzdGlvbiBhc2tzIGZvciBxdWFudGlmaWNhdGlvbiwgcHJvZHVjZSBudW1lcmljLXRhaWxvcmVkIGFuc3dlcnNcblx0aWYgKGludGVudC5xdWFudGlmaWNhdGlvbikge1xuXHRcdGNvbnN0IGJ5Um9sZTogUmVjb3JkPHN0cmluZywgc3RyaW5nW10+ID0ge1xuXHRcdFx0J2Nmbyc6IFsnfjLigJMzIE1TRUsgcMOldmVya2FuIHBlciBrdmFydGFsJywnUmFwcG9ydGVyIGbDtnJzZW5hZGUgNOKAkzYgdmVja29yJywnQnJ1dHRvbWFyZ2luYWwgLTIgcC5wLiBzZWRhbiBRMiddLFxuXHRcdFx0J3RlY2gnOiBbJ34zMCUgbMOkZ3JlIHZlbG9jaXR5IGkgMiBzcHJpbnRhcicsJ0J1Z2d0YWt0ZW4gw7ZrYWRlIH4yNSUnLCcyIHBsYW5lcmFkZSByZWxlYXNlciBmw7Zyc2VuYWRlJ10sXG5cdFx0XHQnc2FsZXMnOiBbJ1BpcGVsaW5lIC0yMCUgUW9RJywnV2luLXJhdGUgZsO2bGwgZnLDpW4gMjIlIOKGkiAxNSUnLCdHZW5vbXNuaXR0bGlnIHPDpGxqY3lrZWwgKzMgdmVja29yJ10sXG5cdFx0XHQnb3BlcmF0aW9ucyc6IFsnT1REIGbDtmxsIHRpbGwgODglIGkgdHbDpSBtw6VuYWRlcicsJ0ZlbHByb2NlbnQgKzEuNSBwLnAuJywnS3VuZMOkcmVuZGVuICszMCUgdm9seW0nXSxcblx0XHRcdCdtYXJrZXRpbmcnOiBbJ01RTCAtMTglIHVuZGVyIFEzJywnQ0FDICsxMiUgdW5kZXIgc29tbWFyZW4nLCdOUFMgLTZwIHNlbmFzdGUgbcOkdG5pbmcnXSxcblx0XHRcdCdocic6IFsnVGltZS10by1oaXJlICsyNSBkYWdhcicsJ0NodXJuICs2IHAucC4gaSBRMicsJ0thbmRpZGF0aW5mbMO2ZGUgLTE1JSddXG5cdFx0fTtcblx0XHRjb25zdCBzZWxlY3RlZFN1Z2dlc3Rpb25zID0gKGJ5Um9sZVtyb2xlQ29udGV4dC5yb2xlXSB8fCBieVJvbGVbJ2NmbyddKS5zbGljZSgwLCAzKTtcblx0XHRjb25zb2xlLmxvZygn8J+UjSBGSU5BTCBRVUlDSyBSRVNQT05TRVMgKHF1YW50aWZpY2F0aW9uKTonLCBzZWxlY3RlZFN1Z2dlc3Rpb25zKTtcblx0XHRyZXR1cm4gc2VsZWN0ZWRTdWdnZXN0aW9ucztcblx0fVxuXG5cdC8vIElmIHRoZSBxdWVzdGlvbiBhc2tzIGZvciBhY3Rpb25zL2hvdyBoYW5kbGVkLCBnaXZlIGFjdGlvbi1mb2N1c2VkIGFuc3dlcnNcblx0aWYgKGludGVudC5hY3Rpb25zKSB7XG5cdFx0Y29uc3QgYnlSb2xlOiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmdbXT4gPSB7XG5cdFx0XHQnY2ZvJzogWydWaSBpbmbDtnJkZSB2ZWNrb3Zpc2Ega2Fzc2FmbMO2ZGVzcHJvZ25vc2VyJywnVmkgaHlyZGUgaW4gaW50ZXJpbSBDRk8gaSA4IHZlY2tvcicsJ1ZpIHN0YW5kYXJkaXNlcmFkZSBtw6VuYWRzc3TDpG5nbmluZyddLFxuXHRcdFx0J3RlY2gnOiBbJ1ZpIGZyw7ZzIG55YSBmZWF0dXJlcyBpIHR2w6Ugc3ByaW50YXInLCdWaSBza2FwYWRlIGVuIHNrdWxkLWJhY2tsb2cgbWVkIFNMQScsJ1ZpIHRpbGxzYXR0ZSB0ZWNoIGxlYWQgaSBpbnRlcmltJ10sXG5cdFx0XHQnc2FsZXMnOiBbJ1ZpIHJlbm9kbGFkZSBJQ1Agb2NoIHN0w6RuZ2RlIGlja2UtY29yZScsJ1ZpIGluZsO2cmRlIGRlYWwtcmV2aWV3cyB2ZWNrb3ZpcycsJ1ZpIG9tZsO2cmRlbGFkZSBrb250b24gZWZ0ZXIga2FwYWNpdGV0J10sXG5cdFx0XHQnb3BlcmF0aW9ucyc6IFsnVmkga8O2cmRlIDhELXJvdG9yc2Frc2FuYWx5cycsJ1ZpIGtvcnRhZGUgYmF0Y2hzdG9ybGVrYXInLCdWaSBkdWJibGVyYWRlIFFBIGkgdHbDpSB2ZWNrb3InXSxcblx0XHRcdCdtYXJrZXRpbmcnOiBbJ1ZpIHN0b3BwYWRlIGzDpWctUk9JLWthbXBhbmplcicsJ1ZpIGZva3VzZXJhZGUgcMOlIDIga2FuYWxlcicsJ1ZpIHVwcGRhdGVyYWRlIGJ1ZHNrYXAgbW90IElDUCddLFxuXHRcdFx0J2hyJzogWydWaSBwcmlvcml0ZXJhZGUga3JpdGlza2Egcm9sbGVyJywnVmkgZsO2cmLDpHR0cmFkZSByZWZlcnJhbC1wcm9ncmFtbWV0JywnVmkgc3RyYW1hZGUgdXBwIGludGVydmp1cHJvY2Vzc2VuJ11cblx0XHR9O1xuXHRcdGNvbnN0IHNlbGVjdGVkU3VnZ2VzdGlvbnMgPSAoYnlSb2xlW3JvbGVDb250ZXh0LnJvbGVdIHx8IGJ5Um9sZVsnY2ZvJ10pLnNsaWNlKDAsIDMpO1xuXHRcdGNvbnNvbGUubG9nKCfwn5SNIEZJTkFMIFFVSUNLIFJFU1BPTlNFUyAoYWN0aW9ucyk6Jywgc2VsZWN0ZWRTdWdnZXN0aW9ucyk7XG5cdFx0cmV0dXJuIHNlbGVjdGVkU3VnZ2VzdGlvbnM7XG5cdH1cblxuXHQvLyBGYWxsIGJhY2sgdG8gcHJldmlvdXMgcm9sZS9jbHVzdGVyIGdlbmVyaWMgc3VnZ2VzdGlvbnMgKGJ1dCB0cmltbWVkIHRvIGJlIG91dGNvbWUtb3JpZW50ZWQpXG5cdGNvbnN0IHN1Z2dlc3Rpb25zOiBSZWNvcmQ8c3RyaW5nLCBSZWNvcmQ8c3RyaW5nLCBzdHJpbmdbXT4+ID0ge1xuXHRcdCdwYWluLXBvaW50Jzoge1xuXHRcdFx0J2Nmbyc6IFsnVmkgZsO2cmxvcmFyIHZpa3RpZ2EgaW52ZXN0ZXJhcmUnLCdTdHlyZWxzZW4gw6RyIG9yb2xpZycsJ1ZpIG1pc3NhciBhZmbDpHJzbcO2amxpZ2hldGVyJywnQmFua2VuIGhvdGFyIG1lZCBhdHQgZHJhIHRpbGxiYWthIGtyZWRpdCcsJ1ZpIGthbiBpbnRlIGZhdHRhIHNuYWJiYSBiZXNsdXQnXSxcblx0XHRcdCd0ZWNoJzogWydWaSBmw7ZybG9yYXIgdmlrdGlnYSBrdW5kZXInLCdUZWFtZXQgYsO2cmphciB0dml2bGEnLCdLb25rdXJyZW50ZXIgdGFyIG1hcmtuYWRzYW5kZWxhcicsJ1ZpIG1pc3NhciBwcm9kdWt0bGFuc2VyaW5nYXInLCdVdHZlY2tsYXJlIGLDtnJqYXIgbGV0YSBueWEgam9iYiddLFxuXHRcdFx0J3NhbGVzJzogWydWaSBmw7ZybG9yYXIgdmlrdGlnYSBrdW5kZXInLCdTw6RsanRlYW1ldCDDpHIgZGVtb3JhbGlzZXJhdCcsJ0tvbmt1cnJlbnRlciB0YXIgbWFya25hZHNhbmRlbGFyJywnVmkgbWlzc2FyIGbDtnJzw6Rsam5pbmdzbcOlbCcsJ1PDpGxqYXJlIGLDtnJqYXIgbGV0YSBueWEgam9iYiddLFxuXHRcdFx0J29wZXJhdGlvbnMnOiBbJ1ZpIGbDtnJsb3JhciB2aWt0aWdhIGt1bmRlcicsJ1RlYW1ldCDDpHIgw7Z2ZXJiZWxhc3RhdCcsJ0t2YWxpdGV0ZW4gc2p1bmtlcicsJ1ZpIG1pc3NhciBsZXZlcmFuc2RlYWRsaW5lcycsJ01lZGFyYmV0YXJlIGLDtnJqYXIgbGV0YSBueWEgam9iYiddLFxuXHRcdFx0J21hcmtldGluZyc6IFsnVmkgZsO2cmxvcmFyIG1hcmtuYWRzYW5kZWxhcicsJ1RlYW1ldCBzYWtuYXIgcmlrdG5pbmcnLCdLb25rdXJyZW50ZXIgdGFyIMO2dmVyJywnVmkgbWlzc2FyIHRpbGx2w6R4dG3DtmpsaWdoZXRlcicsJ01hcmtuYWRzZsO2cmFyZSBiw7ZyamFyIGxldGEgbnlhIGpvYmInXSxcblx0XHRcdCdocic6IFsnVmkgZsO2cmxvcmFyIHZpa3RpZ2EgdGFsYW5nZXInLCdUZWFtZXQgw6RyIGRlbW9yYWxpc2VyYXQnLCdLdWx0dXJlbiBmw7Zyc8OkbXJhcycsJ1ZpIG1pc3NhciByZWtyeXRlcmluZ3Ntw6VsJywnSFItbWVkYXJiZXRhcmUgYsO2cmphciBsZXRhIG55YSBqb2JiJ11cblx0XHR9LFxuXHRcdCdpbXBhY3QtdXJnZW5jeSc6IHtcblx0XHRcdCdjZm8nOiBbJ1ZpIGbDtnJsb3JhciAyLTMgbWlsam9uZXIgcGVyIG3DpW5hZCcsJ0ludmVzdGVyYXJlIGhvdGFyIGF0dCBkcmEgc2lnIHVyJywnVmkgbWlzc2FyIG7DpHN0YSBmaW5hbnNpZXJpbmdzcnVuZGEnLCdCYW5rZW4ga3LDpHZlciBmw7Zyc2tvdHRzYmV0YWxuaW5nJywnVmkga2FuIGludGUgdsOkeGEgc29tIHBsYW5lcmF0J10sXG5cdFx0XHQndGVjaCc6IFsnVmkgZsO2cmxvcmFyIDMwJSBhdiBwcm9kdWt0aW9uc2hhc3RpZ2hldGVuJywnS3VuZGVyIGhvdGFyIGF0dCBhdnNsdXRhIGtvbnRyYWt0JywnVmkgbWlzc2FyIHByb2R1a3RsYW5zZXJpbmdhcicsJ0tvbmt1cnJlbnRlciB0YXIgw7Z2ZXIgbWFya25hZGVuJywnVmkga2FuIGludGUgbGV2ZXJlcmEgbnlhIGZ1bmt0aW9uZXInXSxcblx0XHRcdCdzYWxlcyc6IFsnVmkgZsO2cmxvcmFyIDI1JSBhdiBvbXPDpHR0bmluZ2VuJywnS3VuZGVyIGhvdGFyIGF0dCBieXRhIGxldmVyYW50w7ZyJywnVmkgbWlzc2FyIGbDtnJzw6Rsam5pbmdzbcOlbCcsJ0tvbmt1cnJlbnRlciB0YXIgw7Z2ZXIga3VuZGVyJywnVmkga2FuIGludGUgdsOkeGEgc29tIHBsYW5lcmF0J10sXG5cdFx0XHQnb3BlcmF0aW9ucyc6IFsnVmkgZsO2cmxvcmFyIDIwJSBhdiBrYXBhY2l0ZXRlbicsJ0t1bmRlciBob3RhciBhdHQgYXZzbHV0YSBrb250cmFrdCcsJ1ZpIG1pc3NhciBsZXZlcmFuc2RlYWRsaW5lcycsJ0t2YWxpdGV0ZW4gc2p1bmtlciBkcmFzdGlza3QnLCdWaSBrYW4gaW50ZSBoYW50ZXJhIHRpbGx2w6R4dGVuJ10sXG5cdFx0XHQnbWFya2V0aW5nJzogWydWaSBmw7ZybG9yYXIgMTUlIGF2IG1hcmtuYWRzYW5kZWxlbicsJ0t1bmRlciBiw7ZyamFyIHbDpGxqYSBrb25rdXJyZW50ZXInLCdWaSBtaXNzYXIgdGlsbHbDpHh0bcO2amxpZ2hldGVyJywnVmFydW3DpHJrZXQgZsO2cnN2YWdhcycsJ1ZpIGthbiBpbnRlIGtvbmt1cnJlcmEgZWZmZWt0aXZ0J10sXG5cdFx0XHQnaHInOiBbJ1ZpIGbDtnJsb3JhciAyMCUgYXYgcHJvZHVrdGl2aXRldGVuJywnVGFsYW5nZXIgYsO2cmphciBsw6RtbmEgZsO2cmV0YWdldCcsJ1ZpIG1pc3NhciByZWtyeXRlcmluZ3Ntw6VsJywnS3VsdHVyZW4gZsO2cnPDpG1yYXMgc25hYmJ0JywnVmkga2FuIGludGUgYnlnZ2EgdGVhbWV0J11cblx0XHR9XG5cdH07XG5cblx0Y29uc3QgY2x1c3RlclN1Z2dlc3Rpb25zID0gc3VnZ2VzdGlvbnNbY3VycmVudENsdXN0ZXJdIHx8IHt9O1xuXHRjb25zdCByb2xlU3VnZ2VzdGlvbnMgPSBjbHVzdGVyU3VnZ2VzdGlvbnNbcm9sZUNvbnRleHQucm9sZV0gfHwgY2x1c3RlclN1Z2dlc3Rpb25zWydkZWZhdWx0J10gfHwgW1xuXHRcdCdWaSBmw7ZybG9yYXIgdmlrdGlnYSBrdW5kZXInLCdUZWFtZXQgYsO2cmphciB0dml2bGEnLCdLb25rdXJyZW50ZXIgdGFyIG1hcmtuYWRzYW5kZWxhcidcblx0XTtcblxuXHRjb25zdCBzaHVmZmxlZCA9IHJvbGVTdWdnZXN0aW9ucy5zb3J0KCgpID0+IDAuNSAtIE1hdGgucmFuZG9tKCkpO1xuXHRjb25zdCBmaW5hbFN1Z2dlc3Rpb25zID0gc2h1ZmZsZWQuc2xpY2UoMCwgMyk7XG5cdGNvbnNvbGUubG9nKCfwn5SNIEZJTkFMIFFVSUNLIFJFU1BPTlNFUyAoZmFsbGJhY2spOicsIGZpbmFsU3VnZ2VzdGlvbnMpO1xuXHRyZXR1cm4gZmluYWxTdWdnZXN0aW9ucztcbn07XG5cblxuIl0sIm5hbWVzIjpbImNoYXRXaXRoQ2xhdWRlIiwiZ2VuZXJhdGVRdWlja1Jlc3BvbnNlU3VnZ2VzdGlvbnMiLCJyb2xlQ29udGV4dCIsImN1cnJlbnRDbHVzdGVyIiwibGFzdFF1ZXN0aW9uIiwiY29udmVyc2F0aW9uSGlzdG9yeSIsImxvd2VyUSIsInRvTG93ZXJDYXNlIiwicmVjZW50VHVybnMiLCJzbGljZSIsIm1hcCIsIm0iLCJyb2xlIiwiY29udGVudCIsImpvaW4iLCJmdWxsUHJvbXB0Iiwic2VuaW9yaXR5IiwiZGVwYXJ0bWVudCIsImNvbnNvbGUiLCJsb2ciLCJrZXkiLCJ0cmltIiwibm93IiwiRGF0ZSIsImNhY2hlZCIsImdsb2JhbCIsIl9fUVJfQ0FDSEVfXyIsInQiLCJsaW5lcyIsInRleHQiLCJzcGxpdCIsInMiLCJmaWx0ZXIiLCJCb29sZWFuIiwiY2xlYW5lZCIsImwiLCJyZXBsYWNlIiwibGVuZ3RoIiwidXNlck9ubHkiLCJ0aW1lc3RhbXAiLCJ0b0lTT1N0cmluZyIsImxsbVByb21pc2UiLCJtb2RlbCIsInByb2Nlc3MiLCJlbnYiLCJDTEFVREVfSEFJS1VfTU9ERUwiLCJ0aW1lb3V0TXMiLCJ3aXRoU2hvcnRUaW1lb3V0IiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJpZCIsInNldFRpbWVvdXQiLCJFcnJvciIsInRoZW4iLCJyZXMiLCJjbGVhclRpbWVvdXQiLCJjYXRjaCIsImVyciIsImxsbVJlc3VsdCIsInJhdyIsIndhcm4iLCJtZXNzYWdlIiwiaW50ZW50IiwiY29uc2VxdWVuY2VzIiwidGVzdCIsInF1YW50aWZpY2F0aW9uIiwidGltaW5nIiwic3Rha2Vob2xkZXJzIiwiYWN0aW9ucyIsImNvbnRleHR1YWxUZW1wbGF0ZXMiLCJyb2xlU2V0Iiwic2VsZWN0ZWRTdWdnZXN0aW9ucyIsImJ5Um9sZSIsInN1Z2dlc3Rpb25zIiwiY2x1c3RlclN1Z2dlc3Rpb25zIiwicm9sZVN1Z2dlc3Rpb25zIiwic2h1ZmZsZWQiLCJzb3J0IiwiTWF0aCIsInJhbmRvbSIsImZpbmFsU3VnZ2VzdGlvbnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./lib/quick-responses.ts\n");

/***/ }),

/***/ "(rsc)/./lib/role-detection.ts":
/*!*******************************!*\
  !*** ./lib/role-detection.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   detectRoleContext: () => (/* binding */ detectRoleContext)\n/* harmony export */ });\nconst detectRoleContext = (messages)=>{\n    const userMessages = messages.filter((m)=>m.role === 'user');\n    const allText = userMessages.map((m)=>m.content).join(' ').toLowerCase();\n    console.log('🔍 ROLE DETECTION - Analyzing user messages only:', allText);\n    const rolePatterns = {\n        'sales-manager': [\n            'säljchef',\n            'försäljningschef',\n            'sales manager',\n            'säljansvarig'\n        ],\n        'sales': [\n            'säljare',\n            'sales',\n            'account manager',\n            'försäljning',\n            'säljteam'\n        ],\n        'cmo': [\n            'cmo',\n            'marknadschef',\n            'chief marketing officer'\n        ],\n        'cfo': [\n            'cfo',\n            'finanschef',\n            'ekonomichef',\n            'chief financial officer'\n        ],\n        'finance': [\n            'ekonom',\n            'controller',\n            'redovisning',\n            'finans',\n            'budget'\n        ],\n        'cto': [\n            'cto',\n            'chief technology officer',\n            'teknikchef'\n        ],\n        'tech-lead': [\n            'tech lead',\n            'utvecklingschef',\n            'technical lead',\n            'arkitekt'\n        ],\n        'tech': [\n            'utvecklare',\n            'developer',\n            'engineer',\n            'programmerare',\n            'tech',\n            'it'\n        ],\n        'coo': [\n            'coo',\n            'chief operating officer',\n            'verkställande chef'\n        ],\n        'operations-manager': [\n            'operations manager',\n            'driftschef',\n            'processchef'\n        ],\n        'operations': [\n            'operations',\n            'drift',\n            'process',\n            'leverans',\n            'kvalitet'\n        ],\n        'marketing-manager': [\n            'marknadschef',\n            'marketing manager'\n        ],\n        'marketing': [\n            'marknadsföring',\n            'marketing',\n            'varumärke',\n            'brand'\n        ],\n        'chro': [\n            'chro',\n            'chief human resources officer'\n        ],\n        'hr-manager': [\n            'hr-chef',\n            'personalchef',\n            'hr manager'\n        ],\n        'hr': [\n            'hr',\n            'personal',\n            'rekrytering',\n            'anställning'\n        ]\n    };\n    const seniorityPatterns = {\n        'junior': [\n            'junior',\n            'nybörjare',\n            'entry',\n            'trainee',\n            'assistent'\n        ],\n        'mid': [\n            'medior',\n            'erfaren',\n            'senior',\n            'specialist'\n        ],\n        'senior': [\n            'senior',\n            'expert',\n            'ledande',\n            'chef'\n        ],\n        'executive': [\n            'chef',\n            'director',\n            'vp',\n            'chief',\n            'ceo',\n            'cto',\n            'cfo',\n            'cmo',\n            'coo'\n        ]\n    };\n    const departmentPatterns = {\n        'finance': [\n            'finans',\n            'ekonomi',\n            'redovisning',\n            'budget',\n            'controller'\n        ],\n        'tech': [\n            'utveckling',\n            'teknik',\n            'it',\n            'system',\n            'programmering'\n        ],\n        'sales': [\n            'försäljning',\n            'sälj',\n            'kund',\n            'pipeline',\n            'revenue'\n        ],\n        'operations': [\n            'drift',\n            'process',\n            'leverans',\n            'kvalitet',\n            'effektivitet'\n        ],\n        'marketing': [\n            'marknadsföring',\n            'marketing',\n            'varumärke',\n            'brand',\n            'tillväxt'\n        ],\n        'hr': [\n            'personal',\n            'hr',\n            'rekrytering',\n            'anställning',\n            'team'\n        ]\n    };\n    let detectedRole = 'default';\n    let maxMatches = 0;\n    let matchedPatterns = [];\n    const salesRoleTerms = [\n        'säljchef',\n        'försäljningschef',\n        'säljansvarig',\n        'sales manager'\n    ];\n    const hasSalesRoleTerms = salesRoleTerms.some((term)=>allText.includes(term));\n    if (hasSalesRoleTerms) {\n        console.log('🔍 ROLE DETECTION - Sales terms detected, prioritizing sales roles');\n        const salesRoles = [\n            'sales-manager',\n            'sales'\n        ];\n        for (const role of salesRoles){\n            const patterns = rolePatterns[role];\n            const matches = patterns.filter((pattern)=>allText.includes(pattern));\n            if (matches.length > 0) {\n                detectedRole = role;\n                matchedPatterns = matches;\n                console.log(`🔍 ROLE DETECTION - Sales role detected: ${role}, patterns: ${matches.join(', ')}`);\n                break;\n            }\n        }\n    } else {\n        const techRoleTerms = [\n            'tech lead',\n            'utvecklingschef',\n            'cto',\n            'chief technology officer',\n            'teknikchef'\n        ];\n        const financeRoleTerms = [\n            'cfo',\n            'finanschef',\n            'ekonomichef',\n            'chief financial officer'\n        ];\n        const marketingRoleTerms = [\n            'cmo',\n            'marknadschef',\n            'chief marketing officer'\n        ];\n        const hrRoleTerms = [\n            'hr-chef',\n            'personalchef',\n            'hr manager',\n            'chro',\n            'chief human resources officer'\n        ];\n        const operationsRoleTerms = [\n            'operations manager',\n            'driftschef',\n            'processchef',\n            'coo',\n            'chief operating officer'\n        ];\n        if (techRoleTerms.some((term)=>allText.includes(term))) {\n            console.log('🔍 ROLE DETECTION - Tech role terms detected, prioritizing tech roles');\n            const techRoles = [\n                'cto',\n                'tech-lead',\n                'tech'\n            ];\n            for (const role of techRoles){\n                const patterns = rolePatterns[role];\n                const matches = patterns.filter((pattern)=>allText.includes(pattern));\n                if (matches.length > 0) {\n                    detectedRole = role;\n                    matchedPatterns = matches;\n                    break;\n                }\n            }\n        } else if (financeRoleTerms.some((term)=>allText.includes(term))) {\n            console.log('🔍 ROLE DETECTION - Finance role terms detected, prioritizing finance roles');\n            const financeRoles = [\n                'cfo',\n                'finance'\n            ];\n            for (const role of financeRoles){\n                const patterns = rolePatterns[role];\n                const matches = patterns.filter((pattern)=>allText.includes(pattern));\n                if (matches.length > 0) {\n                    detectedRole = role;\n                    matchedPatterns = matches;\n                    break;\n                }\n            }\n        } else if (marketingRoleTerms.some((term)=>allText.includes(term))) {\n            console.log('🔍 ROLE DETECTION - Marketing role terms detected, prioritizing marketing roles');\n            const marketingRoles = [\n                'cmo',\n                'marketing-manager',\n                'marketing'\n            ];\n            for (const role of marketingRoles){\n                const patterns = rolePatterns[role];\n                const matches = patterns.filter((pattern)=>allText.includes(pattern));\n                if (matches.length > 0) {\n                    detectedRole = role;\n                    matchedPatterns = matches;\n                    break;\n                }\n            }\n        } else if (hrRoleTerms.some((term)=>allText.includes(term))) {\n            console.log('🔍 ROLE DETECTION - HR role terms detected, prioritizing HR roles');\n            const hrRoles = [\n                'chro',\n                'hr-manager',\n                'hr'\n            ];\n            for (const role of hrRoles){\n                const patterns = rolePatterns[role];\n                const matches = patterns.filter((pattern)=>allText.includes(pattern));\n                if (matches.length > 0) {\n                    detectedRole = role;\n                    matchedPatterns = matches;\n                    break;\n                }\n            }\n        } else if (operationsRoleTerms.some((term)=>allText.includes(term))) {\n            console.log('🔍 ROLE DETECTION - Operations role terms detected, prioritizing operations roles');\n            const operationsRoles = [\n                'coo',\n                'operations-manager',\n                'operations'\n            ];\n            for (const role of operationsRoles){\n                const patterns = rolePatterns[role];\n                const matches = patterns.filter((pattern)=>allText.includes(pattern));\n                if (matches.length > 0) {\n                    detectedRole = role;\n                    matchedPatterns = matches;\n                    break;\n                }\n            }\n        } else {\n            for (const [role, patterns] of Object.entries(rolePatterns)){\n                const matches = patterns.filter((pattern)=>allText.includes(pattern));\n                if (matches.length > maxMatches) {\n                    maxMatches = matches.length;\n                    detectedRole = role;\n                    matchedPatterns = matches;\n                }\n            }\n        }\n        console.log(`🔍 ROLE DETECTION - Role detected: ${detectedRole}, patterns: ${matchedPatterns.join(', ')}`);\n    }\n    let detectedSeniority = 'mid';\n    for (const [seniority, patterns] of Object.entries(seniorityPatterns)){\n        if (patterns.some((pattern)=>allText.includes(pattern))) {\n            detectedSeniority = seniority;\n            break;\n        }\n    }\n    let detectedDepartment = 'general';\n    const roleToDepartment = {\n        'sales-manager': 'sales',\n        'sales': 'sales',\n        'cmo': 'marketing',\n        'cfo': 'finance',\n        'finance': 'finance',\n        'cto': 'tech',\n        'tech-lead': 'tech',\n        'tech': 'tech',\n        'coo': 'operations',\n        'operations-manager': 'operations',\n        'operations': 'operations',\n        'marketing-manager': 'marketing',\n        'marketing': 'marketing',\n        'chro': 'hr',\n        'hr-manager': 'hr',\n        'hr': 'hr'\n    };\n    if (roleToDepartment[detectedRole]) {\n        detectedDepartment = roleToDepartment[detectedRole];\n    } else {\n        for (const [department, patterns] of Object.entries(departmentPatterns)){\n            if (patterns.some((pattern)=>allText.includes(pattern))) {\n                detectedDepartment = department;\n                break;\n            }\n        }\n    }\n    const result = {\n        role: detectedRole,\n        seniority: detectedSeniority,\n        department: detectedDepartment\n    };\n    console.log('🔍 ROLE DETECTION - Final result:', result);\n    return result;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/role-detection.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@anthropic-ai"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Farena%2Fchat%2Froute&page=%2Fapi%2Farena%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Farena%2Fchat%2Froute.ts&appDir=%2FUsers%2Fchristoffersundberg%2Frecta-v2%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fchristoffersundberg%2Frecta-v2&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();